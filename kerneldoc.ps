%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: introduction.dvi
%%Pages: 14
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o introduction.ps introduction.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2000.09.27:1140
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks 97 - Version 97, 93/05/07.
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
% END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (introduction.dvi)
@start
%DVIPSBitmapFont: Fa ectt0900 9 5
/Fa 5 117 df<007FB512F8B612FCA46C14F81E067C7E27>95 D<3801FFE0000713F848
13FE486D7E81EBC07FEC0FE0380F8007D802007FC71203A2EB07FF137F0003B5FC120F5A
383FFC03EA7FE0130012FE5AA46C1307007F130FEBC07F6CB612C06C15E07E000313F83A
007FC03FC023207D9F27>97 D<EC1FF84A7EA3141F1400A9EB0FF0EB7FFC48B5FC5A5A38
0FF81F381FE007383FC003EB8001EA7F00007E1300A212FE5AA67E007E1301A2007F1303
7EEB8007381FE00F380FF03F6CB612E06C15F06C5B38007FF890391FE07FE0242E7EAD27
>100 D<397FE07F8039FFF1FFE001F713F890B57E6C800003EBC0FF9138007F8001FCEB
1FC049130F16E0491307A216F01503A615076D14E0A2150F6DEB1FC06D133F6DEB7F8091
38C1FF00ECFFFE5D01F75B01F313E0D9F07FC7FC91C8FCAC387FFF80B57EA36C5B243180
9F27>112 D<133C137EA8007FB512F0B612F8A36C14F0D8007EC7FCAE1518157EA415FE
6D13FC1483ECFFF86D13F06D13E0010313C0010013001F297EA827>116
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb ecti0900 9 6
/Fb 6 115 df<B8128017C0A217802A047C703B>95 D<EB03F0EB0FF890383E1C609038
7C0FF0EBF807EA01F0EA03E00007EB03E0EA0FC0A2381F800715C0EA3F00A2140F481480
127EA2141F00FE14005A1506EC3F07EC3E0F150E147E007C141EECFE1CEB01FCD83C0313
3C393E07BE38391F0E1E783907FC0FF03901F003C0202278A027>97
D<EB03F8EB0FFEEB3E0F9038F807803801F003EA03E0EA07C0120FEA1F801407D83F0013
005C007E133EEB03F8387FFFE04848C7FC00FCC8FCA45AA4EC0180EC03C0A2007CEB0780
EC1F00003C133E6C13F8381F03E03807FF80D801FCC7FC1A2277A023>101
D<2703C003F8137F3C0FF00FFE01FFC03C1E783C1F07C1E03C1C7CF00F8F01F03B3C3DE0
079E0026383FC001FC7FD97F805B007001005B5E137ED8F0FC90380FC00100E05FD860F8
148012000001021F130360491400A200034A13076049013E130FF081800007027EEC83C0
051F138049017C1403A2000F02FC1407053E130049495CEF1E0E001F01015D183C010049
EB0FF0000E6D48EB03E03A227AA03F>109 D<011E137C90387F81FF9039F3C387C09039
E3EF03E03901E1FE01D9C1FC13F0EBC3F8000313F0018314F814E0EA07871307000313C0
1200010F130316F01480A2011F130716E01400A249EB0FC0A2013EEB1F80A2017EEB3F00
017F133E5D5D9038FF81F09038FDC3E09038F8FF80027EC7FC000190C8FCA25BA21203A2
5BA21207A25BB5FCA325307FA027>112 D<3903C00FC0390FF03FF0391E78F078391C7D
E03C393C3FC0FC00381380EB7F00007814F8D8707E13701500EAF0FC12E0EA60F8120012
01A25BA21203A25BA21207A25BA2120FA25BA2121FA290C8FC120E1E227AA020>114
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc ecrm0900 9 32
/Fc 32 121 df<91393FE00FE0903A01FFF83FF8903A07E01EF83C903A1F800FF07E903A
3F001FE0FE017E133F4914C0485A1738484890381F8000ACB812C0A33B03F0001F8000B3
A7486C497EB50083B5FCA32F357FB42D>27 D<EC1FE0ECFFFC903803F01E90390FC00780
EB1F8090393F000FC0017E131F5BA2485AED0F8092C7FCA9ED0FC0B7FCA33901F8001F15
0FB3A6486CEB1FE0267FFFC1B5FCA328357FB42B>I<EC1FF891B512C0903803F00F9038
0FC01FEB1F80EB3F00137E5B150F485AACB7FCA33901F8000FB3A7486CEB1FE0267FFFE3
B5FCA328357FB42B>I<DA1FE013FF9126FFFC0713E0903B03F01E1F80F0903B0FC0077E
003CD91F805B90273F001FF8137E017E4A13FE495CA248485C030F147C95C7FCA9187EB9
12FEA33B01F8000FC000187EB3A6486C496C13FF297FFFC1FFFE0F13F8A33D357FB440>
I<123C127EB4FCA21380A2127F123D1201A412031300A25A1206120E120C121C5A5A1260
09177A8715>44 D<123C127E12FFA4127E123C08087A8715>46 D<EB0FE0EB7FFCEBF83E
3903E00F803907C007C0EB8003000F14E0391F0001F0A24814F8A2003E1300007E14FCA5
00FE14FEB2007E14FCA56CEB01F8A36C14F0A2390F8003E03907C007C0A23903E00F8039
00F83E00EB7FFCEB0FE01F347DB126>48 D<EB3FC0EBFFF0000313FC380F80FF391E007F
80001CEB3FC048EB1FE048130F15F00060130712FC6C14F87E1403A3007E1307123CC7FC
15F0A2140F15E0EC1FC0A2EC3F801500147E5C495A5C495A495A495A49C7FC133E133C49
13185B485A48481330485A48C7FC001C1470001FB512F05A5AB612E0A31D327CB126>50
D<EC01C0A214031407A2140F141FA2143F147F146F14CF1301EB038F140F1307130E130C
131C13381330137013E013C0EA0180120313001206120E120C5A123812305A12E0B71280
A3C7380FC000A94A7E0107B51280A321337EB226>52 D<D8FFFE91381FFFF87F80C60300
13006E143CD9DFE01418EBCFF0A2EBC7F8EBC3FCA2EBC1FEEBC0FF6E7EA26E7E6E7EA26E
7E6E7E6E7EA26E7E6E7EA2ED7F80ED3FC0ED1FE0A2ED0FF0ED07F8A2ED03FCED01FEED00
FFA2EE7F98EE3FD8A2EE1FF8160F1607A216031601A2486C1400D807F81578B500C01438
A2171835337EB23A>78 D<007FB712FEA390398007F001D87C00EC003E0078161E007016
0EA20060160600E01607A3481603A6C71500B3AB4A7E011FB512FCA330337DB237>84
D<EB7F803803FFF0380F80FC381C003E003F133F6D6C7E6E7EA26E7EEA1F00C7FCA4EB01
FF131FEBFF873803FC07EA0FF0EA1FC0EA3F80127F13004815C05AA3140FA26C131F6C13
3B3A3F8071F180391FC1E1FF2607FFC013003900FE003C22237DA126>97
D<EA03F012FFA312071203AEEC3F80ECFFE09038F3C0F89038F7007E01FE7F49EB1F8049
EB0FC05BED07E016F0A2150316F8AA16F0150716E0A2ED0FC07F6DEB1F8001ECEB3F0001
CF137C90388381F8903801FFE0C76CC7FC25357EB32B>I<EB07F8EB3FFF9038FC07C039
01F000E03903E003F03807C007120FEA1F80123F90380003E04890C7FCA2127E12FEAA12
7FA26C14187F001F14386D1330000F14706C6C13E03903F001C03900FC0F8090383FFE00
EB07F01D237EA122>I<153FEC0FFFA3EC007F81AEEB07F0EB3FFCEBFC0F3901F003BF39
07E001FF48487E48487F8148C7FCA25A127E12FEAA127E127FA27E6C6C5BA26C6C5B6C6C
4813803A03F007BFFC3900F81E3FEB3FFCD90FE0130026357DB32B>I<EB0FE0EB7FFCEB
F83F3903F00F80D807E013C0390FC007E0381F800315F0EA3F0014014814F8127EA212FE
A2B6FCA248C8FCA5127E127FA26C1418A26C6C1338000F14306D13706C6C13E03901F003
C03900FC0F00EB3FFEEB07F01D237EA122>I<EB01FCEB07FF90381F078090383E0FC0EB
7C1F13FCEA01F8A20003EB070049C7FCACB512F0A3D803F0C7FCB3A7487E387FFFE0A31A
357FB417>I<151F90391FC07F809039FFF8E3C03901F07FC73907E03F033A0FC01F8380
9039800F8000001F80EB00074880A66C5CEB800F000F5CEBC01F6C6C48C7FCEBF07C380E
FFF8380C1FC0001CC9FCA3121EA2121F380FFFFEECFFC06C14F06C14FC4880381F000100
3EEB007F4880ED1F8048140FA56C141F007C15006C143E6C5C390FC001F83903F007E0C6
B51280D91FFCC7FC22337EA126>I<EA03F012FFA312071203AEEC1FC0EC7FF09038F1E0
FC9038F3807C9038F7007E13FE497FA25BA25BB3486CEB7F80B538C7FFFCA326347EB32B
>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCAAEA07E012FFA3120F1207B3A6EA0FF0
B5FCA310337EB215>I<EA03F012FFA312071203AF913803FFE0A36E1300EC00F8EC01E0
5D4A5A020FC7FC141C5C5C14F0EBF3F8EBF7FC13FEEBFC7EEBF87F496C7E141F6E7E8114
076E7E8114016E7E81486CEBFF80B500C313F0A324347EB329>107
D<EA07E012FFA3120F1207B3B3A7EA0FF0B5FCA310347EB315>I<2703F01FE013FF00FF
90267FF80313C0903BF1E07C0F03E0903BF3803E1C01F02807F7003F387FD803FE147049
6D486C7EA2495CA2495CB3486C496C487EB53BC7FFFE3FFFF0A33C217EA041>I<3903F0
1FC000FFEB7FF09038F1E0FC9038F3807C3907F7007EEA03FE497FA25BA25BB3486CEB7F
80B538C7FFFCA326217EA02B>I<EB07F0EB3FFE9038FC1F803901F007C03903C001E000
078048486C7E48C7127CA248147E003E143E007E143FA300FE1580A8007E1500A36C147E
A26C147C6D13FC6C6C485A00075C3903F007E03900FC1F80D93FFEC7FCEB07F021237EA1
26>I<3903F03F8000FFEBFFE09038F3C0F89038F7007ED807FE7F6C48EB1F804914C049
130F16E0ED07F0A3ED03F8A9150716F0A216E0150F16C06D131F6DEB3F80160001FF13FC
9038F381F89038F1FFE0D9F07FC7FC91C8FCAA487EB512C0A325307EA02B>I<3803E07C
38FFE1FF9038E38F809038E71FC0EA07EEEA03ECA29038FC0F8049C7FCA35BB2487EB512
E0A31A217FA01E>114 D<EBFF06000713CE381F00FE003C133E48131E140E5A1406A27E
A200FE90C7FC6C7EEA7FFC383FFFC014F0000F7F6C7FC67FEB0FFF1300EC3F8000C0131F
140F6C1307A37E15006C5B6C130E6C5B38F7807838E1FFE038C07F8019237EA11E>I<13
30A51370A313F0A21201A212031207381FFFFEB5FCA23803F000AF1403A814073801F806
A23800FC0EEB7E1CEB1FF8EB07E0182F7FAD1E>I<D803F0133F00FFEB0FFFA30007EB00
7F000380B35DA35D12016D4813800000903803BFFC90387E073FEB1FFED907F813002622
7EA02B>I<B53A1FFF81FFF0A33C07F801FC003F8001F049EB1E0000030100141C816C6C
017C1318A26D017E1338000002FE1330A290267E01FF5B159F168090263F030F5BA216C0
903A1F8607C180A202C613E390260FCC0390C7FCA2D907FC13F6ECF80116FE6D486C5AA3
6D481378A36D48133034217F9F37>119 D<B53801FFF8A32603FE0013806C48EB7C0000
001478017E1370017F5B90383F81C090381F8380D90FC3C7FCEB07E614FE6D5A6D5A6D7E
80805B9038039F809038071FC09038060FE0EB0C0790381C03F0496C7E01707FEBF00000
0180000FECFF8026FFFC0313FCA326207F9F29>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd ecrm0800 8 1
/Fd 1 50 df<130C133C137CEA03FC12FFEAFC7C1200B3B113FE387FFFFEA2172C7AAB23
>49 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe ectt0800 6 27
/Fe 27 123 df<137813F81201EA03E0EA07C0EA0F8013005A121E123E123C127C1278A2
12F85AAA7E1278A2127C123C123E121E121F7E1380EA07C0EA03E0EA01F8120013780D28
78A21A>40 D<127012F8127C7E7EEA0F80120713C0120313E0120113F01200A213F81378
AA13F813F0A2120113E0120313C012071380120FEA1F00123E5A5A12700D287CA21A>I<
13E0A4006013C038F8E3E0EAFCE7387FFFC06C1380380FFE00EA03F8EA0FFE383FFF8048
13C038FCE7E0EAF8E33860E0C000001300A413157D991A>I<387FFFC0B512E0A26C13C0
13047D7E1A>95 D<EA0FF848B4FC48138014C0383E0FE0EA1C03EA000113FF1207121FEA
7FF1EA7E0112F812F0A2EAF803EAFC0F387FFFFE7EEA1FFC3807F07E17157E941A>97
D<127F5AA27E120FA5EB1FC0EB7FE0EBFFF014F8EBE0FCEB807CEB003C143E141EA5EB80
3E143CEBC07CEBE1F813FF14F0EB7FE038071F80171E809D1A>I<3801FF80000713C048
13E05AEA3F03387E01C00078C7FC12F85AA56C13F0127CEA7E01383F83E0EA1FFF6C13C0
6C13803801FE0014157D941A>I<EB0FE0131FA2130F1301A5EA03F1EA0FFDEA1FFF5AEA
7F0FEA7C03EA780112F812F0A5EAF8031278EA7C07EA7E1F383FFFFC6C13FEEA0FF93803
F1FC171E7E9D1A>I<EA01FCEA07FF4813804813C0383F07E0EA7C01007813F0EAF800B5
FCA400F8C7FC14F0127CEA7E01383FC3E0EA1FFF6C13C06C13803800FE0014157E941A>
I<EB07E0EB3FF0EB7FF813FFEA01F8EBE0701400A3387FFFF0B5FCA33801E000AD387FFF
80B512C0A26C1380151E7F9D1A>I<14783801F9FC3807FFFE5A48139EEB0F9C383E07C0
EA3C03A4EA3E07381F0F8013FF14005BEA1DF8001CC7FC121D381FFF8014F04813F8387C
00FC00F0131E48130EA36C131E6C133E387F01FC383FFFF86C13F06C13E0000113001722
7F951A>I<127F5AA27E120FA5EB1FC0EB7FE0497E8013E0EB8078A21300AA387FE1FFD8
FFF31380A2D87FE11300191E809D1A>I<EA01E0487EA46C5AC8FCA4EA7FF0A41200AD38
7FFFC0B512E0A26C13C0131F7D9E1A>I<12FEA4120EA5EB0FFCEB1FFEA2EB0FFCEB0780
EB0F00131E5B5B13FC120F13DE138FEB0780380E03C0A2EB01E038FFE3FE14FFA214FE18
1E7F9D1A>107 D<EA7FF012FFA2127F1200B3A4387FFFE0B512F0A26C13E0141E7D9D1A>
I<387F1FC038FF7FE0497E6C7FEA0FE0EB8078A21300AA387FE1FFD8FFF31380A2D87FE1
1300191580941A>110 D<EA01FCEA07FF4813804813C0383F07E0387C01F0EA780000F8
13F8481378A56C13F8007813F0EA7C01383F07E0381FFFC06C13806C1300EA01FC15157E
941A>I<387F1FC038FF7FE0EBFFF06C13F8380FE0FCEB807CEB003C143E141EA5EB803E
143CEBC07CEBE1F813FF14F0EB7FE0EB1F8090C7FCA7EA7FE0487EA26C5A172080941A>
I<387FC3F838FFCFFCEBDFFEEA7FFF3803FE3EEBF81CEBF0005BA25BA8387FFF80B5FCA2
7E17157F941A>114 D<380FFB80EA3FFF5AA2EAFC0FEAF007A200FCC7FCEA7FE0EA3FFC
6CB4FC0001138038000FC0EA700312F012F8EAFC0FB5128014005BEAE7F812157C941A>
I<EA01C01203A6387FFFE0B5FCA33803C000A7146014F0A313E1EBE3E0EA01FF14C06C13
80EB3E00141C7F9B1A>I<387F03F8EAFF07A2EA7F03380F0078AB14F8138390B5FC6C14
807E3901FC7F00191580941A>I<387F83FC38FFC7FEA2387F83FC380E00E0A2380701C0
A338038380A33801C700A3EA00EEA3137CA2133817157F941A>I<38FF83FEA438380038
6C1370A3133C137EA2000C1360EA0EEEA213E614E0A23807E7C0A213C713C317157F941A
>I<387FC7F8EBCFFCA2EBC7F838038380EBC700EA01EFEA00FE137C13781338137C13EE
120113C738038380000713C0387FC7FC00FF13FEA2007F13FC17157F941A>I<387FC3FC
38FFC7FEA2387FC3FC380E00E07EEB01C013811203EB838013C31201EBC700EA00E7A213
E61366137E133CA31338A31378EA1070EA7CF0EA7DE0127F5B6C5A001EC7FC17207F941A
>I<387FFFF0B5FCA338F007E0EB0FC0EB1F8038003F00137E5B485A485A485A380FC078
EA1F80EA3F00127EB512F8A415157E941A>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff ecbx0600 6 10
/Ff 10 118 df<007FB7FCB81280A26C160029047B6F35>95 D<3803FFC0000F13F8003F
7FEB80FF80EC3F80A2EA0E00C7FC90B5FC1207381FF03FEA7F80EAFE005AA36C137F007F
13FF393FFFDFFC6C139F3803FC071E167E9522>97 D<EB3FF03801FFFE00077F381FE07F
EA3F80EA7F00A2007E131C00FE90C7FCA6127FA29038800780383FC00F391FF01F003807
FFFE00015B38003FE019167E951F>99 D<EC3FF0A31407AAEB7FC70003B5FC5A381FE03F
383F800F387F0007A212FEA8127F140F383F801F381FE07F6CB512FE000313F738007F87
1F237EA226>I<EB7FC03801FFF8000713FE381FE07F383F801F397F000F80A200FEEB07
C0A2B6FCA348C8FCA2127FA2393F8003C0EBC007391FF00F800007B5120000015B38003F
F01A167E9520>I<38FFC7FC90B5128015E0391FF80FF09038E007F89038C003FC140115
FE1400A6140115FCEBE0039038F007F89038F81FF090B512C001DF1300EBC7FC01C0C7FC
A7EAFFF8A31F207D9526>112 D<38FF83E0EB8FF8EB9FFEEA1FBC13F813F013E0143814
005BAAEAFFFCA317167E951C>114 D<3803FEE0EA1FFF5AEA7C03EAF801A26CC7FCEAFF
E013FF6C13C06C13E06C13F0000713F8EA007F1303EAF000A27E38FE03F0B512E014C038
E3FE0015167E951B>I<EA01E0A41203A21207A2120F123FB512E0A3380FE000AB14F0A4
13F13807FFE06C13C038007E0014207F9F1B>I<39FFC07FE0A3001F130FAD141F143F14
7F6CB512FC6C13CF0001130F1E167C9526>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg ecrm0600 6 61
/Fg 61 123 df<EB03FCEB1FFEEB7C079038F003803801E0073803C00F14073907800300
91C7FCA6EC3FC0B6FCA238078003B1397FF83FFCA21E247EA323>28
D<EB0780EB1FE0EB7870EBF03014383801E018A31438143014705CEBF1C000005B13F790
39FE000FFF5B0178EB03F8017CEB01E001FC14C0486CEB0380D8079F1400D80E1F5B391E
0F800E486C6C5A007CEBE01839F803F03801015B6D6C5AEC7DC091383F80036CEB1F0000
7CEC80066C90383BE00E3A1F01F1F81C3A0FFFC07FF83A01FE000FE028257DA32F>38
D<127812FCA212FEA2127E1206A3120CA2121C121812301260124007107AA212>I<130C
1338137013E0EA01C0EA038013005A120EA25AA25AA312781270A312F0AB1270A3127812
38A37EA27EA27E7E1380EA01C0EA00E013701338130C0E317AA418>I<12C012707E7E7E
7E7E1380EA01C0A2EA00E0A21370A313781338A3133CAB1338A313781370A313E0A2EA01
C0A2EA038013005A120E5A5A5A12C00E317CA418>I<127812FCA212FEA2127E1206A312
0CA2121C121812301260124007107A8512>44 D<EAFFFEA30F037E8B15>I<127812FCA4
127806067A8512>I<140CA2141C14181438143014701460A214E014C013011480130314
00A25B1306130E130C131C1318A21338133013701360A213E05B12015B120390C7FCA25A
1206120E120C121C1218A2123812301270126012E05AA216317CA41E>I<13FF000313C0
380781E0380F00F0001E137848133CA248131EA400F8131FAD0078131EA2007C133E003C
133CA26C13786C13F0380781E03803FFC0C6130018227DA01E>I<13E01201120712FF12
F91201B3A7487EB512C0A212217AA01E>I<EA01FC3807FF80381C0FC0383003E0386001
F0EB00F812F86C13FCA2147C1278003013FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F
00131E13385B5B3801C00CEA0380380600185A5A383FFFF85AB512F0A216217CA01E>I<
13FF000313C0380F03E0381C00F014F8003E13FC147CA2001E13FC120CC712F8A2EB01F0
EB03E0EB0FC03801FF00A2380003E0EB00F01478147C143E143F1230127812FCA2143E48
137E0060137C003813F8381E03F0380FFFC00001130018227DA01E>I<14E01301A21303
1307A2130D131D13391331136113E113C1EA01811203EA07011206120C121C1218123012
7012E0B6FCA2380001E0A6EB03F0EB3FFFA218227DA11E>I<00101330381E01F0381FFF
E014C01480EBFE00EA1BF00018C7FCA513FE381BFF80381F03C0381C01E0381800F014F8
C71278A2147CA21230127812F8A214784813F8006013F0387001E01238381E07803807FF
00EA01F816227CA01E>I<EB0FC0EB7FF03801F0383803C0183807803C380F007C121E00
1C1338003C1300A2127C1278EB7FC038F9FFE038FB80F038FE0038143C48131EA248131F
A41278A36C131EA2001C133C001E13386C1370380781E03801FFC038007F0018227DA01E
>I<1230123C003FB5FCA24813FE14FC3860001C143814704813E014C0EA0001EB0380EB
07001306130E5BA25BA21378A35BA41201A76C5A18237CA11E>I<137F3803FFC0380781
E0380E00704813380018131C1238A3123C003F1338381FC078EBE0F0380FF9E03807FF80
120114C0000713F0380F0FF8381C03FC383801FE3870007E141F48130F1407A314060070
130E0078130C6C1338001F13F03807FFC0C6130018227DA01E>I<007FB612FCB712FECA
FCABB712FE6C15FC270F7C932F>61 D<12E01278121EEA0780EA01E0EA0078131EEB07C0
EB01F0EB003C140FEC03C0EC00F0153C150FED03C0ED00E0ED03C0ED0F00153C15F0EC03
C0020FC7FC143CEB01F0EB07C0011EC8FC1378EA01E0EA0780001EC9FC127812E023217A
9C2F>I<1438A2147CA314FEA2497E149FA29038030F80A201067F1407010E7FEB0C03A2
496C7EA201387FEB3000A249137C90387FFFFC90B57E9038C0003EA248487FA200031580
90C7120F5A16C0D81F8014E0D8FFE0EB7FFEA227247DA32D>65 D<B6FC15E03907C003F0
EC00FC157E153E153FA5153E157E5DEC03F890B512E0A29038C003F8EC007E81ED1F80A2
ED0FC0A51680151FED3F00157E4A5AB612F015C022227CA12A>I<49B41320010FEBC060
90393F80F0E09038FC0019D801F0130D48481307484813034848130148C7FC481400123E
127E1660127C12FC1600A7007C1560127EA2123E003F15C07E6C6CEB01806C7E6C6CEB03
006C6C1306D800FC131C90383F807890380FFFE0010190C7FC23247CA22B>I<B67E15F0
390FC001F80007EB007E151FED0F80ED07C0ED03E0ED01F0A216F81500A216FCA816F8A2
150116F0A2ED03E0ED07C0ED0F80ED1F00153E000FEB01FCB612F0158026227CA12E>I<
B612FEA2390FC0007E0007141F818181A39138060180A392C7FC140E141EEBFFFEA2EBC0
1E140E1406A216C0A291C7FCED0180A31503A21507150F000FEC7F00B7FCA222227CA129
>I<B612FCA23807C000153E151E150E1506A31503140CA21500A2141C143CEBFFFCA2EB
C03C141C140CA491C7FCA77FB5FCA220227CA127>I<EAFFFEA2EA0FE0EA07C0B3AAEA0F
E0EAFFFEA20F227CA116>73 D<B57EA2D80FE0C7FC6C5AB21506A3150CA3151C153CA215
FC000FEB03F8B6FCA21F227CA126>76 D<D8FFC0EC0FFC6D141F00071680D806F01437A3
01781467A26D14C7A26DEB0187A26DEB0307A39038078006A2903803C00CA2903801E018
A3903800F030A2EC7860A2EC3CC0A2EC1F80A2120F391F800F00D8FFF0ECFFFC14062E22
7CA136>I<D8FFC0EB7FF87FD807F0EB0FC0ED07806DEB0300EA06FC137E7FA2EB1F80EB
0FC0EB07E0130314F0EB01F8EB00FC147EA2143FEC1F83EC0FC3EC07E3A2EC03F3EC01FB
6EB4FC81A28181000F80487ED8FFF07F8125227CA12D>I<49B4FC010F13E090383F01F8
9038F8003E48487FD803C0EB0780000715C04848EB03E048C7EA01F04815F8003E140000
7E15FCA2007C157C00FC157EA8007E15FCA3003E15F8003F14016C15F06C6CEB03E06D13
076C6CEB0FC0D801F0EB1F00D800FC137E90383F01F890380FFFE0010190C7FC27247CA2
2F>I<B6FC15E0390FC003F80007EB00FC153E153F811680A516005D153E15FCEC03F890
B512E092C7FC01C0C8FCAC487EEAFFFEA221227CA129>I<B512FCECFF80390FC007E000
07EB01F8EC007C157E153E153FA4153E157E157C4A5AEC07E090B5128092C7FC9038C00F
C0EC03E06E7E811400A381A3160615FEA2486CEB7E0ED8FFFEEB3F1CED1FF8C8EA03E027
237CA12C>82 D<EBFF01000713C3380F01F7381C003F00307F00707F00607F12E080A36C
90C7FC1278127EEA3FC0EA1FFE380FFFE06C13F8C67FEB07FEEB007FEC0F801407EC03C0
A200C01301A46C14806C13036CEB07006C130E38EF803C38C3FFF038807FC01A247CA222
>I<007FB612F0A2397C00F8010070EC0070A20060153000E01538A2481518A4C71400B3
497E90387FFFF0A225227DA12B>I<D8FFFC903803FF80A2D80FE0903800FC0000071570
00031560A26C6C5CA26D130100005D6D1303017C91C7FC137E013E1306A26D5BA26D6C5A
A2ECC03801071330ECE0700103136014F001015BA2903800F980A214FF6EC8FCA2143EA2
141CA229237EA12D>86 D<B712E0A323037A722F>95 D<EA01FCEA0FFF381E0780486C7E
383E01E0130080121CC7FCA213FF1207EA1FC0EA3F00127CA24814C0A31301387C037039
3E0E7980391FFC3F003807F01E1A187D961E>97 D<120FB4FCA2121F7EA9EB07F0EB3FFC
EB703F9038C00F8090388007C0EB000315E0140115F0A715E0140315C09038800780390E
C00F00EB703E380C3FFC380007E01C247DA222>I<137F3803FFE03807C0F0380F007800
1E13F85AA2007C13700078130012F8A7127C1418123C6C13306C13603807C0E03803FF80
38007E0015187D961B>I<140F14FFA2141F80A913FF000313CF3807C0FF380F003F001E
7F487F127C127812F8A71278127C123C003E5B6CEB3F80390FC1EFF03803FF8F3900FE0F
001C247DA222>I<13FC3803FF80380F83C0381F01E0383E00F0123C127C14785AA2B512
F8A200F8C7FCA4127C14187E001E1338001F1370380781E03803FF8038007E0015187D96
1B>I<EB0F80EB7FC0EBF1E0EA01E3EA03C3EBC1C038078000A9EAFFFEA2EA0780B1EA7F
FCA213247EA313>I<3801F83F3907FEFF80381E07E3391C038300383801C000787FA500
385B6C485AEA1E07D83FFEC7FCEA31F80030C8FC1238A2383FFF806C13F06C7F487F3838
007E48130E48130F80A36C5B0070130E003C133C001F13F83807FFE0C690C7FC19227D95
1E>I<120FB4FCA2121F7EA9EB07F0EB1FFCEB703EEBC01E497EA21300AE39FFF0FFF0A2
1C237DA222>I<120C123FA4120CC7FCA7120FB4FCA2121F7EB0EAFFE0A20B237DA212>I<
120FB4FCA2121F7EAAECFF80A2ECFE0014F8EB01E0EB038049C7FC131E133E137FEBE780
EB87C0EB03E06D7E130014788080EC1F8039FFF03FE0A21B237DA220>107
D<120FB4FCA2121F7EB3ABEAFFF0A20C237DA212>I<3A0F07F007F03AFF1FFC1FFC9039
703E703E3A1FC01EC01E6C486C487EA201001300AE3BFFF0FFF0FFF0A22C167D9532>I<
380F07F038FF1FFCEB703E381FC01E6C487EA21300AE39FFF0FFF0A21C167D9522>I<13
7E3803FFC0380781E0380F00F0001E137848133CA248131EA200F8131FA70078131E007C
133E003C133C003E137C6C13F8380F81F03803FFC0C6130018187D961E>I<380F07F038
FF3FFCEB703F390FC00F8090388007C01300EC03E0A2EC01F0A7EC03E0A2EC07C0018013
809038C01F00EB703EEB3FFCEB07E090C8FCA7EAFFF0A21C207D9522>I<380E0F8038FE
3FC0EB73E0EA1EC3120FEB81C0EB800090C7FCADEAFFF8A213167D9518>114
D<3807F080EA1FFFEA380FEA700312E01301A212F06CC7FCEA7FC0EA3FF8EA1FFEEA07FF
38001F80EB07C0EAC003130112E0A200F01380130338FC0F00EACFFEEA83F812187D9618
>I<487EA41203A21207A2120F123FB51280A238078000AA14C0A63803C180EBE300EA01
FEEA007C12207E9E18>I<000F130FB413FFA2001F131F6C7FAD5CA26CEB3F809038C0EF
F03803FF8F3900FE0F001C177D9522>I<39FFE01FF0A2391F800F80000FEB0700000713
06A26C6C5AA26C6C5AA26C6C5AA2EBF870EB7860EB7CE0EB3CC0133F6D5AA26DC7FCA213
061C167E9420>I<3AFFE1FF83FEA23A1F003E00F86C013C13F0023E13E02607806E13C0
A2EC6F012603C0C713801581D801E1EB8300148315C33900F301C6A201FF13EE90387E00
EC15FC013C1378A30118133027167E942B>I<397FE07FE0A2390FC03F000007133C3803
E0386C6C5A6C6C5AEB7DC0EB3F806DC7FC7F497EEB3BC0EB71E0EBE0F03801C078380380
7C00077F001F133F39FFC07FF0A21C157E9420>I<39FFE01FF0A2391F800F80000FEB07
0000071306EBC00E0003130CEBE01C00011318EBF0380000133013F8EB7860A26D5AA2EB
1F80A26DC7FCA21306A25BA25B12F85B13701360EA61C0EA3F806CC8FC1C207E9420>I<
387FFFF8A2387C01F0387003E0EA600738E00FC038C01F801400133EC65A5B3801F018EA
03E0EA07C0000F1338EA1F80383F0030003E1370387C01F0B5FCA215157D941B>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh ecsx1200 12 46
/Fh 46 122 df<91393FE001FF902701FFFC03138001074A13C05B5B5B90387FF87CECF0
1C13FFECE00CDB00031380486F130093C8FCB0003F903AFFF801FF80486E4813C0B6FCA3
6C14F80001EBE000B3B3A27E6D486D1380324A7EC93C>28 D<EAFFE0AB0B0B768A1F>46
D<EC0F804A7E143F14FF1303131F003FB5FC5AB6FCA3EA7FF3EA20031200B3B3AC003FB6
12F84815FCB7FCA27E6C15F8264377C238>49 D<ECFFC0010F13FC013FEBFF8090B612E0
48814815FC4881488148168048010014C001FC133FD87FF0010F13E0497F48486D13F081
5B007F6E13F86CC8FC7EA2000E157F1206C9FC16FFA317F05DA24B13E017C05D17804B13
004B5A4B5A4B5A4B5A4A5B4A5B4A5B4A48C7FC4A5A4A5AEC7FE04A5A495B4990C8FC495A
EB0FF8495A495AEBFFC0485B4848C9FC485A485A485A48B712F04816F8B8FCA57E6C16F0
2D437BC238>I<ECFFF0010713FF013F14C090B612F048810007814881488148EB803F27
7FFC001F138001F07F6C486D13C06C5A5B6CC77E1206C8FCA25DA34B1380A24B1300A24B
5A4B5A4B5A020F5B0107B55A16804BC7FC6F7E16F016FC90C7EA3FFF030F13806F13C081
17E06F13F0A28117F8AA00605C007016F0127C007E5CB46C4913E001F05B01FF013F13C0
91B6FC17806C1600001F5D00075D000115F06C6C14C0011F91C7FC010013F02D457BC238
>I<ED3FFC4B7E15FFA25C5CA25CA2EC0FF7EC1FE7A2EC3FC7147F158714FF15075BEB03
FE14FC130714F8130FEB1FF0A2EB3FE014C0137FEBFF80A2481300485AA2485AA2485A48
5AA2485A5B127F485A90B8FC1880A66C1700C8D807FEC7FCAE6F5A31417DC038>I<0003
B712804816C05AA6178091C9FCAEEC0FFE91387FFFC091B512F88216FF1780DAF80F13C0
DAC00313E0EC00014915F0497F4915F812076C48147FC9FC17FCAB120C001EEDFFF8A212
3F486C5B6D15F0D8FFF05B01FC4913E0397FFF803F6C90B612C06C16807E6CEDFE006C5D
C615F0013F14C0010F91C7FC010013F02E437CC038>I<4AB47E023F13F091B512FC1303
130F133F5B90B6FC48EC007C4801F8130C02E090C7FC485B485B91C9FC485AA25B123FA2
5B127FA2EC03FE91381FFFC0D9F07F13F0D8FFF1B512FC01F38001F7809026FFF01F1380
DAC00713C04A7E4A6C13E05B6F13F05BA249147F17F8A35BA6127F7FA5123F6DECFFF0A2
6C7E5D6C6C4913E06E5A6CD9E01F13C091B612807E6C16006C5D6D5C6D14F0010F5C0103
14809026003FF8C7FC2D457BC238>I<007FB712F0B812F8A76C16F0C913E04B13C04B13
804B13005D4B5A5E4B5A157F4B5A5E5C4A5BA24A5B5C93C7FC4A5AA2143F5D147F5D14FF
5DA25B5D5BA25D5BA3495BA54990C8FCA6495AAB6D5A2D427BC038>I<ED7FFF92B57E4A
80A34A80A34A80A24A805D167F021F8015FCA2023F6D7E15F8A2027F6D7E15F002FF8182
15E049828215C0498282158049828249010080A282494881177FA2494881173F494881A2
83494882A291B8FC4884A34884A24884A20280C712014890C880A283484883187FA24848
83183F484883A28448481880A249826C4870130041457CC44A>65
D<003FB612F848EDFF80B812F017FC17FF8418E0A201F8C780040F7F160304007F177F17
3F84171FA6173F60A24D5A17FF4C5B4C5B040F5B93B55A90B8C7FC17FC17E017F817FF18
C001F8C76C7F040713F804017F706C7E173F717E8319808319C0A283A55FA24D1380A25F
4D13005F933803FFFE161F90B85A60606018804DC7FC6C16F06C4BC8FC3A4577C44A>I<
923807FFFC92B612F0020715FE023FEDFFC091B8FC13035B011F17805B499038FE001F90
B500E01301480280EB003F4849C8121F4AED07004801F01501484992C7FCA2485B5CA248
90CBFCA25B127FA25BA312FF5BAF7F127FA37FA2123F7FA26C7FA2806C7F19C06C6D1501
6C01FC15076E150F6C6D6C143F6C02E0ECFFE06D01FE130F6D90B7FC7F13076D17800100
1700023F15FC020715F002001580030701F8C7FC3B497AC648>I<003FB612FE48EDFFF0
B812FE717E18E018F8848401F8C7001F7F040180706C7F051F7F1707717F717F8385187F
A2727EA2181F85A384A21A80B01A00A260A34E5AA34E5AA24E5A5F4D5B5F051F5B4D5B4C
B55A161F90B848C7FC606018E018804DC8FC6C16F06C4BC9FC414577C451>I<003FB812
C04817E0B9FCA618C001F8CAFCB3A290B712FE83A65F01F8CAFCB3A490B812E018F0A77E
6C17E0344577C443>I<EA3FF0EA7FF812FFB3B3B3AB127FEA3FF00D4578C41E>73
D<EA3FF0487E12FFB3B3B3A490B712F817FCA67E6C16F82E4577C43D>76
D<D83FFC943803FFE0486C4D13F0B55FA26E5EA26E5EA26E5EA3D9DFF0EEFFBFA2D9CFF8
4B133FA3D9C7FCED03FEA26E150701C317FC6E150FA201C117F86F141F01C017F06F143F
A2027F16E06F147F023F16C06F14FFA2021F16806F5B020F16006F5BA26E6C495AA20203
5D6F130FA26E6D485AA26E5DEEC03FA26F6C485AA2033F5CEEF0FF031F5CA216F9030F91
C7FCA26FB45AA36F5BA26F5BA26F5BA2705A705A007F92C9FC6C48F01FE04C4576C461>
I<92381FFFE00203B6FC021F15E0027F15F849B712FE0107707E49D9FC00804901C0010F
7F017F90C7000313F802FC140049486F7E48496F7E48496F7E48496F13804A814819C091
C97E4819E04982A2003F19F04982A2007F19F8A349177FA300FF19FCB06C6CEFFFF8A56C
6C4C13F0A36D5E6C19E0A26C6D4B13C06E5D6C19806E5D6C6D4B13006C6D4B5A6E15FF6C
01FF02035B6D01C0010F5B6D01FC90B55A010F90B712C06D5F01014CC7FC6D6C15F8021F
15E0020392C8FCDA001F13E046497AC653>79 D<003FB612F848EDFF80B812F017FC17FF
188018C018E001F8C76C13F016077013F81600EF7FFCA2173FA218FEA2171FA6173FA218
FCA2177F18F817FF040313F05E047F13E090B812C01880180017FC17F017C004F8C7FC01
F8CAFCB3A8127F6C5A374577C447>I<003FB612F848EDFFC0B812F817FE8318C0848401
F8C7001F7F160304007F177F717EA2171F84A283A55FA260173F60177F4D5A1603043F5B
90B85A18804DC7FC17F817C04CC8FC9039F8001FFF818381836F7F81838183707E163F83
707EA2707F8284707FA2707F707FA2717EA2717E717EA2711380A2007F826C4881394577
C448>82 D<91383FFF800103B512F8010F14FF013F15C090B712F04816FC5A5A5A485EEC
F0014890C7121F491407491401491400007F167049151094C7FCA47FA27F7F6C7E8014F0
6C13FF15F86CECFF806C15F06C15FC6C15FF6C826D15E0011F816D81010381EB007F0207
80DA007F7F1503DB007F138082160F7013C0A282A282A412201238007C5D007E1780D87F
805C13E001F85C01FF023F1300B5D8F001B5FC91B65AA25F003F5E000F5E00035EC61680
013F4AC7FC010314F8D9001F90C8FC32497BC63E>I<003FBA12E04819F0BBFCA66C19E0
C8000F0180C8FCB3B3B3A4816F90C9FC44457CC44D>I<D83FF0ED03FF486C4B138012FF
B3B3AE6C6C4B1300A46C6C4B5AA26C6C4B5A6E147F6C6D4A5A6C01F001035B02FF133F6C
91B65A6C5F6C6C5E6D4BC7FC010F5D010315E001001580020701F0C8FC394777C44C>I<
D81FFFEE7FF8486D4B7E6E5C6C4C5B6C7F6E4A5B6C6D4A5B6C606C6D5C6C6D4A5B6E4A90
C7FC6D6D5C6D4B5A6D6D5A6D6D485B03F05C6D4A5B6D6D5A6D01FC5C6D6D485B4C90C8FC
6E6C5A6E495A6E5C6E5CA26E5C6E5C6E5C805F6F90C9FC6F5A4B7E92B57E834A805C4A80
834A804A804A137F4B6C7E027F6D7F4A486C7F4901F8808249496C7F4901E08049496C7F
707F4949137F4990C77F496F7F4A6E7F49486E7F5A48496E7F4A6E7F48496E7F48844849
804A6F7E4819804890C96C13C049824848826C488242457DC44A>88
D<EC7FF80107B57E013F14E090B612F8000381000F819138801FFF9026FC000F138001F0
7F4915C06C487F5B90C7FC00066E13E0C8FCA85D023FB5FC0107B6FC133F48B7FC120748
EBFE014813E0481300485A5B485A5BA46D5BA26C6C5B6D131F6C6C6CB5FC91B6FC7E6C14
FD000314F1C6028013C0D93FF8C8FC2B317DAF36>97 D<EA3FE0487E12FFB3A6EC07FE91
383FFFC091B512F001F314FC90B67EEEFF80ECE03FDA000713C0496D13E0497F496D13F0
5BEE7FF8A4EE3FFCAF17F8167FA3EEFFF0A26D5B6D15E06D4913C06D130FDAC03F138091
B612005E01F714F8D87FF114E0263FE07F1380C7D80FFCC7FC2E4A79C83A>I<EC3FFC01
03B512C0011F14F0017F14FC90B67E48EDFF8048EBF00748EBC0004890C7123F4848EC1F
0082484880824991C7FC127FA35B12FFAE6C7EA46C7EEE01806C6C1403160F6C6C141F6C
01C0EBFFC0ECF0076C90B6FCC6FC6D1500011F14FC010314E09026007FFCC7FC2A317CAF
32>I<EE1FF8EE3FFCB3A7ECFFC0010713F8013F13FE90B612BF4815FF5A48EBF00F48EB
C0034890C7FC49147F123F49143FA2485AA35B12FFAE127F7FA46C6C147F16FF6C7E6D5B
6CEB80076CEBF01F6C90B6FC6C15BF6C153F013F13FC010F9038F01FF801010180C7FC2E
4A7CC83A>I<EC7FF80103B5FC011F14C04914F090B67E4881489038F01FFE4890388007
FF48497E496D138048487F17C0485AEE7FE0485AA3EE3FF012FFA25BA390B7FCA517E001
F0C9FCA2127FA37F123FA26C6C15C06D1401000F15076C6C140F02C0EB7FE06C9038F803
FF6C90B6FC6C7E6D1580010FECFE00010314F09026003FFEC7FC2C317DAF33>I<91380F
FF80027F13F049B5FC13075B5B90383FFE0390387FF8004A137001FF14304A1300A25AB0
003FEBFFF04880B6FCA36C5C000101E0C7FCB3B3A27E6D5A244A7EC922>I<902601FFF0
EB3F80010F9038FE03FF013FD9FF9F13C090B8FC12035ADAC07FEB8000489026001FFEC7
FC49130F48486D7EA248486D7FAB6C6C4990C7FCA26C6C495A6D131F6C9038C07FFC91B5
FC5E16E048158001CF49C8FCD81F8113F00180CAFCA27FA27F7F90B612E06C15FEEEFFC0
6C16F083834882123F83D87FF0C7123F01C00207138000FF81498082A46D5CA26C6C4A13
006D5CD83FFCEC1FFED9FF8013FF6C90B65A000716F06C5EC61680011F02FCC7FC010114
C032447DAE38>I<EA3FE0487E12FFB3A64AB47E020F13F0023F13FC91B57E01F18001F3
15809038F7F80F9026FFE00713C04A7E1480020014E0497F5BA35BA35BB3A9127F6C486D
13C02B4979C83A>I<EA3FF0EA7FF812FFAAEA7FF0C7FCADEA1FF0EA3FF8127FB3B3A612
3FEA1FF00D487AC71B>I<EA3F80487E12FFB3A74BB4FC030713804B13005D4B5A4B5AED
FFF04A5B4A5B4A5B4A90C7FC4A5A4A5A4A5A4A5A01C15B01C75B01CF5B01DF90C8FC90B5
FC81A281818181143F496C7E496C7E9038F007FF01E080497E6E7F6E7F6F7E82153F6F7E
6F7E6F7E17806F13C0816F13E0007F157F6C48143F2B4978C837>107
D<EA3FE0EA7FF012FFB3B3B3AF127FEA3FE00C4979C81B>I<4AB46CEB03FF263FE00F01
F0011F13E0267FF03F01FC017F13F800FF90B56C48B57E01F16E488001F30387809026F7
F80F90388FF01F9026FFE0079026DFC00F13804A6C9038FF80070280150002004A15C049
6D497F495DA3495DA3495DB3A9007F6E816C486E486D13804A2F79AE59>I<4AB47E263F
E00F13F0267FF03F13FC00FF90B57E01F18001F315809038F7F80F9026FFE00713C04A7E
1480020014E0497F5BA35BA35BB3A9127F6C486D13C02B2F79AE3A>I<EC3FFE0103B512
E0010F14F8013F14FE90B77E488248D9F0077F48D9C0017F4890C76C7E49143F48486E7E
A248486E7EA2007F82A24980A300FF1780AD007F17006D5CA36C6C4A5AA26C6C4A5AA26C
6C4A5A6C9039C001FFF06CD9F0075B6C90B65A6C5E6D92C7FC011F14FC010314E0902600
3FFEC8FC31317DAF38>I<EC07FE3A3FE03FFFC0486CB512F0D8FFF314FC90B67EEEFF80
ECE03FDA000F13C0496D13E0497F496D13F0497F17F8A2167FA217FC163FAD167F17F8A3
16FF17F05D7F6D4913E06D4913C06D5BDAC07F138091B612005E01F714F801F114E0D9F0
7F1380DA0FFCC7FC91C9FCB0127F6C5A2E4279AE3A>I<15F8383FC007387FE01F00FF13
7F14FF13E113E313E713EF1500EBFFF85C14C05C91C7FCA25B5BA25BA35BB3A5127F6C5A
1D2F79AE26>114 D<90380FFF80017F13F848B512FE0007ECFF804815E05AA2383FF801
9039F0003FC049130F48481303150192C7FCA27FA27F13FC383FFFC014FEECFFC06C14F0
6C14FC6C806C806C15806C6C14C0131F010314E0EB000F020113F0EC007F153FA2002014
1F12701278127C007E143FD87F8014E0D8FFE0137F9038FC01FF90B612C0A2003F158000
0F1500000314FCC66C13F00107138024317DAF2B>I<EB7FC0497E5AAB003FEBFFFE4880
B7FCA36C5C000101E0C7FCB3AE9138F0018015076C9038F81FC091B5FCA27F6DEBFE006D
13F0D907FEC7FC223C7EBA28>I<D83FE0ECFFC0486C4913E012FFB3AE5DA35D5D6D5B00
7F5CD9FE01B5FC6CB512FD6C14F96C14E10003028013C026007FFCC8FC2B2F79AD3A>I<
D87F8002FEEC01FC486CD903FFEC07FE836C6C18FC4B150F837F003F4AED1FF8A2836C6C
49ED3FF0A2836D14BF000FDA3F9FEC7FE0836D141F0007DA7F0FECFFC0A2037E7F7F6CDA
FE0749138017FEEC80FC6C01810103491300A203F813FF6C01C16D5C02C315071887ECE3
F0D97FE76DEB8FFCA24B14CFD93FFF027F5B18DF18FF5D6D6F5BA25D6D6F5BA292C7FC6D
6F5B6D486E5B472E7EAD4C>119 D<D87FC0EC1FF001F0147FA26C6CECFFE06C6C4913C0
6D5B6C6C4913806C018014006C4A5A6C6D485A6C6D485A6D6C485AEB3FF84B5AD91FFD5B
6DB55A6D91C7FC6D5B7F6D5B6E5A5D143F147F4A7E497F497F81D907FD7FD90FFC7F4948
6C7EEB3FF049486C7E6F7E49486C7E4801807F486E7E48496C138048487F484815C06F13
E04848EC7FF04848EC3FF8484815FC161F6C48EC0FF82E2E7EAD33>I<B4ED0FF001C014
1F17F86DEC3FF0127F6DEC7FE0123F7FEEFFC06C7EA26C6C491380A200074A13007F7E6E
485A7E14C06C4A5A14E0A2017F495A14F0013F5CECF83F131F5E90380FFC7FA201075C14
FE0103495AA291B5FC6D91C7FCA27F5D147F5D143FA26E5AA2140F5D141FA24A5AA25D14
7FA24A5AA2D8600190C8FCEA7003387E0FFE387FFFFC5C5C5C6C5B91C9FCEA07FC2D427D
AD33>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi ecti1095 10.95 63
/Fi 63 122 df<DC0FF0EB1F80DC7FFCEB7FE0923B01F81F01F0F0923B03E00783E078DB
07C0EB87C092260F801FEBC1F8031F90383F8FC3040014834B149F061F13F0037E011EEB
81E0DD003FC7FCA215FE5D60187EA214015D18FE60A214035D0103B812FEA26190290007
F00001F8C7FC5D170360A2140F5D170760A2141F5D170F60A3143F92C7121F60A35C147E
173F95C8FCA214FE5C5F177EA213014A14FE5FA213035C4C5AA3495A4C5AA24A5CD81C0F
13E0007E9038C3F00700FE01875C4C5AEB1F07D8FC1E4948C9FCD8F83EEBC03E3AF03C03
807CD87878EBC0F03A3FF000FFE0D80FC0013FCAFC455383BF37>27
D<EA01E0EA03F81207120F13FCA213F8A2EA03D8EA001813381330A21370136013E013C0
1201EA038013005A120E5A5A5A5A5A0E1B7A881C>44 D<387FFFFCA3B5FCA21605799520
>I<120EEA3F80127F12FFA31300127E123C090976881C>I<1806180E180C181C18381830
1870186018E0EF01C01880170318005F1706170E5F17181738173017705F5F16015F1603
4CC7FC1606160E160C161C161816385E166016E05E15014B5A93C8FC5D1506150E150C15
1C5D15301570156015E04A5A5D140392C9FC5C140E140C141C14181438143014705C5C13
015C130349CAFC1306130E130C131C5B13301370136013E05B1201485A90CBFC5A120612
0E5A12181238123012705A5A375B80C32E>I<15FE913807FF8091381F07C091387C01F0
ECF000494813F8494813780107147C495A49C7FC167E133E137EA25BA2485AA2000315FE
A25B000715FCA2491301120FA34848EB03F8A44848EB07F0A448C7EA0FE0A316C0007E14
1F12FE1680153FA2481500A2157EA25DA25D4813015D6C495A127C4A5A4A5A6C49C7FC14
3E6C5B380FC1F03803FFC0C648C8FC273F76BC2E>I<1506150E151EA2153C157C15FC14
01EC07F8140F143FEB01FF90380FF3F0EB1FC3EB0E07130015E0A2140FA215C0A2141FA2
1580A2143FA21500A25CA2147EA214FEA25CA21301A25CA21303A25CA21307A25CA2130F
A25CA2131FA25CEB7FC0B612E0A215C01F3D76BC2E>I<15FE913803FFC091380F01F091
383C00F84A137C4A7F4948133F49487F4A148049C7FC5BEB0E0C011E15C0EB1C0EEB3C06
133813781370020E133FD9F00C148013E0141C0218137F00011600EBC0384A13FEEC6001
02E05B3A00E3C003F89039FF0007F0013C495A90C7485A5E037FC7FC15FC4A5A4A5AEC0F
C04AC8FC147E14F8EB03E0495A011FC9FC133E49141801F0143C48481438485A1678485A
48C85A120E001E4A5AD83FE0130301FF495A397C3FF01FD8780FB55AD8700391C7FCD8F0
015B486C6C5A6E5AEC07C02A3F79BC2E>I<ED7F80913803FFE091380F80F891383C007C
02F87FD901E07F494814804948130F49C7FC010E15C0131EEB1C18EB3C1CEB380C017814
1F17801370A2021C133F6D4814004A5BD91FE0137ED90F805B90C8FC4B5A4B5A4B5AED1F
8003FFC7FCECFFFC15F0A2EC00FC153E153F8182150F82A4151FA3123E007E143F00FE5D
A3484AC7FC12E015FE5D14016C495A0070495A0078EB0FC00038495A6C017EC8FC380F01
F83803FFE0C690C9FC2A3F78BC2E>I<1638167E16FE16FCA3150116F8A3150316F0A215
0716E0A2ED0FC0A3ED1F80A216005DA2157EA2157C15FC5D14015D14035D4A5AA24A5AA2
4AC7FC143EED038091387C0FC014F8ECF01F01011480EB03E014C0903807803F010F1400
EB1F00133E495B49137E485A485A484813FE48B46C5A4813F04813FE267C00FF130800F0
90380FFFFC00601301C714E0913803F8005DA314075DA3140F5DA3141F5DA3020EC7FC27
4F7DBC2E>I<D9703FEB01C09138FF800301F3158001EFEBC00790B5EB0F0048151E1483
2603FE015B01F8147C2607F0005B49EBE3F04848137F496D5A48C71201001E4A5A150748
5D0038140F007892C7FC00705C00F0143E5A5DC8FC5DA24A5AA214035D14074A5AA2141F
5DA24AC8FCA25C147E14FEA2495AA3495AA313075C130FA25C131FA35C133FA35C91C9FC
131E2A3F73BC2E>55 D<157F913801FFE0020713F091381FC0FC91383E007C4A133E5C49
48131F495AA2495AA2495AA2163F011F143EA2167E167C6E13F8150102E013F09138F003
E090390FF807C09138FE0F00903807FF3E15F86D5B6D5B6D6C7E4A7E01037F90380F8FFE
90381F07FFD97C031380496C13C048487E4848EB7FE04848131F485A001F140F90C71207
123EA2007E1403127C150700FC15C05AA2ED0F80A2ED1F00153E127C5D007E495A6C495A
391F800FC0390FE03F802607FFFEC7FC000113F838003FC0283F78BC2E>I<ED7F809138
03FFE0020F7F91381FC0F891387F007C02FC7F495A4948133F49487F130F5C4948148013
3F91C7FC5BA213FE163FA212015B17005E12035B5EA25E15015B000114035E6D13070000
140F151F0178EB3BF8017C13736D13E390391F03C7F0903807FF07EB01FC90C7485AA25E
151F5E4BC7FCA2157EA25D003E495A007F495A5D4A5A00FE495A4849C8FC0070133E0078
13FC387E03F8383FFFE0000F1380D803FCC9FC293F78BC2E>I<131E137FEBFF80A31400
A25B133890C7FCB3A3120EEA3F80127F12FFA390C7FC127E123C112776A61C>I<0007B9
12F0A2CDFCB0B912FE843C1477A045>61 D<147F903801FFC0903807C0F090381E007849
13380170133C49131C4848131E1203485A90C7FC120E121E121C003C143E0038143C1278
0070147C15F812F800FEEB01F01403EC07E048EB1FC0EC3F800070EB7F00C712FEEB03FC
495AEB0FE0495A495A01FFC7FCEA01FC485A5B485A5BEB80F0120F495A13015C495A6C48
C7FC13FEEA01F8C9FCA9EA0380EA0FE0121F123FA35B6C5A6CC8FC1F416FC02E>63
D<17381778A217FCA21601A216031607A2160FA2161DA216391679167116E1A2923801C1
FEA2ED0380A2ED07005D150E5DA25DA25D15F05D14015D4A487FA24AC77EA2140E141E02
1FB6FC5CA20270C77EA25CA2495A13035C49C8FC1880010E153FA25B133C1338137813F8
0001167FD807FCEDFFC0B500C0013F13FFA25C38417BC043>65 D<9339FF8001C0030F13
E0033F9038F803809239FF807C07913A03FC001E0FDA0FF0EB0F1FDA3FC09038079F004A
C76CB4FC02FE80495A49486E5A495A495A4948157E4948157C137F49C9FC5B0001177848
5A5B12071870485AA2485A95C7FC123F5BA2127F5BA312FF90CCFCA55A170FA2170EA217
1E171C173C17381778007F167017F04C5A6C5E6D1403001F4B5A6D4AC8FC6C6C141E0007
5D6D14F8D803FCEB01E0C66CEB07C090267FC03FC9FC90381FFFFE010713F0010013803A
4272BF41>67 D<49B812F8A390260003FCC7123F18074B14031801F000F014075DA3140F
5D19E0A2141F4B1338A2EF7801023F027013C04B91C7FCA217F0027F5CED00011603160F
91B65AA39138FE001F0101EC07805CA3010392C8FC5C18074C5B0107020E130E5C93C712
1E181C010F163C4A15381878A2011F5E5C4D5AA2013F15034A4A5A170F017F151F4D5A91
C812FF49020F90C7FC007F90B7FCB9FC5F3D3E7BBD3D>69 D<49B812F0A390260003FCC7
123F180F4B14071803F001E014075DA3140F5D19C0A2141F5D1770EFF003023F02E01380
4B91C7FCA21601027F5CED0003A216074AEB1F8092B5FCA3902701FE003FC8FC4A7F82A2
0103140E5CA2161E0107141C5CA293C9FC130F5CA3131F5CA3133F5CA2137FA291CBFC49
7E007FEBFF80B6FCA23C3E7BBD3B>I<DCFF8013E0030713F0033F9038FC01C09239FF80
3E03913A03FC000F07DA0FF0EB078FDA1FC0903803CF80DA7F80EB01DF02FEC812FF495A
4948ED7F00495A495A4948814948153E137F49C9FC5B0001173C485AA2485A1838485AA2
485A95C7FC123F5BA2127F5BA312FF90CCFCA393B512FEA25A9338007F80A295C7FCA25F
A25FA26C15017E5FA26C6C1403A26C6C5D16076C6C140F6C6C141F6C6CEC3DF06C6C14F9
6CB4EB03F0903A7FE01FC070011FB5EA0060010701FC90C8FC9038007FC03B4273BF46>
I<49B5D8FC01B512FCA390260003FEC73803FE004B5D4B5DA2180714074B5DA2180F140F
4B5DA2181F141F4B5DA2183F143F4B5DA2187F147F92C890C7FCA26091B8FC60A24AC712
0113014A5DA2170313034A5DA2170713074A5DA2170F130F4A5DA2171F131F4A5DA2173F
133F4A5DA2017F157FA291C890C8FC496C4A7EB690B6FCA24A5D463E7BBD43>I<49B512
FEA216FC90390003FE005D5DA314075DA3140F5DA3141F5DA3143F5DA3147F92C7FCA35C
5CA313015CA313035CA313075CA3130F5CA3131F5CA3133F5CA2137FA291C8FC497EB6FC
A3273E7BBD23>I<49B500FC903807FFFEA390260003FEC813C04B16004B15FC4E5A19E0
02074B5A4BEC0F80061EC7FC60020F5D4B5CEF03E0EF0780021F4AC8FC4B131E5F17F802
3F495A92388003C04C5A4CC9FC027F131EED007F5E5D4A487F4A5AED1F3F033C7F010113
789138FCF01FDAFDE07F9138FFC00F4901807FECFE004A13074A8013074A130383A2010F
6E7E5C160083131F4A8084A2013F153F4A81A2017F6F7EA291C87F496C4A7E007F01FE01
07B57EB5FCA2473E7BBD45>75 D<49B6FCA390260003FEC8FC5D5DA314075DA3140F5DA3
141F5DA3143F5DA3147F92C9FCA35C5CA313015CA313035C18C0EF01E0010716C05C1703
1880130F4A140718005F131F4A141EA2173E013F5D4A14FC1601017F4A5A160791C7121F
49ECFFF0B8FCA25F333E7BBD39>I<902601FFFE93381FFFC062A2D9000394387FE00050
5A6303BFED01DF1AFF0207EE03BF033FDB073FC7FCA2F10E7F140F020EEE1C7E19381AFE
021E167091261C1F805D19E019E1023CED01C1023892380381F8A2F0070314780270030E
5B181C19079126F00FC0133802E05F1870F0E00F130102C0DA01C05BA2943803801F1303
0280DA07005B170EDB07E0143F01075D020094C8FC5F4D5B5B010E4B137EA2DCE1C013FE
011EECE380011C5F04E7C7FCDB03F71301013C14FE01385F5E01784A130313F8486C4A5C
D807FE4C7EB500F0D9E007B512F016C0DAE0015E523E7ABD51>I<902601FFFC91381FFF
FC81A2D90001030013804A6CED7E00197C1938701478EC07BF033F157082031F15F0140F
020E6D5C150F701301141EDA1C075D8203031403143C02386D5C1501180702787FDA7000
92C7FCA2705B02F07F4A150E1780043F131E13014AECC01C161FEFE03C13034A010F1338
17F004071378130791C7EBF870160318F04915FC010E02015BA217FF011E80011C5EA217
7F133C01385E173F137813F8486C6FC8FCEA07FEB500F080A24A140E463E7BBD43>I<EE
7FC0923807FFF892383F807E9239FC001F80DA01F0EB07C0DA07E06D7EDA0F806D7E023F
C77F027E6E7E4A157C4948157E495A494881495A011F1780495A91C9121F5B01FE17C0A2
485A12035B120749163F120FA25B121F19804848167FA44848EEFF00A34D5AA390C9485A
5A6017076C5F170F604D5AA24D5A4DC7FC6C6C157E17FE001F4B5A4C5A6D4A5A000F4B5A
6C6C4A5A4CC8FC6C6C147E6C6C5C6C6CEB03F0013FEB0FC090261FC07FC9FC903807FFFC
010013C03A4274BF45>I<49B77E18F018FC903B0003FC0003FEEF00FF4BEC3F80F01FC0
1407F00FE05DA2020F16F0A25DA2141FF01FE05DA2023F16C0183F4B1580187F027F1600
18FE92C7485A604AEC07F04D5A4AEC3F804CB4C7FC49B612F817E002FCCAFCA21303A25C
A21307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA291CBFC497E007F13FEB5FCA2
3C3E7BBD3D>I<49B612FCEFFF8018F0903B0003FC000FF8EF01FE4B6D7E84F03F800207
ED1FC05DA219E0140F5DA3021FED3FC05DA2F07F80143F4B150018FE4D5A027F5D92C748
5AEF0FE0EF1F804A027EC7FC4AEB07F891B612E01780903A01FE000FE04AEB03F0707E70
7E0103814A147E177FA213075CA25F130F5C5F1601131F5CA3013F020314404A16E05F01
7F160119C091C700011303496C1680B61507933900FE0F004AEC7E1ECAEA1FFCEF07F03B
407BBD42>82 D<92390FF001C0ED7FFE4AB5EA0380913907F00FC791390FC003EF91381F
0001023E903800FF004A805C495A4948143EA2495AA2010F153C5CA3011F1538A46E91C7
FCA2806D7E14FCECFFC06D13F86D13FF16E0010014F86E7F021F7F02037FEC003F03077F
1500167F707E161FA2160FA212075A5F120EA2001E151F94C7FCA25E003E153E5E123F5E
486C495A4B5A6D1307D87DE0EB0F80D8F8F849C8FCD8F07F13FE90383FFFF8D8E00F13E0
48C690C9FC32427ABF33>I<48B9FCA3489039001FE00101F8ED007FD807E04A133F4916
1F49161E000F143F90C75BA2121E157F001C92C7FC003C171C12385D00785C1270183C00
F001011538C7491400A314035DA314075DA3140F5DA3141F5DA3143F5DA3147F92C9FCA3
5C5CA313015CA21303A25CEB0FFC003FB6FCA3383E71BD41>I<001FB5D8C001B512C0A3
26003FE0C7380FF8004AEC07E04A5D715A017F1507A291C890C7FCA2495D170E5BA20001
161E171C5BA20003163C17385BA20007167817705BA2000F16F05F5BA2001F15015F5BA2
003F1503A2495DA2007F1507A290C890C8FCA25E160E12FE161E161C163C007E15381678
5E5E15016C4A5A4B5A6C6C49C9FC153E6C6C5B3907E001F03903F80FE0C6B51280D93FFE
CAFCEB0FF03A406FBD43>I<B500F891387FFFC094B5FC1980D807FEC8380FF8006C48ED
07E0495E604DC7FC7F0001160E5F173C17385FA25F16015F4C5A7F4CC8FC00005D160E5E
A25EA25E16F05E6D495AA26D495A150793C9FC150EA25D153C15385D14805D133FEC81C0
14835D0287CAFCA2148E149E149C14F8A26D5AA25C5CA25CA291CBFC131EA23A406DBD43
>I<267FFFF890B500F890B512C0B5FC60000390C7D807FEC7380FF80001FCDA03F86E5A
745A6300014F5A98C7FC16071A0E040F151E1A1C041F153C1A38043B5DA204735D16F304
E34A5A150104C34A5AED03834FC8FCED0703190E150E715B031C153C0401143803381578
197003705D15F003E04A5A140103C04A5AEC038001FE4CC9FC0000EB0700180E140E604A
153C18384A157818704A5DA24AECFDC013FF4AECFF80A24A92CAFC91C7FC5F5B5F5B5F5B
705A5B5F52406EBD5A>I<91B500FC90383FFFF8A25E020301C0010713006E90C713F86E
ED03E04E5A616F6C49C7FC181E033F5C70133860031F5CEEE0014D5A030F495A7048C8FC
170E03075B705A03031378705AEEFDE06FB45A5F94C9FC6F5A82A2824C7E5D83ED03BFED
071F030F7F151EED3C0F03787F1570EDE007DA01C07F02031303DA07807FEC0F00021E13
01021C805C4A13004A80130149488049488149C8FC496F7E5B01FF157F00076D4A7EB500
E0010FEBFFC0A261453E7CBD43>I<B500FC91383FFFE0A25C000390C83807FE006C48ED
03F04D5A00005F6D4B5A95C7FC6D151E6E5C5F013F15706E5C4C5A011F14036E495A94C8
FC160E6D6C5B163C5E010714706E5B4B5A0103495AECFC074BC9FC0101130E6E5A5D1578
6D6C5A5D5D6E5AA292CAFCA2147E14FEA35C1301A35C1303A35C1307A3495AA3131F001F
B512C0A33B3E6EBD43>I<007FB81280B9FCA27E31047C6E45>95
D<147E49B47E903907C1C38090391F80EFC090383F00FF017E137F4914804848133F485A
A248481400120F5B001F5C157E485AA215FE007F5C90C7FCA21401485C5AA21403EDF038
5AA21407EDE078020F1370127C021F13F0007E013F13E0003E137FECF3E1261F01E313C0
3A0F8781E3803A03FF00FF00D800FC133E252977A72E>97 D<EB1FC0EA0FFF5CA2EA003F
A291C7FCA25BA2137EA213FEA25BA21201A25BA21203A25B147C3807F1FF9038F787C090
38EE03E09038FC01F0EA0FF801F013F814005B485A15FC5B1401123FA21300A248130315
F8127EA2140700FE14F05AA2EC0FE0A348EB1FC01580143F1500147E1278007C5B495A38
3C03F06C485A380F0F80D807FEC7FCEA01F81E4076BE29>I<EC1FC0ECFFF0903803F07C
90380FC01E90381F000E013E130F49131F01FC137F485A485A0007147E5B000F14384848
1300A2485AA3127F90C8FCA35A5AA55A1506150E007E141E153C1578003E14F0003FEB01
E06CEB07C0390F800F003807C07E3801FFF038007F80202977A729>I<EE3F80ED1FFF17
00A2ED007FA2167EA216FEA25EA21501A25EA21503A25EA21507A25E147E903801FF8F90
3807C1CF90391F80EFC090383F00FF017E137F5B48486D5A485AA2485A000F92C7FC5B00
1F5CA24848137EA215FE127F90C75AA214015A485CA2140316384814F0A2140716789138
0FE070127C021F13F0007E013F5B003E137FECF3E1261F01E35B3A0F8781E3802703FF00
FFC7FCD800FC133E294077BE2E>I<143F903801FFE0903807C0F090381F0078137E4913
3C485A485A12074848137C491378121F484813F8EC01F0007FEB07E09038001FC0903801
FF00EBFFF8B5128048C8FCA45AA6150C151C153C007C147815F0007EEB01E0003EEB03C0
6CEB0F806CEB1E00380780FC3803FFE0C690C7FC1E2976A729>I<167C4BB4FC923807C7
8092380F83C0151F160FED3F1FA2157E1780EE0F0093C7FC5DA414015DA414035DA30103
B512F8A390260007E0C7FCA3140F5DA5141F5DA4143F92C8FCA45C147EA414FE5CA41301
5CA4495AA4495AA4495AA2121C007E5B12FE49C9FCA2EAFC1E485A12F0EA7878EA3FE0EA
0F802A5383BF1C>I<EC03E0EC1FF891383E1E389138F80EFC903801F007EB03E0010713
03D90FC013F8EB1F80133F14004914F0137E01FE1307A2484814E0A2150F12034914C0A2
151F1207491480A2153FA2491400A25DA2000314FE140113F0000113034A5A3800F80EEB
7C3DEB1FF1903807C1F8EB00011403A25DA21407A25D140F003C5C127E00FE495A4AC7FC
147E485B38F001F8387C03E0383FFF80D807FEC8FC263B7CA729>I<EB01FC13FF5CA213
03A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C8FCEC03F890387F0FFE91383E
0F80D97E7813C0ECE007D9FFC013E014801400A2485A5BA25B0003140F16C05BA2000714
1F16805BA2000F143F16005B5D001F147EEDFE074913FCA2003F0101130FEDF80E130016
1E48ECF01CA2007E1538A200FE1570020013E048EC7FC00038EC1F0028407ABE2E>I<14
70EB01FCA314F8A2EB00E01400AD137C48B4FC38038F80EA0707000E13C0121E121CEA3C
0F1238A2EA781F00701380A2EAF03F140012005B137E13FE5BA212015BA212035B143812
0713E0000F1378EBC070A214F0EB80E0A2EB81C01383148038078700EA03FEEA00F8163D
79BB1C>I<ED0380ED0FC0151FA31680ED0F0092C7FCADEC07C0EC3FF0EC78F8ECE07CEB
01C01303EC807EEB0700A2010E13FE5D131E131CEB3C01A201005BA21403A25DA21407A2
5DA2140FA25DA2141FA25DA2143FA292C7FCA25CA2147EA214FEA25CA213015CA3383C03
F0127E38FE07E05C495A4848C8FCEAF03EEA707CEA3FF0EA0FC0224F83BB1C>I<EB01FC
13FF5CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C8FCED07C049EB1F
F0ED7838017EEBE078913801C1FC9038FE038191380703F8EBFC0E140C000190381C00E0
4A1300495A5C3803F9C0EBFB8049C8FC13FE485AEBFFC0EBEFF0EBE1FC380FE0FE147F49
7E6E7E121F16E01380A2003F1481023F13C001001301A24814031680007EEB1F07160000
FE5CEC0F1E48EB07FC0038EB01F026407ABE29>I<EB07F0EA03FF14E0A2EA000FA214C0
A2131FA21480A2133FA21400A25BA2137EA213FEA25BA21201A25BA21203A25BA21207A2
5BA2120FA25BA2121FA25BA2123FA290C7FCA25A1307127EA2EAFE0F130E12FCA2131E13
1CA2EA7C381378EA3C70EA1FE0EA0780144079BE17>I<D801F0D93F80137F3D07FC01FF
E003FFC03D0F3E07C1F80F83F03D0E1F0F00FC1E01F8001E011C90387C3800001C49D97E
707F003C01F05C0038157F4A5C26783FC05C12704A91C7FC91C7127E00F003FE1301494A
5CEA007EA20301140301FE5F495CA203031407000160495C180F03075D0003051F13E049
4A1480A2030FEC3F810007F001C0495CA2031F91383E0380120F494AEC0700A2033F150E
001FEF1E1C4991C7EA0FF80007C7000EEC03E0432979A74A>I<D801F0EB3F803A07FC01
FFE03A0F3E07C1F83A0E1F0F00FC001E011C137C001C49137E003C13F012385C38783FC0
12705C91C7FC00F015FE495CEA007EA2150101FE5C5BA2150300015D5B15075E0003020F
13704914C0A2031F13F00007ED80E05B1681EE01C0120F49EC0380A2EE0700001FEC0F0E
49EB07FC0007C7EA01F02C2979A733>I<EC1FC0ECFFF8903803F07C90380FC01FEB1F80
90393F000F80017E14C0491307484814E0485A12075B000F15F0485AA2485AA2ED0FE012
7F90C7FCA2151F4815C05AA2ED3F80A2ED7F00A248147E007C5C007E13015D4A5A003E49
5A6C495A4A5A260F803EC7FC3807C0FC3801FFF038003F80242977A72E>I<903903E001
F890390FF807FE903A1E7C1E0F80903A1C3E3C07C0013C137801389038E003E0EB783F01
7001C013F0ED80019038F07F0001E015F8147E1603000113FEA2C75AA20101140717F05C
A20103140F17E05CA20107EC1FC0A24A1480163F010F15005E167E5E131F4B5A6E485A4B
5A90393FB80F80DA9C1FC7FCEC0FFCEC03E049C9FCA2137EA213FEA25BA21201A25BA212
03A2387FFFE0B5FCA22D3A80A72E>I<027C13C0903801FF03903807C38790391F01CF80
90383E00EF4913FF01FC137F48481400485AA2485A000F147E5B121F15FE48485BA3007F
130101005BA3481303485CA31407485CA3140F5D007C131F143F147F6C495A5B381F03DF
380F07BF2607FE3FC7FCEA01F8C7FC5C147EA314FE5CA313015CA21303130748B512E0A3
223A77A729>I<D801F013FE3A07FC03FF803A0F3E0F03E0390E1F1C01001EEB3807001C
017013F0003C9038F00FE0003813E014C0D8783FEB0380007049C7FCA291C8FC12F05BEA
007EA313FE5BA312015BA312035BA312075BA3120F5BA3121F5B0007C9FC242979A726>
I<EC7F80903801FFE0903807C0F890381E003C49131C151E49130E49133E157EA2000114
7CA215106D13007FEBFF8014F86C13FF15806D13C0011F13E013079038007FF0140F1403
A21401123E007E1300007F130100FE14E0A25A48EB03C048EB078012700078EB0F006C13
3C001F13F83807FFE0C690C7FC1F297AA725>I<EB01C0EB03F01307A25CA2130FA25CA2
131FA25CA2133FA291C7FCA2007FB51280B6FC1500D8007EC7FC13FEA25BA21201A25BA2
1203A25BA21207A25BA2120FA25BA2121F141C1380A2003F133C1438EB0078147014F05C
495AEA1F03495A6C48C7FCEA07FCEA01F0193A78B81E>I<137C48B4143826038F8013FC
EA0707000E7F001E1401121CD83C0F5C12381503EA781F007001805BA2D8F03F13071400
00005D5B017E130FA201FE5C5B151F1201495CA2153F0003ED8380491403A2157F160703
7E1300A2EDFE0F160E000113019039F803BE1C0000EB073E90397C1E1E3890393FF80FF0
903907E003E0292979A730>I<017CEB038048B4EB07E039038F800FEA0707000E01C013
F0121E001C1407EA3C0F0038140316E0D8781F130100701380A2EAF03F020013C012005B
017E1303168013FE5B1507000115005BA2150E12035B5DA25DA25DA200015C4A5AEBF803
0000495AD97E0FC7FCEB1FFCEB07F0242979A729>I<017C167048B491387001FC3A038F
8001F8EA0707000E01C015FE001E1403001CEDF000EA3C0F0038177C1507D8781F4A133C
00701380A2D8F03F130F020049133812005B017E011F14784C137013FE5B033F14F00001
92C712E05BA2170100034A14C049137E17031880A2EF070015FE170E00010101141E01F8
6D131C0000D9039F5BD9FC076D5A903A3E0F07C1E0903A1FFC03FFC0902703F0007FC7FC
372979A73C>I<903903E003F090390FF80FFC90393C3C1C1F9039701E380F9039E01F70
3F000102F013803B03C00FE07F001380000714C0D9001F131C4892C7FC000E5CA2001E13
3FA2C790C8FCA25C147EA314FE5CA313014A1338A3010314781670001C4913F0007E5D01
07130100FE5D010F495A90380EF80727781C780FC7FC9038383C3C393FF01FF83907C007
E029297CA729>I<137C48B4143826038F8013FCEA0707000E7F001E1401001C15F8EA3C
0F12381503D8781F14F000701380A2D8F03F1307020013E012005B017E130F16C013FE5B
151F1201491480A2153F000315005BA25D157EA315FE5D00011301EBF803000013079038
7C1FF8EB3FF9EB07E1EB00035DA214075D121F486C485AA24A5AD87F0090C7FC007E133E
0038137E5CEB01F06C485A381E0FC0D807FFC8FCEA01F8263B79A72C>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj ecsl1095 10.95 45
/Fj 45 122 df<121E127FEAFF80A413005A123C0909778819>46
D<EC0FF0EC7FFC903801F81F903903E00F809039078003C0D90F0013E0011EEB01F05B01
7C13004914F8A2485A16FC12035B1207A2120F5BA2121F15015BA2123FA448C7EA03F8A6
00FEEC07F0A5ED0FE0A25AA216C0151FA21680A2ED3F00A2153E157E007C147C15FC5D6C
495A4A5A6C495A6C495A2607C01FC7FC3803E07C6CB45A38003FC0263F78BC2D>48
D<153015F014011407143F903803FFE0137FEBFFCFEBFC0F1300141F15C0A5143F1580A5
147F1500A55C5CA513015CA513035CA513075CA5130F5CA3131F497EB612F8A31D3D78BC
2D>I<EC01FE91380FFFE0023F13F89138FC07FC903901E001FE9039038000FF49C7EA7F
80010EEC3FC05B49EC1FE0133013700160140F13FE7FA25A161FA3EA00FC0130EC3FC090
C8FC167F1780EEFF00A24B5A5E4B5A4B5A4B5A4B5A5E4BC7FC157E5D4A5AEC03E04A5A4A
5A021EC8FC147C5C495A49481306D907805B49C7FC131E495C5B01E01438484814304848
147048B612F05A003F5D5AB7FC5EA22B3D7CBC2D>I<EC07FC91383FFF8091B512E09039
03F80FF09039078003F890390E0001FC4914FE491300017E14FFEB7F8013FFA56D485A01
3C14FE90C7FCED03FCA2ED07F816F0ED0FE0ED1FC0ED3F80ED7F0015FCEC07F0903803FF
C015F090380001FCEC007FED3F8016C0151F16E0ED0FF0A316F8A4120EEA3F80486C131F
16F012FFA2153F16E05B48C7EA7FC000E015800060ECFF0000705B6C5C003C495A001FEB
0FF0390FE03FE00003B51280C649C7FCEB1FF0283F7ABC2D>I<160C161C163C167C16FC
ED01F8A215031507150F151FED3FF01537156715C7EC018714039138070FE01406140C14
18143014709138E01FC014C0EB0180EB03001306130E49EB3F8013185B5B5B12014848EB
7F0090C7FC12065A5A12384814FE1260B8FCA3C73801FE00A25DA41403A25DA314074A7E
0107B512F8A3283E7BBD2D>I<01061403D907C0131F9138F801FE91B512FC16F84914F0
16C01680EDFC0090380C7FF091C8FC131C1318A513381330A59038701FE0903860FFF890
3863E03E90386F001F017CEB0F80017814C049EB07E04914F049130390C7FC16F8A61507
A3121FEA7F80A2150F00FF15F0A290C713E048141F00E015C0153F006015800070EC7F00
A26C14FE003C495A6C495A6CEB0FE03907E03FC06CB5C7FCC613FCEB1FE0283F7ABC2D>
I<17C04C7EA21603A2160783160FA2161FA24C7EA21667A216C7A292380187FC1683ED03
03A2150683ED0C01A21518A203307F1570ED600015E05D14014B804AC7127FA21406A24A
81173F5C021FB6FC5CA20260C7EA3FE0171F5CA2495A8449C8120FA21306130E010C8213
1C011815071338137801F882487ED807FEED1FFEB500C00103B512FC4C14F8A23E417DC0
44>65 D<011FB7FC4916F018FC903B007FE00003FE023F913800FF80F07FC04B143FF01F
E019F0180FA2027F16F85DA502FF16F092C8121F19E0183F19C0F07F8049EEFF004A4A5A
4D5AEF0FF0EF3FE04CB4C7FC49B612F8EFFF8002FCC7EA1FE0EF07F0EF03FC717E13074A
6E7E1980187FA219C0130F5CA5011FEEFF805C19005F4D5AA2013F4B5A4A4A5A4D5AEF7F
E0017FEDFF8001FF020790C7FC007F90B612FC17F0B8C8FC3D3E7DBD40>I<4BB46C1370
031F13F0037F01FC13E0913A03FF803E01913A0FF8000F83DA1FE0EB03C7DA7F80EB01EF
4AC8FCD903FCED7FC04948153F495A4948151F495A4948150F01FF178091C91207485A12
035B485A000F180084485AA248485EA295C7FC485AA412FF5BA790CCFCA2181818381830
7FA2007F1770186018E0003F5F6D1501606C6C15034DC7FC6C6C150E12076C6C5D6D1578
6C6C5D6C6C4A5AD93FC0EB07806D6C011FC8FCD907FE13FC0101B512F06D6C13C0DA07FE
C9FC3C4276BF41>I<011FB7FC4916E018F8903B007FE00007FE023FEC00FFF03FC04B6E
7E180F727E727E85027F15014B6E7EA28585A202FF178092C9FCA54918C05CA41A801303
4A16FFA41A0013074A5DA261A24E5A130F4A4B5AA261180F61011F4C5A4A153F614EC7FC
18FE4D5A013F4B5A4A4A5AEF1FE0EF7F80017F4A48C8FC01FFEC0FFC007F90B612F01780
B700FCC9FC423E7DBD45>I<011FB812F05BA29026007FE0C7127F023F150F18034B1401
1800A31970147F4B1560A502FF146092C7FCA3190017E0495D4A1301A21607161F91B6FC
495DA29138FC003F160F16071603010792C8FC5CA2196019E019C0010F14064A90C71201
1980A218031900011F5E5C180EA2181E181C013F163C4A157C4D5A1703017F150F01FFED
FFF0007F90B7FCA2B95A3C3E7DBD3D>I<4BB46C1370031F13F0037F01FC13E0913A03FF
803E01913A0FF8000F83DA1FE0EB03C7DA7F80EB01EF4AC8FCD903FCED7FC04948153F49
5A4948151F495A4948150F01FF178091C91207485A12035B485A000F180084485AA24848
5EA295C7FC485AA412FF5BA6043FB512E090C8FCA29339001FFC00715AA26D5EA2127FA2
171F6C7E60A26C7EA26C6C153F12076C6C4B5A7F6C6C15FF6C6CEC01CFD93FC0EB0787D9
1FF0EB1F07D907FE9038FC03800101B5EAF0016D6C01C0C8FCDA07FEC9FC3C4276BF47>
71 D<013FB5D8F007B512FEA39026007FF0C7380FFE006E486E5AA24B5DA4180F147F4B
5DA4181F14FF92C85BA4183F5B4A5EA491B8FC5B6102FCC8127FA318FF13074A93C7FCA4
5F130F4A5DA41703131F4A5DA41707133F4A5DA3017F150F496C4A7E007F9026FFC00FB5
12F8B65BA2473E7DBD44>I<013FB512F0A39039007FF0006E5AA25DA5147F5DA514FF92
C7FCA55B5CA513035CA513075CA5130F5CA5131F5CA5133F5CA3137F497EB612E05DA224
3E7DBD21>I<011FB500F0903803FFFE5B609026007FF0C7000113E06E486E130019FC4B
15F0614E5A0607C7FC180E027F5D4B5C60EF01C04D5A4DC8FC02FF140E92C75A17705F4C
5A4C5A49020FC9FC4A131E163F5E4C7E15030103496C7EECFC0E4B6C7E15389238E01FF0
ECFDC049B4486C7E15004A6D7E14F8707EA2010F6E7E5C707FA2717EA2011F6F7E5C717E
A2717EA2013F6F7E5C841703017F4B7E496C4A13C0007FD9FFC090B512FE61B6FC473E7D
BD46>75 D<011FB512FC5BA29026007FF8C8FCEC3FE0A25DA5147F5DA514FF92C9FCA55B
5CA513035CA513075CA21830A21860130F5CA218C0A3011F15014A15801703A21707EF0F
00013F5D4A5C5F17FE017F140301FF143F007F90B6FC5FB8FC343E7DBD38>I<90263FFF
E0933807FFFC6F5EA2D9007F94381BFC00023FEF1FF8DA3BF816370233601A67A2DA31FC
16C7F1018F147102619338030FE0A2DA60FE1506A2F10C1F14E0DAC07F03185B1930A219
601A3F01016D6C14C0028060F00180F003006F7E0606137F130302004B91C7FC6F7E60A2
4E5B495E01066D6C5D60A24D5ADB03F81401010EED0300010C03065CA26F6C5AA24D1303
131C01184B5CED00FE5F5F19070138EC7F80013060013892C7FC137801FC027E140FD807
FF023C4A7E007F01F0030FB512F0B502385B1618563E7DBD53>I<90263FFFF091381FFF
FEA281D9003F030013C06E6CED3F00023F163CDA33FE151C1918EC31FFA202306D143814
709126607FC01430A26F7EA26F6C147014E04A6C6C1460A26F7E15037014E00101130102
806D5C6F7FA2707E18010103EC3FE091C75DEE1FF0A2EE0FF8180349EC07FC010694C7FC
EE03FEA2EE01FF60010E6E1387010C1686EF7FC6A2EF3FE618EE011CED1FFE01185E170F
A217071703133801306F5A13380178150013FCD807FF1678007F13F0B51630A2473E7DBD
44>I<ED03FF033F13F09238FE01FC913907F0007FDA0FC0EB1F80023FC76C7E027EEC07
F0D901F86E7E4948140149486E7E494881011F167F495A49C9EA3F805B4917C0485A0003
171F4917E01207485AA2121F5B19F0123F5BA2127FA219E04848163FA5F07FC0A490CAEA
FF80A219005F6D5EA24D5A127F4D5AA26C6C4B5A4D5A001F5F4D5A6C6C157F4DC7FC6C6C
5D6C6CEC01F80001ED07F06C6C4A5A017EEC1F806D6C017FC8FC90390FC001FC903907F8
0FF00100B51280DA1FF8C9FC3C4276BF46>I<011FB612FE49EDFFC018F0903B007FE000
0FFC023FEC03FEEF00FF4BEC7F80F03FC0A2F01FE0A2147F5D19F0A402FFED3FE092C8FC
A219C0187F19805B4AEDFF004D5A60EF07F84D5A0103ED3FC04A49B4C7FC91B612FC17E0
02FCCAFCA213075CA5130F5CA5131F5CA5133F5CA3137F497E007FEBFFC0A2B6FC3C3E7D
BD3D>I<013FB612F017FF18E0903B007FE0003FF8023FEC07FCEF01FE4BEB007F1980F0
3FC0A2F01FE0147F4B15F0A502FFED3FE092C8FCA219C0F07F80A249EEFF004A4A5A4D5A
EF07F0EF1FE0EF7F800103DA03FEC7FC91B612F017C09139FC0007F0EE01FC70B4FC0107
6F7E4A143F84717EA3130F5CA5011F153F5CA5013F17035CA21907017F1706496C021F13
0E007FD9FFC0150CB691380FF01C943803F878CBEAFFE0F03F8040407DBD43>82
D<03FF1307020713E0021FEBF80E91397F00FE1ED901FCEB1F3ED903F0EB07BE4948EB03
FE49481301494814FC91C8FC49157C133E137E173C491538A66D1530A26D1500808080EB
7FFCECFFC06D13FCEDFF806D14E06D14F80103806D80D9003F7F1403DA007F1380150715
016F13C0167F163FA2161F1218A3160F161F00381680A31700003C5D163E007C157E007E
157C007F15FC6D495A6D495AD87DE0495AD8F8F8EB1FC0D8F07F017FC7FC39E01FFFFC01
0713F048C613C030427BBF32>I<0007B912E0A33C0FFC001FF0003F01E0160F01801603
90C7491301121E001C1700A212180038143F00304B14C0A35AA2157F485DA3C81600A215
FF93C9FCA55C5DA514035DA514075DA5140F5DA5141F5DA3143FEC7FF80003B612FE5EA2
3B3E76BD41>I<B500FE0203B5FC19FEA2000301C09138007FE06C90C9EA3F80F01E006C
171CA218186E5DA2017F5E18E0606E1401013F5E4DC7FCA26E1406A2011F5DA25F6E1438
1730010F5DA25F8001074A5AA24CC8FC6E5B160601035CA25E8001015CA25E6E13E05E6D
13015E4BC9FC1583EC7F86A2158CA215D8EC3FF85D5DA25D141F5DA292CAFC80140E140C
404074BD44>86 D<B500FE013FB56C48B512801D005C00070180010101E0C7EA3FF86C48
C849EC0FC071485D000174C7FC1B06A2636D82637E05FF5DA2DC01BF5D846ED9031F5D13
7F04064B5AA2040C4BC8FCA204186D5B6E020F1406013F0230150E1A0C0460151C1A1804
C06D13386E02071430011FEB018062150304005D5D03066E485ADAF00E1303010F010C4B
C9FC151C03181506A24B6E5A02F814010107495DA24B5DA2DAF9805D18FF02FFC85B7F4A
5EA24A93CAFCA24A157E13014A157CA24A1578A25C01001630594074BD5D>I<ECFF8001
0713F090381F00FC0138133E01F07F82D801FC6D7EA212036F7EA26C5A6C5A90C7120FA2
5EA2EC03FF147F903807FF1FEB1FE0D97F805B3801FE00EA03F8485A4848133F485A003F
92C7FC49EC018048C7FC157FA24891387E03004814FE1401007F14BE0203130690388007
3E003F90381E1F0C260FE07813F83A03FFE00FF03A007F8007C0292A7BA82D>97
D<EC1FE0ECFFFC903803F01F90390F8003C0013FC712E0017E130349130F485A4848131F
12075B4848EB0FC0001FEC078092C7FC485AA248C9FCA45A5AA9007EEC01801503007F15
006C5C150E6C6C5B000F5C6C6C5B6C6C485A3901F80F8026007FFEC7FCEB0FF0232A7AA8
28>99 D<EE03F0ED01FFA3ED000F1607A217E0A4160FA217C0A4161FA21780A491381FE0
3FECFFF8902603F01E130090380FC00790393F0003BF017E6DB4FC497F485A4848147E48
5A120F5B001F15FE485A5EA248C8FCA215015A485DA41503A25EA3127E1507A26C4A5A15
1F6C6C133F000F14776C6C497E3B03E003CFFF803901F80F0F38007FFCD90FF0EBC0002C
407ABE32>I<EC3FC0903801FFF0903807C0FC90381F803E90383E001F01FCEB0F804848
14C04913071203484814E0120F491303121F5B123F150748C7FCA290B6FCA248C9FC5AA9
007EEC0180150316006C5C150E6C6C5B000F5C6C6C5B6C6C485A3901F80F8026007FFEC7
FCEB0FF0232A7AA828>I<ED0FE0ED7FF8913801F81E913803F07E913807C0FF4A5A141F
91383F00FE147E16FC4A1300A313015CA513035CA50007B512F8A3260007E0C7FCA3130F
5CA5131F5CA5133F91C8FCA55B137EA513FE5BA4EA03FE387FFFFCB5FCA228407EBF1C>
I<177C913903F803FF91391FFF0F8F91397E0F9C1F903901F803F8D903F013F0902607E0
01130CD90FC0EBF800EC8000131F49C77EA315015B017E5CA3013E495A5E013F13076D49
5A6E485A4BC7FC90383BE0FC903831FFF09038703F800160C9FC13E0A57F7F90B512F8ED
FF806D14E06D14F890B67E3903F0000FD80FC0EB01FE48C8127E003E81127E007C8112FC
5AA25E163E167E167C6C15FC007C4A5A6CEC03E06CEC0FC0D80FC0013FC7FC3903F801FC
39007FFFF0010F90C8FC303D7FA82D>I<1470EB01FC1303A21307A2130314F8EB00E014
00ACEB07F0EA01FF14E0A2EA001F130FA314C0A5131F1480A5133F1400A55B137EA513FE
5BA4EA03FE387FFFE0A2B5FC163D7EBC19>105 D<147EEB3FFEA313011300A25CA51301
5CA513035CA5010791B5FC4A14FE5D9238007FE01780EE7E00010F14784A13E04B5A4B5A
030EC7FC5D011F5BEC80E014811483EC8FF0149F90383FB9F8ECF1FC14C04A7EEC007E15
7F497F017E80151F82150F6F7E13FE496D7E82A282D803FE49B4FC277FFFF01F13F0B515
E0A2303F7EBE30>107 D<147EEB1FFE133FA213011300A214FCA5130114F8A5130314F0
A5130714E0A5130F14C0A5131F1480A5133F1400A55B137EA513FE5BA4EA03FE387FFFF0
A2B5FC173F7EBE19>I<902707F00FF0EB07F8D801FFD93FFEEB1FFF48903CE0F01F8078
0FC0913BE3C00F81E00727001FE700D9C38013E0D90FEE903907C7000302FC02EE14F04A
14FC4A5CA24A5CA24A5C011F020F14074A4A14E0A5013F021F140F91C74914C0A549023F
141F017E92C71380A501FE4A143F49027E1500A4D803FE49B4ECFF80277FFFF03FD9F81F
13FCB5495CA246287EA74B>I<903907F00FF0D801FFEB3FFE489039E0F01F809138E3C0
0F27001FE70013C0D90FEE130702FC14E05C5CA25CA24A130F131F4A14C0A4161F133F91
C71380A4163F5B017E1500A45E13FE49147EA4D803FE49B4FC277FFFF03F13F8B55BA22D
287EA732>I<EC1FE0ECFFF8903803E03E90390F800F8090391E0007C0017CEB03E04913
01484814F0485AED00F8485A000F15FC5B121F123F90C8FC16FE5AA216FC00FE1401A5ED
03F8A216F0A2ED07E0127EED0FC0A2003EEC1F80003FEC3F006C143E6C6C5B6C6C485A39
03E003E03901F81F8026007FFEC7FCEB0FF0272A7AA82D>I<9138FE01FC013F90380FFF
80903A7FFC3E07E09238F001F8903A01FDC000FCDAFF80137E6D90C7FC4948804A15804A
141F18C0A30103150F5C18E0A3171F010716C05CA3173F1880130F4A147F18005F5F4C5A
131F4C5A6E495A4C5A6E495A02B849C7FCD93F9C13FE91380F03F8913807FFE0DA00FEC8
FC92C9FC5BA2137EA413FEA25BA4EA03FE387FFFF0B5FCA2333A81A732>I<903807E03F
D801FFEBFFC09138C3C3E0489038C70FF038001FCEEB0FCC14DC02F813E002B013C09138
F003004AC7FCA25C131FA25CA4133F91C8FCA55B137EA513FE5BA4EA03FE387FFFFCA2B5
FC24287EA723>114 D<9138FF80C0010713E390381F007F017CEB1F8001F0130F484813
075B1203150348481400A27FA27F6D90C7FC13FC3803FFE014FE6C6D7E6C14E0013F7F01
0F7F01007F1407EC01FE001813000038147E153EA2151EA2153E0078143C127C5D127E5D
007F495A39FB8003C026F1E01FC7FC38E07FFC38C01FE0222A7DA824>I<1303A45B1306
A2130EA2131EA25BA2137C13FC12011207001FB512C0B6FCA2D801F8C7FCA312035BA512
075BA5120F5BA41403001F13061380A4140E140C1300EB801C14181438000F1330EBC070
3807E1E03801FF80D8007EC7FC1A3978B723>I<D801FC14FE007F143F4848EB7FFCA200
07140300031401A34914F8A4150312074914F0A41507120F4914E0A4150F121F4914C0A2
151FA3153F90C7EA7F80A215FF90388001DF000F903803BFC09039C0073FFE3807E01E38
01FFF826003FE01300272978A732>I<48B539803FFFC0A2150026000FFC90381FF800D9
03F8EB0FE017800101020EC7FC6D6C5B6E5B027E5B027F5B6E485A91381F838003C3C8FC
EC0FC615ECEC07F86E5A811401811403EC067EEC0C7F4A7E02307FEC701F4A6C7ED901C0
7F9038038007D907007F010E1303496D7E017C80EA01FCD807FE49B4FCB5010F13F85DA2
32277FA630>120 D<90B539C003FFF0A24C13E0902707FC000113006D48EB00FC177817
7001015D5F16016E5C01004AC7FCA2160680027E5B161C1618027F5B805EA26F5AEC1F81
5E0383C8FC15C3EC0FC615CE15CC15F814075DA25D14035D5DA292C9FCA21406140E140C
5CA25C1218007E5B00FE5BA2495A4848CAFCEAF806EA600CEA7838EA3FF0EA0FC0343A80
A630>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk ectt1095 10.95 52
/Fk 52 122 df<143C147EEB01FE1303EB07FCEB0FF8EB1FE0EB3FC0EB7F80EBFF005B48
5A485AA2485A5B120F5B121F5BA2123F90C7FCA25A127EA312FE5AAD7E127EA3127F7EA2
7F121FA27F120F7F12077F6C7EA26C7E6C7E7FEB7F80EB3FC0EB1FE0EB0FF8EB07FCEB03
FE1301EB007E143C174771BE2F>40 D<127812FCB4FC7F6C7E6C7EEA0FF06C7E6C7E6C7E
1200137FEB3F80A2EB1FC0130F14E0130714F01303A214F81301A214FC1300A314FE147E
AD14FE14FCA3130114F8A2130314F0A2130714E0130F14C0131FEB3F80A2EB7F0013FE12
01485A485A485AEA3FE0485A485A90C7FC12FC1278174778BE2F>I<007FB512F8B612FC
A46C14F81E0678962F>45 D<EB0380497EA2130FA2131F133FA2137FEA01FF5A127FB5FC
A213CF138FEA7E0F1200B3B0003FB512F85A15FCA215F8A21E3977B82F>49
D<EB0FFC90383FFF8090B512E0000314F848804880391FF80FFF263FE001138090388000
7F48C7EA3FC0007E141FED0FE000FE140716F07E1503A3127E1218C8FCA2150716E0150F
16C0151FA2ED3F80ED7F005D4A5A4A5A4A5A4A5A4A5A4A5A4A5A4AC7FC495AEB07FC495A
495A495AEB7F8049C8FC485A4848EB01E0D80FF8EB03F0485A485A48B6FCB7FCA46C15E0
24397BB82F>I<EB07FF013F13E048B512F84814FE4880481580261FFC0113C09038E000
3FD83F80EB1FE06D130716F01503A26C5A6CC7FCC8FC150716E0150FA2ED1FC0157FEDFF
80020F130090380FFFFE495B5DA215FE6D7FD9000113809138003FC0ED1FE0ED07F01503
16F8150116FC1500A21218127EB4FCA2150116F8481403A2007FEC07F06DEB1FE0D83FE0
133F3A1FFE01FFC06CB612806C15006C5CC614F8013F13E0010390C7FC263A7CB82F>I<
143F4A7EA24A7EA4903801F3E0A501037FA314E101077FA414C0010F7FA490381F807EA4
013F137F4A7EA4017E6D7EA2017FB5FCA290B67EA49038FC000F48486D7EA40003814913
03A3D87FFF90383FFF80A2B56C4813C0A26C496C1380A22A397EB82F>65
D<007FB512E0B612FC15FF168016C06C15E03A03F0001FF0150FED03F8A2150116FC1500
A5150116F8150316F01507ED1FE0ED7FC090B61280160015FC15FF16C016E09039F0000F
F0ED03F8ED01FC150016FE167EA2163FA6167F167E16FEA2ED01FC1507ED1FF8007FB6FC
B712F016E0168016006C14F828387EB72F>I<91387F8038903903FFE07C010FEBF8FC49
13FC4913FF5BEBFFC048EB003F4848130FEA07F849130748481303A2484813015B123F90
C8FCA25A127E1678160012FE5AAC7E127EA21678007F15FC7EA27F121F6D13016C6C14F8
6D130312076DEB07F0D803FE130F6C6CEB1FE06C9038C07FC06DB512806D14006D5B6D5B
010313F09038007F80263A7CB82F>I<007FB57EB612F015FC81816C812607E0017F9138
003FE0151F6F7E6F7E15036F7EA26F7EA2167E167F82A41780161FAB163F1700A35E167E
A216FE4B5AA24B5A15074B5A151F4B5A4AB45A007FB65AB7C7FC5D5D15F06C148029387E
B72F>I<007FB612FCB77EA47ED803F0C7127EA7163C93C7FCA515F04A7EA490B5FCA6EB
F001A46E5A92C8FCA5160FEE1F80A9007FB7FCB8FCA46C160029387DB72F>I<007FB612
FEB8FCA47ED803F0C7123FA7161E1600A6157815FCA490B5FCA6EBF000A4157892C7FCAE
387FFFE0B57EA46C5B28387DB72F>I<02FE13E0903907FFC1F04913F3013F13FB4913FF
90B6FC4813813903FE007F49133F4848131F485A49130F485A15075B123F90C712035AA2
127EED01E092C7FC12FE5AA9EDFFFE4A13FFA27E127E6E13FEED03F0127F15077E7F121F
6D130FA26C7E6D131F6C6C133F6C7E6D137F3901FF81FF6C90B5FC7F6D13FB010F13E36D
EBC1E0D900FEC7FC283A7DB82F>I<3B7FFF807FFF80A2B56CB512C0A26C496C1380A23B
03F00003F000B290B6FCA69038F00003B3A23B7FFF807FFF80A2B56CB512C0A26C496C13
80A22A387EB72F>I<007FB512FEB7FCA46C14FE390007E000B3B3A8007FB512FEB7FCA4
6C14FE203879B72F>I<D87FFCEB7FFC486C14FE15FFA2157F6C4814FCD807C0EB1FC016
80ED3F00157E15FE5D4A5A4A5A14075D4A5A4A5A143F92C7FC147E5C13C15CEBC3FC13C7
EBCFFE80EBDFBF9038FF1F80140F01FE7FEBFC0701F87F140301F07FEBE00101C07F1400
81157C157E153E153FED1F80A2ED0FC0150716E01503D87FFCEB0FFE486CEB1FFFA46C48
EB0FFE28387DB72F>75 D<387FFFF080B5FCA27E5CD801F8C8FCB3B0161E163FA9007FB7
FCA2B8FCA27E16FE28387DB72F>I<D87FF0ECFFE06D5B00FF16F06D5B007F16E0A2D807
DE903807BE00A301DF130F01CF143EA2EC801FA201C7131EA2ECC03EA201C3133CECE07C
A201C11378ECF0F8A301C013F014F9A2EC79E0A3EC3FC0A3EC1F80A2EC0F0091C7FCADD8
7FFC903803FFE0A2486C4913F0A26C486D13E0A22C387FB72F>I<D87FF890383FFF807F
00FF4A13C07F007F6E1380A2D803EF903801F000A2148013E7A214C013E3A214E0A213E1
14F0A213E014F8A21478147CA2143EA3141FA3EC0F81A2140715C1A2140315E1A2140115
F1A21400A215F91579A2157D153DA2D87FFF131FA2B51280150F6C13006F5A2A387EB72F
>I<90383FFFC00003B512FC488048804815804815C0EBF00001C0133F4848EB1FE090C7
120F007E1407A400FE15F0481403B3A96C1407A2007E15E0A3007F140FA26D131F6C6CEB
3FC09038F801FF90B6FC6C15806C15006C5C6C5CD8003F13C0243A7BB82F>I<387FFFFE
ECFFC0B612F015FC6C80812603F0037F9138007FC0153F6F7E150F1507821503A515075E
150F151F4B5A157F913803FF8090B6C7FC5D5D5D81819038F003FF9138007F80153F151F
82150FA9EEC1E0EEC3F0A316E33A7FFF8007E7EEFFE0B512C06F13C06C497E6F1380C9EA
3E002C397EB72F>82 D<90391FF8038090397FFF07C048B512C74814EF4814FF5A381FF8
0F383FC00349C6FC48C7127F007E143F12FE48141FA2150FA46CEC0780007E91C7FC127F
6C7E7FEA1FF86CB47E6C13F86CEBFF806C14E06C6C13F8010F7F01007FEC0FFF02001380
ED3FC0151FED0FE01507A216F00078140312FCA56C140716E06C140F7F6DEB1FC001F013
7F9039FE01FF8090B612005D00FD5CD8F87F5B011F13E0D8700390C7FC243A7BB82F>I<
007FB71280B812C0A53AFC003F000FA70078ED0780C791C7FCB3B290381FFFFE497FA46D
5B2A387EB72F>I<3B7FFF801FFFE0B56C4813F0A46C496C13E0D803F0C7EAFC00B3B16D
1301A200015DA26D13036C6C495AA2017F495AEC801F90393FE07FC06DB55A6D91C7FC6D
5B6D5B010013F0EC3FC02C397FB72F>I<D87FFE90381FFF8000FF16C06D5BA2497F007F
1680D807E0903801F800A36D130300035DA36D130700015DA36D130F00005DA36D131F01
7E5CA46D49C7FCA490381F807EA46D6C5AA401075B14E1A301035B14F3A301015BA46DB4
5AA56E5A6EC8FC2A397EB72F>I<D87FFE90381FFF8000FF16C06D5BA2497F007F1680D8
07F0903803F8006C6C495AA200015D6D130F00005D6D131F017E5C017F133F6D91C7FC6E
5A011F137EA2ECC0FE010F5B14E101075BA2903803F3F0A201015B14FF6D5BA26E5AA36E
C8FCB1903807FFF8A2497FA26D5BA22A387EB72F>89 D<007FB612E0A2B712F0A36C15E0
A224077B7D2F>95 D<EB7FF03803FFFE486D7E4880488048809038C01FF8EC03FC14016E
7E6C48137E6CC7127FC87EA4EC7FFF0107B5FC133F48B6FC120748EBF83F381FFE00EA3F
F0EA7FC090C7FC12FE5AA45D7E007F5CD980037F263FE01F13FF90B712807E6C14DF6C14
0F0001D9FC01130026007FE0C8FC292A7BA82F>97 D<EA7FF0487EA4127F1201AAEC0FF0
EC3FFC91B5FC01FB14C090B67E82ECF03F9138C00FF891388003FCEC0001496D7E5B167F
4980A21780161FA8163FA26D15005EA26D14FEA26D495AEC80076E485A9138F03FF091B5
5A5E01FB5C01F991C7FC3900F07FFC9038001FE029397EB72F>I<903803FFC0010F13F8
013F7F90B57E488048158048EB007FEA0FF85B485A49EB3F004848131E90C9FC5A127EA2
12FE5AA87E127EA2127FED07806C6CEB0FC07F6C6C131F6D1480D80FFC137F3A07FF81FF
006C90B5FC6C5C6C5C013F13F0010F13C0D903FEC7FC222A79A82F>I<913803FF804A7F
A480EC000FAAEB03FCEB1FFF017F13CF90B512EF4814FF5A3807FE07380FF801391FF000
7F01C0133F485A151F48C7FC150F127E12FEA25AA87E007E141FA2127F6C6C133F157F6C
7E6D13FF380FF8012607FE0713FF90B712806C14EF6C14CF6C6C138F90261FFE071300D9
07F8C8FC29397DB72F>I<EB03FE90380FFF80013F13E090B57E488048803907FE07FE39
0FF800FF497FD81FC0EB3F80003F141F4914C090C7120F5A127E16E000FE14075AB7FCA5
16C000FCC9FC7E127EA2127F6C6CEB03C0ED07E06C7E6D130FD80FF8EB1FC0D807FE133F
9039FF80FF806C90B5FC6C15006C6C13FC6D5B010F13E0010190C7FC232A7BA82F>I<4A
B4FC020713C0021F13E0147F91B512F0A249130FEB03FC9138F807E0903907F001804AC7
FCA8007FB61280B712C0A46C1580260007E0C7FCB3A9003FB512FC4880A46C5C24397DB8
2F>I<903903F801FE903A1FFF07FF80017F13DF90B712C05A5AD9FE0FEB0F803B07F803
FC070048486C6CC7FCEBE00049137E001F147F497FA66D5B000F147E6D13FEEBF0016C6C
485A3903FE0FF890B5FC485C5D485C019F90C8FCEB83F80180C9FCA37FEA07E490B512F0
6C14FF4815C0488148813A3FC0001FF890C7EA01FC007E6E7E007C157E00FC153E48153F
82A46C5D007C153E007F15FE6C6C495A01E01307D81FFEEB7FF86CB65A6C5D000115806C
92C7FC011F13F8010313C02A3E7DA72F>I<EA7FF0487EA4127F1201AAEC0FF0EC3FFCEC
FFFE01FB7F90B67EA29138F03FC0ECC01F4A6C7E14004913075BA35BB3A23B7FFFE07FFF
80B56CB512C0A46C496C13802A387EB72F>I<EB0380EB0FE0A2497EA36D5AA2EB038090
C9FCA9383FFFE0487FA47EEA0003B3A9007FB6FCB7FC1680A216007E213979B82F>I<EC
0380EC0FE0A2EC1FF0A3EC0FE0A2EC038091C7FCA990B512E015F05AA27EA2EB0003B3B3
A5140715E0007E130F15C0B4131FEC3F8014FF90B512006C5B5C6C5B000F13E000011380
1C4E7CB82F>I<EA7FF0487EA4127F1200AB0207B5FC5C1780A21700809138003F804BC7
FC15FE4A5A4A5A4A5A4A5A4A5A4A5A4AC8FC5C01F97F13FB90B57EECE7E0ECC7F01483EC
01F8496C7E497F49137E816F7EA26F7E6F7E823B7FFFF03FFFC0B56C5A17E0A217C06C49
7E2B387EB72F>I<387FFFF080B5FCA27EA2EA0001B3B3A8007FB612E0A2B712F0A26C15
E0A224387BB72F>I<903901F801F83A7F8FFC0FFC3AFFDFFE1FFE90B5487E92B51280A2
3A7FFE1FFE1F3B07FC0FFC0FC001F813F89039F007F00701E013E0A301C013C0B3A33B7F
FC3FFC3FFCD8FFFE01FE13FE027F137FA2023F133FD87FFC01FC13FC2F2880A72F>I<EC
0FF0397FF03FFC486CB47E01FB7F90B67EA26C9038F03FC00001EBC01F4A6C7E14004913
075BA35BB3A23B7FFFE07FFF80B56CB512C0A46C496C13802A287EA72F>I<EB03FC9038
1FFF80497F90B512F0488048803907FE07FE390FF801FF9038E0007F4848EB3F8049131F
003F15C090C7120F4815E0007E1407A248EC03F0A96C1407007E15E0A2007F140FA26C6C
EB1FC0A26C6CEB3F806D137F3A0FF801FF003907FE07FE6CB55A6C5C6C5C6D5B011F1380
D903FCC7FC242A7BA82F>I<EC0FF0397FF03FFC486CB5FC01FB14C090B67E826CEBF03F
00019038C00FF891388003FCEC0001496D7E5B167F4980A21780161FA8163FA26D15005E
A26D14FEA26D495AEC80076E485A9138F03FF091B55A5E01FB5C01F991C7FC9038F87FFC
EC1FE091C9FCAD387FFFE0B57EA46C5B293C7EA72F>I<903903FE01E090390FFF83F001
3F13E390B512F34814FB4814FF481303380FFC0001F0133F4848131F485A49130F48C712
07A2127E150312FE5AA77E1507127E127F150F6C7E151F6C6C133F01F0137F6C6C13FF38
07FE036CB6FC6C14FB6C14F36D13C3011F1303EB03FC90C7FCAD4AB512E0A24A14F0A26E
14E0A22C3C7DA72F>I<ED0FF0D87FFFEB7FFE0281B5FCB51287028F14806C139F9138BF
F87F39001FFFC09238003F004A131E4A90C7FC5C5CA25C5CA45CAF007FB512F881B6FCA2
7E5D29287EA72F>I<90381FFC0E48B5129F000714FF5A5A5A387FF007EB800000FEC77E
A24880A37E007F141E01C090C7FCEA3FFC381FFFF06CEBFF80000314E0C614F8011F13FE
9038007FFF02011380EC007F0078EC1FC000FC140FED07E0A27EA27E6D130F6DEB1FC06D
133F9039FC01FF8090B6FC16005D00F814F8013F13E0D8700790C7FC232A7AA82F>I<13
0F497EAA007FB612C0B712E0A46C15C026001F80C7FCB216F0ED01F8A5ECC003ED07F090
380FE00F9138F81FE06DB512C0A26D14806DEBFE009038007FF8EC1FE025337EB12F>I<
3A7FF001FFC0486C487FA4007F7F0001EB0007B3A4150FA2151F153F6D137F6CB448B512
8091B612C07FA26D13E7010F01831380D903FEC8FC2A287EA62F>I<D87FFF90383FFF80
B56C4813C0A46C496C1380D801F0903803E000A26D130700005DA26D130F017C5CA36D49
C7FCA36D133EA36D6C5AA36D6C5AA3903803E1F0A3903801F3E0A36DB45AA36E5AA26EC8
FC2A277EA62F>I<3B7FFF801FFFE06E5AB515F0A26C16E04A7ED807C0C7EA3E00A36D14
7E0003157CA56C6C5CEC0F80EC1FC0EC3FE0A36C6C486C5AEC7DF1A214FD15F914F9D978
F85B1379137DA2ECF079157B013FEB7FC014E0153FA2ECC01F6D486C5A2C277FA62F>I<
3A3FFF80FFFE4801C17FA46C01805B27007E001FC7FC6D5B157E6D6C5AEB0FC0903807C1
F8ECE3F0903803F3E0EB01FF6D5B5D6EC8FC80A25C4A7E81903801F3E0903803E3F0EB07
E1ECC0F849487E011F137E90383F003E013E7F017E80496D7E3B7FFF807FFF806EB5FCB5
15C0A26C16804A7E2A277EA62F>I<3B7FFF803FFF80B54913C014C0A214806C6E13803B
01F00003E0007F12004B5A7F137C017E495A133EA2013F49C7FC7FA290380F803EA214C0
01075BA214E001035BA2EB01F05D14F1EB00F95DA2147BEC7FC0143FA25D141FA292C8FC
A3143EA35CA214FC000F5BEA1F81EA3FC1EBC3F0EB07E0131FEBFFC06C5BA26C48C9FC6C
5AEA03F02A3C7EA62F>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl ecrm1095 10.95 74
/Fl 74 231 df<DA03FFEB0FE0021F9038C07FF8913AFE00F1F81CD901F890383BE07ED9
07E090387FC0FF90390FC001FFD91F805CD93F005C5B017E167E01FE6D48130049147EAE
B91280A3D800FCC7007EC7FCB3AE486C14FF277FFFF83F13FFA338407FBF35>27
D<EC03FE91381FFFC09138FE01E0903901F80078D907E0131C4948137C494813FE90383F
00015B137E13FE496D5A167893C7FCAB167EB712FEA33900FC00011500167EB3AC486C14
FF277FFFF83F13FCA32E407FBF32>I<EC03FF021F13EE9138FE00FEEB01F8903807E001
EB0FC0EB1F80EB3F005B017E130001FE147E5BAEB712FEA3D800FCC7127EB3AE486C14FF
277FFFF83F13FCA32E407FBF32>I<121C127FEAFF80A213C0A3127F121C1200A5120113
80A2120313005A1206120E120C121C5A5A12600A1B78BE19>39 D<1430147014E0EB01C0
EB0380EB07005B131E5BA25B5BA2485AA2485AA212075B120FA290C7FC5AA2121E123EA3
123C127CA6127812F8B21278127CA6123C123EA3121E121FA27E7FA212077F1203A26C7E
A26C7EA213787FA27F7F7FEB0380EB01C0EB00E014701430145A77C323>I<12C07E1270
7E7E7E120F6C7E6C7EA26C7E6C7EA21378A27FA2133E131E131FA27F1480A2130714C0A3
130314E0A6130114F0B214E01303A614C01307A31480130FA214005BA2131E133E133CA2
5BA25BA2485A485AA2485A48C7FC120E5A5A5A5A5A145A7BC323>I<1506B3ABBA12E0A2
C80006C9FCB3AB3B3C7BB446>43 D<121C127FEAFF80A213C0A3127F121C1200A5120113
80A2120313005A1206120E120C121C5A5A12600A1B788819>I<B512FEA517057F951E>I<
121C127FEAFF80A5EA7F00121C0909788819>I<16C0A215011680A2150316005D1506A2
150E150CA2151C1518A215381530A21570156015E05DA214015DA2140392C7FCA25C1406
140E140CA2141C1418A214381430A214701460A214E05C13015CA2130391C8FCA25B1306
A2130E130CA2131C131813381330A213701360A213E05BA212015B120390C9FCA25A1206
A2120E120CA2121C1218A21238123012701260A212E05AA2225B7BC32D>I<EB03FC9038
1FFF8090383E07C09038F801F048486C7E4848137C49133C0007143E48487FA248C7EA0F
80A24815C0A4007EEC07E0A500FE15F0B3A3007E15E0A4007F140F6C15C0A46C15806D13
1F000F1500A26C6C133EA26C6C5B6C6C5B6C6C485A90383E07C06DB45AD903FCC7FC243F
7CBC2D>I<14C013031307131F137FEA07FFB5FC139FEAF81F1200B3B3ACEB7FF0B612F8
A31D3D78BC2D>I<EB07FC90383FFF8090B512E03901F00FF839078003FC48486C7E000E
6D7E48EC7F8048EC3FC012300070EC1FE01260A200FEEC0FF07E7FA56CC7FC121CC813E0
151FA216C0153F1680157F160015FE4A5AA24A5A4A5A4A5A5D4A5A023EC7FC5C5C495A49
5A5C495A49C71230131E5B5B491460485A485A485A90C812E048B6FC5A5A4815C0B7FCA3
243D7CBC2D>I<EB07FC90383FFF8090B512E03901F807F83907C003FC48C66C7E000E6D
7E48EC7F80EA1F80486CEB3FC07FA56C5A0007C7FCC81380157FA216005D5D4A5A4A5A5D
EC0FC0023FC7FCEB1FFCECFF809038000FE0EC03F86E7E6E7E157F1680ED3FC0A216E0A2
151F16F0A2120C123F487E487EA4ED3FE05B6CC713C01270ED7F807E6CECFF00000F495A
3907C003FC3903F80FF0C6B55A013F1380D907FCC7FC243F7CBC2D>I<150EA2151E153E
A2157E15FEA214011403A21406140E140C141814381430146014E014C0EB018013031400
1306130E130C5B133813305B13E05B485A120390C7FC1206120E120C5A123812305A12E0
B8FCA3C8EAFE00AC4A7E49B6FCA3283E7EBD2D>I<00061403D807C0130F01F813FE90B5
5AA215F05D5D92C7FC38063FF890C9FCADEB01FE90380FFF8090383E03E090387001F849
6C7ED807C0137E497F90C713800006141FC813C0A216E0150FA316F0A4123E127F487EA4
90C713E048141F12E0006015C012700030EC3F8012386CEC7F00001E14FE6C495A3907C0
03F83903F00FE0C6B55A013F90C7FCEB07F8243F7CBC2D>I<EC1FE0ECFFF8010313FE90
380FF01F90391F80078090383F0003017EEB0FC049131F4848133F485AA2485A000FEC1F
8049EB0F00001F91C7FCA25B123FA3127F90C9FCEB01FE903807FF8039FF0E03E0496C7E
90383800FC49137E0160133E01E0133F49EB1F8016C05B16E0150FA290C713F0A67EA56C
7E16E0A2121FED1FC07F000F1580153F6C6C14006C6C137E6C6C5B6C6C485A90387E07F0
6DB45A010F1380D903FCC7FC243F7CBC2D>I<12301238123E003FB612FCA316F85A16F0
16E00070C8FC0060EC01C0ED038016005D48140E150C151C5DC8123015705D4A5A5D1403
4AC7FCA2140EA25CA2143C14381478A214F85C1301A31303A313075CA3130FA5131FAA6D
5A6D5A26407BBD2D>I<EB03FC90381FFF80017F13E09038FC03F83901E000FC4848133E
48487F48C77E000E1580001E1407001C15C0003C1403A3123EA2123F15076D1480D81FE0
130F6D140001FC131E6C6C5B6D6C5A6C6D5A6CEBF1E06CEBFF806C91C7FC133F6D13C06D
7F4913F801787F48486C7E3903C01FFF48486C1380260F000313C0487F001E9038007FE0
48143F007C140F0078EC07F0150312F8481401A21500A46C15E000781401A2007C15C06C
1403001EEC0780001FEC0F00D80FC0131E6C6C137C3901FC03F86CB512E0011F1380D903
FCC7FC243F7CBC2D>I<EB03FCEB1FFF4913C09038FE07F03901F801F848486C7E484813
7C000F147E48487F5B003FEC1F80A2127F90C713C0A25AED0FE0A516F0A66C141FA27F12
3F153F121F6C6C137F0007146F6D13EF3903F001CF3900F8038F90387C070FD91FFE13E0
EB07F890C7FC151FA216C0A3ED3F80A2000F1500486C5B486C137EA25D4A5A138049485A
001C495A001EEB1FC0260FC07FC7FC3803FFFE6C13F838003FC0243F7CBC2D>I<121C12
7FEAFF80A5EA7F00121CC7FCB3A3121C127FEAFF80A5EA7F00121C092778A619>I<1507
A34B7EA24B7EA34B7EA34B7E156FA2EDCFF815C7A291380187FC1583A291380301FEA391
380600FFA2020E80020C137FA2021C800218133FA24A80161FA24A80160FA24A6D7EA349
486D7E91B6FC4981A291C712014981010680A24982177FA24982173FA2496F7EA2137071
7E13F0000183487ED80FFEED3FFEB500C00107B512F8A33D417DC044>65
D<B712FCEEFFC017F0C69039C0000FFC6D48EB03FEEE00FFEF7F80EF3FC018E0171F18F0
170F18F8A718F0171F18E0173F18C0EF7F80EFFF00EE03FEEE0FF8EE7FE091B6C7FC17E0
9139800003FCEE00FEEF7F80EF3FC0EF1FE0EF0FF018F8170718FC1703A218FEA718FC17
07A2EF0FF818F0171FEF3FE0EF7FC0933801FF80496C90380FFE00B85A17E094C7FC373E
7DBD40>I<DB3FF0130C912603FFFE131C021FEBFF80913A7FE00FC03C913AFF0001F07C
D903FCEB0078D907F0EC3CFCD91FE0140F494814074948140349C8FC4848150149150012
034848167CA24848163CA24848161CA2123F5B180C127FA349160012FFAC127F7F180CA2
123FA27F001F171C18186C7EA26C6C163818306C6C1670000117606D16E06C6CED01C06D
6CEC03806D6C14076D6CEC0F00D907F0141ED903FC5CD900FF14F091397FE007E0021FB5
1280020349C7FC9138003FF036427BBF41>I<B712FCEEFF8017E0C69039C0001FF86D48
EB03FEEE00FFEF3F80717E717E717E717E717EA2717E84841980183F19C0A319E0181FA4
19F0AB19E0A4183F19C0A21980187FA2190018FEA24D5A4D5A17074D5A4D5A4D5A05FFC7
FCEE03FE496CEB1FF8B85A178004FCC8FC3C3E7DBD45>I<B912C0A3C69038C000016D48
EB001FEF0FE01703A217011700A31860A418301630A41800A21670A216F01501150791B5
FCA3EC8007150115001670A21630A21806A3180C93C7FCA4181C1818A21838A21878A218
F0170117031707171F496CEB01FFB912E0A3373E7DBD3D>I<B91280A3C69038C000036D
48EB003FEF1FC017071703A21701A31700A41860A21630A31800A31670A216F015011507
91B5FCA3EC8007150115001670A21630A693C8FCAFEBFFE0B612F0A3333E7DBD3B>I<DB
3FF0130C912603FFFE131C021FEBFF80913A7FE00FC03C913AFF0001F07CD903FCEB0078
D907F0EC3CFCD91FE0140F494814074948140349C8FC4848150149150012034848167CA2
4848163CA24848161CA2123F5B180C127FA34993C7FC12FFAB041FB512F0127F7F933900
0FFE00EF03FC123FA27F121FA26C7EA26C7EA26C7E6C7EA26C7E6D6C14076D7E6D6C140F
D907F8141C6D6CEC387CD900FFECF03C913A7FF007E01C021FB5EA800C020349C8FC9138
003FF03C427BBF47>I<B6D8C01FB512F8A3C601C0C7381FF8006D486E5AB3A691B7FCA3
0280C7120FB3A9496C4A7EB6D8C01FB512F8A33D3E7DBD44>I<B612C0A30001EBE00038
007F80B3B3B23801FFE0B612C0A31A3E7DBD21>I<B600C090380FFFF8A3C601C0C70003
13806D48913801FC006018E04D5A604DC7FC170E5F5F17F0EE01C04C5A4CC8FC160E5E5E
5E5E4B5A4B5A15074B7E151F4B7E4B7E15FF913881CFF891388387FCEC870791388E03FE
91389C01FF14B8DAF0007F4A6D7E1480707E707EA2707E707EA2707E707EA2707F717EA2
717E717EA2717E84717E4D7E496C4A1380B600C090B512FCA33E3E7DBD46>75
D<B612F0A3C601E0C8FCEB7F80B3B01703A517071706A4170EA3171EA2173E177E17FEEE
01FC1607496C133FB8FCA3303E7DBD38>I<B56C93381FFFF06E5EA2C6F1F000D96FE0EE
6FE0A2D967F016CFA3D963F8ED018FA2D961FCED030FA3D960FE1506A2027F150CA36E6C
1418A36E6C1430A26E6C1460A36E6C14C0A26E6CEB0180A36E6CEB0300A26E6C1306A303
7F5BA26F6C5AA36F6C5AA26F6C5AA36F6C5AA2923803F980A36FB4C7FCA26F5AA213F048
6C147CD807FE4D7EB500F00138011FB512F0A34C3E7DBD53>I<B56C91387FFFF88080D8
007F030313006EEC00FCD96FF815786E15301367EB63FE80136101607F6E7EA26E7E6E7E
A26E7E6E7EA26E7E6E7EA26E7F6F7E82153F6F7E82150F6F7E8215036F7E6F1380A2EE7F
C0EE3FE0A2EE1FF0EE0FF8A2EE07FCEE03FEA2EE01FF7013B018F0177F173FA2171F170F
1707A2170301F01501487ED807FE1500B500F01570A218303D3E7DBD44>I<EDFFE00207
13FC91393FC07F809139FE000FE0D901F8EB03F0D907E0EB00FC4948147E49488049C86C
7E017E6F7E01FE8248486F7E48486F7EA248486F7EA248486F7E001F83A24982003F1880
A3007F18C049163FA300FF18E0AC007F18C06D167FA4003F18806D16FF001F1800A36C6C
4B5AA26C6C4B5A00035F6D150700015F6C6C4B5A017F4B5A6D6C4A5A011F93C7FCD90FE0
14FE6D6C495AD901F8EB03F0D900FEEB0FE091393FC07F80912607FFFCC8FC020013E03B
427BBF46>I<B712F016FF17C0C69039C0003FF06D48EB07F8EE01FE707E831880EF3FC0
A2EF1FE0A218F0A818E0A2EF3FC0A2EF7F80180017FEEE03FC4C5AEE3FE091B6128004FC
C7FC0280C9FCB3A7497EB612C0A3343E7DBD3D>I<B712C016FCEEFF80C69039C0007FE0
6D48EB0FF0EE03FC707E707E717E717EA284171F84A760173F6060177F4DC7FCEE01FC4C
5AEE0FE0EEFF8091B500FCC8FC5E91388000FFEE3FC0EE0FE0707E707E83707EA2707EA6
84A7190618C0177FA2190E496C91383FE00CB600C0011F131C94380FF038943807F870CA
3801FFE09438003F803F407DBD43>82 D<D907FC131890393FFF803890B512E03A01FC03
F8783903F0007CD807C0EB1EF84848130F48C71207481403003E1401007E1400A2007C15
7812FCA21638A36C1518A27EA26C6C14007F7FEA3FF813FF6C13F06C13FF15F06C14FC00
01806CECFF80013F14C0010714E0EB007F020713F09138007FF8151FED0FFC15071503ED
01FEA200C01400A3167EA27EA3167C7E16FC6C15F86C14016C15F06C14036DEB07E0D8FB
E0EB0FC0D8F1F8EB1F80D8F07FEB7F0039E01FFFFC010713F039C0007FC027427BBF32>
I<003FB9FCA3D9E000EBC00190C7397F80003F007EEF1F80007C170F0078170700701703
A300601701A548EF00C0A5C81600B3B24B7E4A7F0107B612F8A33A3E7DBD41>I<B600C0
90387FFFF8A3C601C0C7000313006D48EC00FC18781830B3B3A4013F16706E1560A218E0
011F5E6E1401130F6E4A5A01074BC7FC6D6C5C6D6C140E6D6C143C027F5C91393FC001F0
91390FF00FE00203B51280020049C8FCED1FF03D407DBD44>I<B500FE913803FFFEA300
0301C09138007FE06C49ED1F806C90C913006E150E017F160CA26E151C013F161880011F
5EA26E1570010F1660A26D6C5DA28001034B5AA26E1403010193C7FC806D1506A26F130E
027F140CA26E6C5BA281021F5CA26F1370020F14608102075CA2EDFC0102035CA26E6C48
C8FCA215FF6E1306A2168EED7F8C16CCED3FD8A216F86F5AA26F5AA36F5AA36F5AA23F40
7EBD44>I<B500FE013FB56C48B5FCA3000701C0010101F0C7EA3FF86C90C8D87FC0EC0F
E06CF207C0053FED03806C1B00A26E6E6C5C017F1906A26E4A7E013F61A26E4A7E011F03
675DA2EFE7FC6D6C02C35DA204017F6D6C02815DA2846D6C49C65DA36D6C01066D6C485A
A36E4990383FC0036D96C7FCA26F486D6C5A027F1706A26F48EB0FF0023F5FA2DBE07014
F8021F016001075BA204E014FC6E6C4801035BA203F115FE912607F98001015BA219FF6E
B4C85BA36E486F5AA34B153F020094C8FCA24B810378151EA20370150E0330150C58407E
BD5D>I<007FB56C48B512E0A3C601FCC7383FFC00D93FF8EC1FE06D48EC0F8095C7FC6D
6C140E6D6C140C171C6D6C5C6D6C14305F6D6D13E06E6C5B4C5A91383FE003DA1FF090C8
FC160691380FF80E913807FC0C5E913803FE38913801FF305E6E13E06F5AA26F7E6F7EA2
6F7E4B7EA2ED33FEED71FF156103C07F02016D7E15804A486C7E4A6D7E14064A6D7E021C
6D7E5C02306D7E02706D7E5C4A6D7F49486E7E130391C86C7E496F7E130E011E6F7E013E
8201FF82000701C0EC3FFFB500F049B512FEA33F3E7EBD44>I<EAFFFEA2EAFC00B3B3B3
B3AFEAFFFEA20F5B78C319>91 D<EAFFFEA2EA007EB3B3B3B3AFEAFFFEA20F5B7FC319>
93 D<007FB812FCB912FEA26C17FC3704796E46>95 D<EB1FF0EBFFFC3803E03F390F00
0FC0001C6D7E001F6D7E486C6C7E6D6C7EA3157E6C5A6CC7FCC8FCA4EC1FFEEB03FF9038
1FF87EEB7F803801FC00EA07F0485A485A485A127F90C7FC160312FEA315FEA21401007F
14BE14033A3F80071F06261FC00E138E3A0FF03C0FFC3A03FFF007F83A003FC003E0282A
7CA82D>97 D<EA01F812FFA3120712031201B1EC07F8EC1FFF9138780FC09039F9E003F0
9039FB8001F801FFC77E49147E4980EE1F805B17C0160F17E0A2160717F0AA17E0160FA3
17C0161F17806DEC3F007F01F6147E01F75C9039E38001F89039C1C003E09039C0F81F80
9026803FFEC7FCC7EA07F02C407EBE32>I<49B4FC010F13E090383F00F8017C131E4848
13074848131F4848EB3F804848137FA2485AA248C7EA3F00151E4891C7FCA2127E12FEAB
127FA36C15C07F001F14016D1480000F14036C6CEB07006C6C13066C6C131E6C6C133890
383F01F090380FFFC0D901FEC7FC222A7DA828>I<ED01F815FFA3150715031501B114FF
010713C190381F80F190387C00394848131D4848130F4848130748481303A24848130112
3F90C7FC5AA3127E12FEAA127E127FA27E7F001F1403A26C6C13076C6C130F6C6CEB0DFC
6C6CEB3DFE6C6C903871FFF090383F01E190380FFF81903A01FE01F8002C407DBE32>I<
EB03FC90381FFF8090387E07E09038F801F048486C7E4848137C48487F000F143F48487F
168048C7FC150F5A16C0127EA212FEA2B7FCA248C9FCA6127E127FA36C15C07F001F1401
6C6C148015036C6CEB07006C6C130E6C6C5B6C6C5B90383F01F090380FFFC0D901FEC7FC
222A7DA828>I<EC1FC0ECFFF0903803F038903807C0FC90380F81FE131FEB3F01133E13
7EEC00FC491300AFB6FCA3D800FCC7FCB3AE487E387FFFFEA31F407FBF1C>I<167E9039
03FC01FF903A0FFF07878090393E07CE0F9038FC03FC3901F801F83B03F000FC07004901
7CC7FC0007147EA248487FA86C6C137EA20003147C6D13FC6C6C485A6D485A9038BE07C0
26038FFFC8FCEB03FC48CAFCA47FA27F6C7E90B512F06C14FE6F7E6C6C14E048B612F839
07C0001FD81F80EB03FC48C87E003E157E48153E163F4881A56C5D007C153E007E157E6C
5D6C6C495A6C6C495AD803F0EB0FC0D800FE017FC7FC90383FFFFC010313C0293D7EA82D
>I<EA01F812FFA3120712031201B1EC03FC91380FFF8091383C0FC09138F003E0D9F9C0
7F9039FB8001F8140001FF6D7E5BA25BA25BB3A6486C497EB539F07FFFF8A32D3F7EBE32
>I<EA01C0EA07F0487EA56C5AEA01C0C8FCACEA01F8127FA3120712031201B3AC487EB5
12E0A3133D7EBC19>I<1470EB01FCEB03FEA5EB01FCEB00701400AC14FE133FA3130113
00147EB3B3A6123C007E137CB413FCA214F8130100FE13F0387803E0383E07C0380FFF00
EA01FC175084BC1C>I<EA01F812FFA3120712031201B292387FFF80A392381FFC00ED0F
E016804BC7FC151C5D5D5DEC03C04AC8FC140E141E143E147F9038F9FF809038FB9FC0EB
FF0F496C7E01FC7FEBF8036E7E816E7E157E8182151F6F7E826F7EA282486C14FEB539F0
3FFFE0A32B3F7EBE30>I<EA01F812FFA3120712031201B3B3B1487EB512F0A3143F7EBE
19>I<2701F803FCEB01FE00FF903B0FFF8007FFC0913B3C0FC01E07E0913BF003E07801
F02607F9C0D9F0E07F3D03FB8001F9C000FC000101005C01FFD900FF147E4992C7FCA249
5CA2495CB3A6486C496C14FFB528F07FFFF83F13FCA346287EA74B>I<3901F803FC00FF
90380FFF8091383C0FC09138F003E02607F9C07F3A03FB8001F80001130001FF6D7E5BA2
5BA25BB3A6486C497EB539F07FFFF8A32D287EA732>I<EB01FE90380FFFC090383F03F0
90387C00F8D801F0133E48487F4848EB0F80A24848EB07C0001F15E090C712034815F0A2
007EEC01F8A400FE15FCA9007E15F8A3007F14036C15F0A26C6CEB07E0000F15C06D130F
000715806C6CEB1F006C6C133ED800FC13FC90383F03F090380FFFC0D901FEC7FC262A7D
A82D>I<3901F807F800FFEB1FFF9138780FC09039F9E003F03A03FB8001F86CB4C77E49
147E49147FEE3F8049141F17C0A2EE0FE0A317F01607A9EE0FE0A4EE1FC0A2EE3F806D15
006D5C16FE6D495A9039FB8003F89039F9C007E09039F8F81F80DA3FFEC7FCEC07F091C9
FCAD487EB512F0A32C3A7EA732>I<02FF130C0107EBC01C90381F80F090387E003849EB
1C3CD803F8130E4848EB077C491303484814FC001F1401485A150048C8FCA412FEA97E7E
A36C7E15016C7E000F14037F000714076C6C130E6C6C131CD8007E137890383F01E09038
0FFFC0903801FE0090C8FCAD4B7E92387FFFF8A32D3A7DA730>I<3903F00FC000FFEB3F
F0ECF0F89038F1C3FC00071383EA03F33801F70313F6EC01F89038FE0060491300A45BB3
A4487EB512F8A31E287EA723>I<90387FC0603903FFF8E03807C03D381E000F48130348
1301A20070130012F01560A27EA27EB41400EA7FC013FE383FFFE06C13FC00077F6CEBFF
80C66C13C0010713E0EB003FEC0FF000C01303EC01F814007E1578A27EA27E15F07EEC01
E06C14C039F780078039F1E01F0038E0FFFC38C01FE01D2A7DA824>I<1318A61338A413
78A213F8A2120112031207001FB512C0B6FCA2D801F8C7FCB3A21560A96C6C13E015C0A2
EB7E0190383F038090381F8700EB07FEEB01F81B397EB723>I<D801F814FC00FF147FA3
000714030003140100011400B3A51501A3150312006D1307ED0EFE017C497E6D4913F890
381F80F0903807FFE00100903800FC002D297EA732>I<B539C007FFE0A32707FC000113
006C48EB007C1678000115707F00001560A2017E5CA2017F13016D5CA26D6C48C7FCA26E
5A010F1306A26D6C5AA2ECF01C01031318A26D6C5AA2ECFC7001001360A2EC7EC0A2147F
6E5AA26EC8FCA3140EA22B287EA630>I<B53B87FFFC03FFF0A33D0FFC003FE0007FC0D8
07F06D48EB3F0000036E48131E70131C6C7E03071418826C6C010F5CA26D6E1370017E01
191460A2017F6E13E06D01305CA20280EBFC01011FD9607C5BA290280FC0E07E03C7FCED
C03EA2D907E1EB3F06ED801F1786D903F3148CED000F17CCD901FEEB07D8A217F86D486D
5AA302786D5AA302306D5A3C287EA641>I<3B7FFFC00FFFE0A3000390390007FE00C6EC
03F86D14E06D5C02805B6D6C48C7FC010F130E903807E00C6E5A903803F83801015B6D6C
5A6E5AEC7F80143F141F6E7E81141FEC3BF0EC71F8ECE1FCECC0FE903801807E01037FD9
07007F010E6D7E010C130F011C6D7E498001F86D7E000181D80FFC497EB590381FFFF8A3
2D277FA630>I<B539C007FFE0A32707FC000113006C48EB007C0001157816707F000015
607F017E5CA26D495AA2EC8003011F91C7FCA290380FC006A2ECE00E0107130CA26D6C5A
A2ECF8380101133014FC01005BA2EC7EC0A2147F6E5AA26EC8FCA3140EA2140CA2141C14
18A25CA25C1238007C13E000FE5B13015C49C9FCEA7C07EA700EEA383CEA1FF8EA07E02B
3A7EA630>I<001FB61280A29038E0007F90C71300001E14FE001C495A140300185C0038
495A4A5A0030131F5D4A5A4AC7FCA2C712FE495A13035C495A495A131F9138C00180EB3F
80EB7F00A213FE485A000314035B48481400485A001F5C495B485A48C7123F4849B4FC90
B6FCA221277EA628>I<D91FF0EB01FED9FFFE90380FFF803C03E01F801F03E03C0F000F
C07C01F8001C6D6C486C7E001F902603F1F0137E3A3F8001FBE06D6CB4487FA24CEB1F80
157F6C4891C7FC6CC7FCC8ED0FC0A2157EA3021FB7FC0103B8FC90261FF87EC9FCEBFF00
EA03FCEA07F0485A485A4848133E007F143F90C7FC5A486F14C0A2037F14017014804B6C
13036C02F3EC07006C902601E1F01306283F8003C0F8130E281FC00F803E133C3C0FF03F
001F80F02603FFFC903807FFC026007FE0010090C7FC3A2A7CA841>230
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm ecsx1095 10.95 49
/Fm 49 122 df<EAFFE0ABEA1FC0A21380123F13005A127EA25AA25A0B16788A1C>44
D<007FB51280B612C0A46C14801A067F9721>I<EAFFE0AB0B0B788A1C>I<161C163E167E
A216FE16FC150116F8A2150316F0A2150716E0150F16C0A2151F1680153F1600A25D157E
15FE5DA214015DA214035D14075DA2140F5D141F5DA2143F92C7FC5C147EA214FE5CA213
015C13035CA213075C130F5CA2131F5C133F91C8FCA25B137EA213FE5B12015BA212035B
12075BA2120F5B121F5BA2123F90C9FCA25A127E12FE5AA25A1278275B7BC332>I<9038
01FFC0010F13F8013F13FE90B67E488148814801C17FEC007F48486D7E48486D7E49130F
A248486D7EA3007F81A2497FA300FF1680B3A5007F1600A26D5BA4003F5D6D130FA2001F
5D6D131F6C6C495A6D137F6C9038C1FFF06C90B55A6C5D6C5D013F49C7FC010F13F80101
13C0293F7CBC32>I<143E147F5C1303130F90B5FC123F5AB6FCA27EEA3F87EA0007B3B3
A7001FB612C04815E05AA27E6C15C0233D79BC32>I<EB03FF011F13E0017F13FC48B57E
48ECFF804815C04815E04815F04815F8EBFC07267FF00013FC4848137F49EB3FFE151F6C
5A6CC7EA0FFF7EA2120E000680C8FC5DA316FE151FA2ED3FFCA2ED7FF816F0EDFFE04A13
C04A13804A13004A5A4A5A4A5A4A5AECFFC0495B4990C7FC495A495AEB1FF0495A495A49
5A4890C8FC485A485AEA0FF048B612FE4815FF5AA57E6C15FE283D7CBC32>I<903801FF
C0011F13F8017F13FE48B67E4881000F8148815A4801017F9038F8007FD83FE06D7E6C5A
5B6CC7121F1206C8FC153FA35E157FA24B5A4A5B4A5B021F5B010FB5C7FC5D15F815FE6F
7E16E090C713F8ED3FFC151F826F7EA2811780A900605C00701600007C5C127FD8FFC049
5A01FC13FF90B65AA25E6C5D001F5D00075D000192C7FCD8003F13F8010313C0293F7CBC
32>I<913803FFC04A7FA25C5CA25CA2EC7F7FA214FE1301A2EB03FCA2EB07F8130F14F0
131F14E0133F14C0137FEBFF80A24813005B12035B1207485AA2485A5B123F485AA2485A
90B712C017E0A66C16C0C8387FE000AC6F5A2B3B7DBA32>I<0003B612F848815AA65E49
C9FCACEC3FF090B512FE6F7E16E082829138E07FFCEC003F496D7E49130F49806C5A6C48
7FC81480AA120C121E4B1300123F486C5B7FD8FFF0495A9038FE01FF6CB65A7E6C5D6C5D
6C5D000115806C6C49C7FC011F13F801031380293D7DBA32>I<913803FFE04A7F4A7FA2
4A7FA34A7FA34A7F15EF15E702FF8015C7498115C315834981158115014981815C010F81
167F5C011F81163F5C013F81161F494880A282494881A28248498182A24890B77EA34883
A3488349C8127F484882A2173F484882A2171F484882A2834848178083A249814981393F
7CBE42>65 D<92383FFF800207B512FC023FECFFC091B712F01303130F5B017F16E090B8
FC48ECF0014891C7123F02FC140F4801F014034849EC01C04AEC00404849150091CAFC5A
5BA25B127F5BA312FFA25BAD7FA2127FA37F123F7FA27F7E806C6D15306E15706C6DEC01
F06C01FC140302FF140F6C02F0EBFFF86C91B6FC7F131F7F010316E001001680023FECFE
00020714F8DA003F138035437BC040>67 D<003FB612C04815FEB812C017F017FC83717E
9026F0000180DB001F7F04077F1601707F717E173F84171F717EA3711380A383A219C0AF
1980A25FA319005FA24D5AA24D5A177F4D5A5E04075B041F5B4BB55A90B85A95C7FC17FC
5F17C06C4BC8FC6C15E03A3F78BE48>I<003FB712E04816F0B8FCA617E001F0C9FCB290
B612FE82A65E01F0C9FCB3A8127F6C5A2C3F78BE39>70 D<ED7FFF020FB512F8027F14FF
49B712E0010716F85B133F5B90B812F048ECE0034849C7123F02F8140F48491403484914
014AEC00E04849152091CAFC5A5B5B127FA25BA312FFA25BA993387FFFF8A47FA2127FA2
EE003F7FA2123F7F7F7E806C7F806C7F6C7F14FE6C9039FFE001FF6C91B6FC7F7F130F7F
010116E06D6C1500020F14F8DA007F90C7FC35437AC043>I<D83FE0ED1FF8486CED3FFC
12FFB3A690B8FCA801F0C8123FB3A9127F6C48ED1FF8363F78BE47>I<EA3FE0EA7FF012
FFB3B3B3A5127FEA3FE00C3F78BE1C>I<EA3FE0487E12FFB3B3B090B7FC1780A67E6C16
00293F78BE36>76 D<D83FF8EFFFF8486C4C13FC486C5EA26D5EA26E5DA36E5DA2D9DFE0
ED3FEFA2D9CFF0ED7FCFA3D9C7F8EDFF8FA26E5C01C3170FA26E5C01C116FE6E1407A201
C016FC6F130F027F15F86F131FA2023F15F06F133FA26E6CEB7FE0A2020F15C06F13FFA2
6E6C481380A2020315006F5AA26E6C485AA26E5C168FA2037F5B16DF6FB45AA26F5BA36F
5BA26F5BA26F90C7FC6F5A007F91C9FC6C48EF07F8463F78BE57>I<EDFFF8021FEBFFC0
91B612F8010315FE010F6F7E498249D9C01F7F90277FFE00037FD9FFF801007F4801E0EC
3FFC48496E7E48496E7E91C87E4818804981001F18C04981003F18E04981A2007F18F0A3
49167FA300FF18F8B06C6CEEFFF0A56C6C4B13E0A36C6C4B13C0A26D5D6C6D4A13806C18
006E5C6C6D4A5A6C01F8ECFFFC02FE13036C9026FFC01F5B6D90B65A011F16C06D5E0103
4BC7FC010015F8021F14C0020001F8C8FC3D437AC04A>79 D<003FB612C04815FCB8FC17
C017F083839026F000037FED007FEE1FFF8270138082A218C0A282A65EA21880A25E4C13
005EEE7FFE923803FFFC90B7FC17F05F5F4CC7FC16F001F0CAFCB3A6127F6C5A323F78BE
40>I<003FB67E4815FCB8FC17C017F083839026F000017F9238003FFF160F701380A282
18C0A282A55EA218805E1800161F4C5A4BB45A90B75A5F5F178004FCC7FC16E0EBF00082
157F826F7E151F82150F826F7FA26F7F81838183707EA2707E161F83707EA2701380A270
13C082127F6C4880323F78BE40>82 D<EC7FFC0107B512E0011F14FC017F14FF90B712C0
5A5A5A481680A248EBE00791C7FC49143F4848140FEE070049140193C7FCA47FA27F6C7E
8014F06C13FF15F86C14FF6C15C06C15F06C15FC6D806D80010F1580010315C0010015E0
140FDA007F13F0030713F8150181EE7FFC163FA2161FA412201238007C153F127F6DEC7F
F801E014FF01FC5B9026FFC00713F0B8FC17E0A217C0003F1680000F1600000315FCC66C
14F0010F14C09026007FFCC7FC2E437CC038>I<003FB912C04818E0BAFCA66C18C0C801
F0C8FCB3B3B0157F6F5A3B3F7CBE44>I<D83FE0ED3FE0486CED7FF012FFB3B3AA6C6CED
FFE0A3003F4B13C07F6C6C5C18806C6C020F130002C05B6C9039F801FFFE6C90B65A6C5E
6C6C5D6D15C0010F92C7FC010114FCD9001F13C0344178BE45>I<007F922601FFC0157F
D8FFC002076DEDFF80725C5E6C6C70160063A26D5C003F714A5AA217F76D143F001FDCE7
FE4A5AA2EE7FE36C6C705D05C3151FA2EEFFC16C6C715C0581153F17806D5B6C4C6D495A
A2187F6E48816C4B4C5AA2183F6CD9C0076F5C4C5DA2030F141FD97FE0704890C7FC5E18
0F151FD93FF0496E485AA21807011F013F03FE5B02F849150FA21803010F017F03FF5B02
FC49151FA28401074948EDBFF0808491B5FC6D91C8EBFFE0A2856D615DA2856D495F856E
486F90C8FC593F7EBE5E>87 D<000FB812804817C05AA66C1780C9001F13004C5A167F5F
4C5A4B5B5D5F4B5B4B5B5D94C7FC4B5A4B5A15FF5E4A5B4A5B5C5E4A5B4A90C8FC5C5D4A
5A4A5A5B5D495B495B5B5D4990C9FC495A137F5C495A485B5A5C485B485B5A91CAFC485A
48B8128018C0B9FCA66C1780323F7BBE3D>90 D<903803FFC0013F13F848B512FE0007EC
FF80001F15C016E0D9FE0113F09038F0007F01C014F86C48133F90C7FC000E15FC000C14
1FC8FCA7EC7FFF010FB5FC137F48B6FC1207001FEBFC1F481380EBFE00EA7FF8485AA25B
A3153F7F007F147F6D13FFEBFE076CB6FC7E6C14DF6C141F00019038FC0FF826007FC0C7
FC262D7DAB30>97 D<EA3FC0487E12FFB3A3EC1FF0ECFFFE01E76D7E01EF8090B612F082
14019039FC003FFC496D7E49130F5B6F7EA46F1380AE4B1300A35D5E6D131F6D495A6D13
7F9039FF01FFF891B55A5E5ED87FE791C7FCD83FC113FCC7EA7FC029437AC133>I<ECFF
F8010F13FF013F14C090B612F04815FC5A48EBC01F48EB00034848EB00F8491478484814
38161848481400A4485AAE6C7EA36C6C141816386D14786C6CEB01F86C6CEB03FCECC03F
6C90B5FC12016C15F0013F14C0010FEBFE00010013F0262D7DAB2D>I<4BB4FC4B1380B3
A4EB03FE90381FFFC3017F13F348B7FC5A5A48EBC03F48EB001F491307485A497F127F5B
A3485AAE6C7EA46C6C5BA26C6C5B6D133F390FFFC07F6C90B6FC7E6C14FB6C6C13E3011F
01811300D903FEC8FC29437DC133>I<903801FFC0010F13F8013F13FE90B6FC48158048
15C04801C013E03A0FFE003FF04848131F49EB0FF8485AED07FC127F5BA2ED03FE12FFA2
5BA290B6FCA516FC01E0C8FCA3127FA36C7E160C6D141C001F153C6C6C14FC01FFEB03FE
6CEBE01F6C90B5FC7E6C6C14F86D14E001071400010013F0272D7DAB2E>I<EC3FF849B5
FC1307131F5B5B9038FFF01FECE00F48EBC007EC800315005AAE003FEBFF804814C0B6FC
A36C14800003EB8000B3B07E6C90C7FC20437EC21F>I<903A03FFC003F8011FEBF83F01
7F90B512FC90B7FC1203A2480100EBE00048486D7E49133FA248486D7EAA6C6C495AA26D
137F6C6C495A6C90B55AA24892C7FC5DD80FDF13F801C313C001C0C9FCA37F7F90B6FC16
F016FC6C15FF17C0A2001F16E04816F0A2397FE00001499038003FF800FF151F5B160FA4
6D141F007F16F06D143F01F814FF6CB4010713E06C90B612C06C16806C1600000115FCD8
003F14E0010349C7FC2E3F7EAA32>I<EA3FC0487E12FFB3A3EC0FFCEC3FFF91B512C001
E314E001E714F001EF14F8EBFFC0EC807F9039FE003FFC5B151F5BA25BA35BB3A7127F6C
48EB0FF826427AC133>I<EA3FE0EA7FF012FFA9EA7FE0C7FCACEA1FE0EA3FF0127FB3B3
A2123FEA1FE00C427BC118>I<EA3F80487E12FFB3A4ED1FF0ED7FF8EDFFF05C4A13E04A
13C04A13004A5A4A5A4A5A4A5A01C15B01C35B01C75B01CF90C7FCEBDFFEEBFFFC5C8080
80A2818101FC7F5B496C7E496C7E496C7EA26E7E6E7E6E1380A26E13C06E13E0ED7FF016
F8153FED1FFC007F140F6C48EB07F8264279C131>107 D<EA3FC0EA7FE012FFB3B3B3A8
127FEA3FC00B427AC118>I<DA07FCEC7FC03D3FC03FFF8003FFF8486CB5D8E00F13FED8
FFE3DAF03F7F01E76E48148001EF92B6FC9029FFE07FFDFE0713C0913A803FFFF8034A6C
496C13E04915E0496D497E495DA24992C7FCA3495CB3A7007F0207157F6C486D48EC3FC0
432B7AAA50>I<EC0FFC393FC03FFF486CB512C0D8FFE314E001E714F001EF14F8EBFFC0
EC807F9039FE003FFC5B151F5BA25BA35BB3A7127F6C48EB0FF8262B7AAA33>I<ECFFE0
010F13FE013F6D7E90B612E048814881489038C07FFC489038001FFED81FFCEB07FF497F
003F1680497FA2007F16C0497FA300FF16E0AD6C6C4913C0A3003F16806D5BA26C6C4913
006CB4EB1FFEECC07F6C90B55A6C5DC615E06D5C010F49C7FC010113F02B2D7DAB32>I<
EC1FF0393FC0FFFED87FE76D7ED8FFEF8090B612F08214019039FC007FFC496D7E49131F
49130F8281A3178081AC5D1700A25DA24B5A7F6D495A6D137F9039FF03FFF891B55A5E5E
01E791C7FC01E113FC9038E07FC091C9FCAF127F6C5A293D7AAA33>I<EC07C0383F803F
387FC0FFEAFFC113C313C713CF13DF90B5FCECF80014E0148091C7FC5B5B5BA25BA35BB3
A3127F6C5A1A2B7AAA22>114 D<EB3FFC48B51280000714F04814FC5A5A5A9038E00FF8
EB800100FFEB007890C712381500A27FA27F13F8387FFFC014FC6C13FF15C06C14E06C14
F0000314F8C614FC013F13FE13039038001FFF14071401A200207F12701278127C007E5B
397F8003FE38FFF00790B5FC15FC15F8003F14F0000F14E00001148039001FFC00202D7D
AB26>I<13FF487F5AAA003FEBFFF04814F8B6FCA36C14F00003EB8000B3AAECC00C151C
6CEBE0FE14FFA27E6D13F06D13C090380FF8001F377EB524>I<D83FC0EB0FF8486CEB1F
FC12FFB3AB153FA2157FA215FF6C6C5AEBF80790B6FC6C14DF6C141F00079038FC0FF8C6
01E0C7FC262B7AA933>I<D87F80147F486C903801FF80A26C6C491300A27F003F4A5AA2
7F001F4A5AA27F000F4A5AA27F00074A5AA27F6C4A5AA214806C4A5AA2806C01C15BA214
E1D97FE390C7FCA214F390383FF7FEA214FF6D5BA36D5BA36D5BA2010113C0292A7EA92E
>I<007FDA0FE0EB01FCD8FFC0D93FF0EB03FE701307157F6C6CEE0FFC82A26D13FF003F
EF1FF882A29038F801FB001FDAF9FFEB3FF0A21403D80FFCEE7FE003F1138015F0EBFE07
0007EFFFC04B7F167FEBFF0F6C04E1138015C0163F6C019F1600038013F3A2161F6C01BF
ECF7FEDAFF0013FF82A26D5E5C82013F5E5C82011F5ED90FF06D5B3F2A7EA944>I<B415
FE6DEB03FF7F6DEB07FEA26C7EED0FFC123F7F001FEC1FF87F120F6DEB3FF0A212076DEB
7FE07E028013C06C14FFA26C6D1380A214E1017F1400A2EB3FF35D131FA2010F5B14FBEB
07FF5DA27F5D7F5D7FA26E5AA35D14FFA292C7FC5BA25C130338C007FCEAE00F38F81FF8
B55AA25C5C6C90C8FC5BEA0FF0283D7DA92E>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn ecsx1440 14.4 35
/Fn 35 120 df<EAFFFCAE0E0E748D26>46 D<913801FFE0021F13FE91B612C0010315F0
010F15FC49814981498290B5D8807F7F489026FE001F7F4801F801077F4A7F48496D7FA2
48496D7FA248496E7EA34890C86C7EA4481880A24981A400FF18C0B3AA007F1880A26D5D
A56C1800A26E5CA26C5FA26C6D4A5AA26E5B6C6D495B6C6D495B6E5B6C6D495B6CD9FFC0
B55A92B6FC6D5E011F4BC7FC6D5D010315F0010015C0023F91C8FC020113E03A567BD345
>48 D<153F4B7E15FF5C1407141F91B5FC130F003FB6FC5AB7FCA36C13BF383FF83FC7FC
B3B3B3A8001FB712FE4882481780A36C17006C5E315476D345>I<EC0FFF91B512F00103
14FE010F6E7E013F15E0498148B712FC48824882188048D9F00714C048D9800114E04890
C77E496E13F0484880496E13F84848807013FC5B6C4880123F18FE6C4880120F120790C9
FC7ECAFCA45E18FCA25E18F8A24C13F0A24C13E04C13C0A24C13804C13004C5A5F4B5B4B
5B4B5B4B5B4B5B4B48C7FC4B5A4B5A4A5B4A5B4A13804A90C8FC4A5A4A5A4A5A4A5A495B
495B4990C9FC495A495A495A495A495A485B485B4890CAFC485A48B812FC4817FE5AA67E
6C17FC37547AD345>I<913807FFE0023F13FE49B612C0010715F0011F15FC017F8190B8
FC4817804817C048D9FC0014E04801E0133F480180010F13F04848C7FC49806C4816F86C
48806C5A5B12036C5AC9FCA44C13F0A35E18E05E4C13C04C138093B512005D03075B037F
5B027FB512F05F17804CC7FC707E17E017FC8391C7EBFF80041F13C07013E07013F07013
F88218FC8218FEA2177F18FFAA1260007093B5FC007817FE127C007E5DB47E6D4A13FC01
F05C01FC4A13F8D9FF805B6C01F890B512F06C90B712E07E000717C06C1780C6EEFE006D
5D011F15F0010315C0D9007F49C7FC020713C038567AD345>I<EEFFFE4B7F5DA25DA25D
5DA25D16DF157F15FF169F5C161F5C5C15FE140F15FC141FEC3FF8A2EC7FF0A2ECFFE05B
15C0491380A24913005B5C131F5C495A137F5C13FF5C5A485B5C5A91C7FC5A485A5B123F
5B127F485A90B912E019F0A76C18E0C9001F90C7FCB3705A3C527CD145>I<93B57E0303
14E0A24B80A24B80A34B80A34B80177FDB7FFE7FA28303FF8116FC4A6E7FA216F84A6E7F
A24A01F08083A24A01E0808316C04A82834A018080A2834A90C77F8491B5825D84494982
A2844949828449845D84494982A249707F5D84498492B8FC4984A390BB7EA34886A24801
FCC9001F7F5C8548865C48727F5C8548865C48727F5CA248727F91CBFC86B51A805B4984
6C4872130051527BD15C>65 D<93380FFFFE0303B612F8033FEDFF804AB812F0020717FE
141F147F49B9FC4918FC5B499138FC000F013F028013004BC8121F4901F0150790B548ED
03F848028015004891CA12784A1718484917005C5A5C485BA25C5AA25CA25A91CCFCA4B5
FC5BB07F7EA4807EA280A27E80A26C7F807E6E17066C6D170E6E173E6C6E167E6C02E016
FE6D6D15036D01FEED0FFF6F6C143F010F02FC0107B5FC6D91B8FC7F7F6D6C17FC021F17
F0020717C002011700DA003F15FC030315E0DB000F01FCC7FC485678D358>67
D<93380FFFFC0303B612F0033F15FE4AB812C0020717F8021F17FE027FEFFF8049BAFC5B
5B499126FC000F14004902C013004949C8121F4901F0150790B5481501480280814891CA
127E4A173E4849170E1A06484994C7FC5C5A5C5C5AA25CA25A91CDFCA4B5FC5BAB0507B6
12C0A57F7EA394C7121F807EA280A27E80807E806C7FA26C7F806C806C14E06D7F6D13FE
6DD9FFC05C6D02FC010FB5FC6D91B8FC7F7F6D7E021F1800020717F8020117E0DA003F4B
C7FC030315E0DB000F01F8C8FC4A5678D35C>71 D<D83FFC943807FFC0486C4D13E012FF
B3AF90BBFCA949CA120FB3B2127F6C487113C04B5275D162>I<93387FFFC0030FB512FE
92B712E0020716FC021F16FF027F17C091B97E010318F849DAE000804949C7000F7F4901
F802037F4901E0020080490180033F7F90B5C96C7F4849707F4A824849707F4A8248864A
8248864A177F48864A83A2481B8091CB7EA2481BC0A44984A200FF1BE0B26C6C4E13C0A6
6C6D4D1380A36E5F6C1B00A26E94B5FC6C6D4C5BA26C6D4C5BA26C6D4C5B6C6D4C5B6E5E
6C02C0037F5B6D6D92B55A6D01F802035C6D01FF021F91C7FC6DDAF001B55A6D91B75A6D
606D606D6C17C0021F94C8FC020716FC020016E0031F92C9FCDB007F13C0535678D364>
79 D<003FB712F848EEFFC0B912F818FF8519E085858549C86C7F05077F05011480717E
7213C084841AE084A21AF0A384A660A21AE0A3601AC060604E13804DB512001707057F5B
90B95A616119C0614EC7FC18F095C8FC49CCFCB3AD127F6C5A445275D158>I<003FB712
F048EEFFC0B912F818FF19C08519F8858549C8003F7F170305001480063F13C084A27213
E084A21AF0A284A660A21AE060A24E13C0A2067F138095B5FC05031400053F5B90B95A61
6119C096C7FC18F818C095C8FC49C7123F84707F82848284707F8284707F177F84717F83
85717F8385717FA2717F717FA2727E721380A27213C0841AE07213F0A27213F87213FCA2
007F836C48177F465275D158>82 D<4AB5FC023F14F849B7FC010716E0011F16F8017F16
FE90B912805A5A5A190048EC00034801F8EB003F02E014070280804890C9FC187E49163E
007F170E49160695C7FCA57F7FA2806C7F14F014FC6CEBFFC015FC6CECFFE016FE6CEDFF
E06C16F86C16FE6C707E6D16E0011F826D16FC010382010082023F16801407DA007F15C0
030715E0ED003F040314F0EE007F051F13F883837113FC8383A2187FA51230123C003E17
FF003F18F8486C5D13E001F84B13F001FE5D6D6C5C02F0023F13E0B6D88003B5FC92B712
C01980A2003F1800000F17FC00035FC65F011F16C001034BC7FCD9003F14F0020091C8FC
3E567AD34C>I<003FBC1280481BC0BDFCA86C9026FE003FD9800F1480C992C9FCB3B3B3
AF827090CAFC52527BD15D>I<91380FFFF049B6FC010F15E0017F15F848B77E000716FF
188018C09138F0007F0280011F13E049C77ED803F816F0498013C04916F890C87EC9FCA8
0307B5FC0207B6FC91B7FC1307133F90B8FC000315034814C048EBFC004813F0485B4813
80A2B5C7FCA25BA35E7F5E6C6D5B6E5B6E90B5FC6CEBF8076C90B7FCA26C15FB6C15E36C
1583C6ECFE03013FD9F00113F0010790C9FC35397CB742>97 D<EA3FFC487E12FFB3AAED
07FF92B512E0020314F8021F14FE4A6E7E91B77E90B87E844AC66C7F02F0131F02C00107
7F4A7F91C76C7F4980A28483A3831980B04D1300A44D5AA26D5C4C5B8002E0010F5B6E5B
02FE90B55A91B75A60495E6E92C7FC021F14FC007F010714F0263FFC011480C8D83FF8C8
FC395678D447>I<913803FFF8027FEBFFC049B612F8010715FE011FEDFF80017F16E090
B8FC5A48EC800F4801FCC713C04801F0143F4A141F4816074A14034849140194C7FC91CA
FC5AA35B12FFAF127F7FA46C7F18C06C6D14016E14076C160F6E143F6C01FC903801FFE0
6C9038FF801F6C91B6FC7E7F6D1680010FEDFE00010315F0D9007F1480020301F0C7FC33
397BB73D>I<EF1FFF4D1380B3ABEC1FFC49B512C0010714F0011F14FC017F14FF90B9FC
5A5A48EC801F489038FC00034A7F4801E07F173F485B5C5A91C8FCA4485AB0127F7FA380
7E6E5C6C93B5FC6E5B6C6D5B02FC130F6C01FF137F6C91B7FC17BFC6163F6D14FE6D14F8
010F14E00101DA801F13009026003FF8C9FC39567BD447>I<913803FFE0027F13FE49B6
12C0010715F0011F81498190B77E488248028014809126FC001F13C04801F0130748496D
13E05C48496D13F0A24890C813F8A25A5B177F18FC12FFA390B8FCA618F801FCCAFCA27F
A2127FA37F7EA2806C17306E15706C6DEC01F06E14076C6D141F6C01FEEC7FF86C9039FF
C00FFF6C91B6FC7F7F010F16E06D16800100EDFC00023F14E0020101FCC7FC36397CB73F
>I<ED7FFF0207B512F0143F91B6FC5B5B5B5B49EBF00749EBC00192388000704990C712
3017005CA213FFB1003F90B512E04881B7FCA46C5DC649C8FCB3B3A9137F6D5A2C567DD5
2A>I<91261FFF80EB07F80103B500FC13FF010FECFF07013F92B5FC90B912FC5A5A48D9
FC03EBFE009126E0007F140048496D7EA248496D7FA291C77E4883AA6C5F6E5BA26C6D49
90C7FCA26C6D495A9138FC03FF6C90B65A6C5E485E4816C001EF92C8FC01E314FC260FE0
1F138091CBFCA37FA27F7F90B712C017FEEFFFC06C17F018FC6C83846C1880000718C05A
4818E05AD87FFCC87E49030713F048481501835B187FA46D16FFA26C6C4B13E06D5D6C6C
4B13C0D9FFC0143F6C01FC0103B512806C90B812006C5F000117F86C6C16E0011F168001
0303FCC7FCD9000F91C8FC3E507CB645>I<EA3FFC487E12FFB3AAED07FF037F13F04AB5
12FC0207804A80023F15804A15C091B7FC90B5D8807F13E09138FC003F4A7F4A6D13F05C
4A7FA25CA291C7FCA35BB3AF127F6C486E13E0345577D447>I<EA7FF8EAFFFC13FEAB13
FCEA7FF8C7FCB1EA3FFCEA7FFE12FFB3B3AE127FEA3FFC0F5678D520>I<EA3FF0487E12
FFB3AB93380FFFC0043F13E05E93B512C04B14804B14004B13FC4B5B4B5B037F5B92B55A
4A5C4A91C7FC4A5B4A13F84A5B4A5B4A5B01F9B55A01FB91C8FC90B55A5DA281A2818282
82A202F77F02E37F02817F02017F497E496D7E496D7F6F7F6F7FA26F7F6F7F6F7F6F7FA2
707E7013807013C07013E018F0827013F8007F816C4880355577D443>107
D<EA3FFCEA7FFE12FFB3B3B3B3A9127FEA3FFC0F5578D420>I<922607FF80EC1FFED83F
FC013F01F891B512E0486C90B500FE010314F800FF01036E010F80020FDB803F804A6F48
80027F03E1B7128091B712E390B5D8807F9026F7FE0114C09126FE001F9138F8007F02F8
6DD9FFE07F4A6D4A6D13E04A5E4A6D91C77EA24A5DA291C75CA3495EB3AF007F6F826C48
6E496E13C05B3777B66E>I<ED07FFD83FFC017F13F0486C48B512FC00FF0107804A8002
3F15804A15C091B7FC90B5D8807F13E09138FC003F4A7F4A6D13F05C4A7FA25CA291C7FC
A35BB3AF127F6C486E13E0343777B647>I<913801FFF8023FEBFFC049B612F8010715FE
011F6F7E498290B812F0488348DA801F7F9138FC00034801F001007F48496E7E4A804818
804A804818C091C87EA24818E04981A300FF18F0AE007F18E06D5DA36C18C06E5CA26C6D
4A1380A26C6D4A130002F849B5FC6C6D495B6C9026FF801F5B6C91B65A6C5F6D5E011F16
806D93C7FC010115F8D9003F14C0020301FCC8FC3C397CB745>I<ED07FFD83FFC90B512
E0267FFE0314F800FF011F14FE4A6E7E91B77E90B87E844AC68002F0131F02C06D7F4A7F
91C76C7F4980A2707FA283A3198083AD5FA21900A294B5FCA2605E6D5C606E5B02E0495B
6E133FDAFE01B55A91B75A60495E6E92C7FC021F14FC020714F0020114809126003FF8C8
FC92CAFCB3A2127F6C5A394E78B647>I<ED03F0D83FF8131F486C137F00FFEB01FF1407
5C5C5C5C91B5FC13FDEDFC0090B512E092C7FC5C14F85C5C5CA25CA291C8FCA35BB3AA12
7F6C5A243778B62F>114 D<903801FFFE011FEBFFE0017F14FC48B712804816E05A5A5A
17C048EB000701FCEB007F49141F007F1507491401EE008017007FA27F13FF14F06CEBFF
8015FCEDFF806C15E06C15F8826C15FF6C1680C616C07F011F15E0010715F0EB007F1403
DA001F13F815031500167FA20020153F1238127C127ED87F80147F01E0ECFFF001FC5B90
38FFC007B812E0A217C01780003F1600000F5D000115F8D8001F14C0010001FCC7FC2D39
7CB735>I<EB3FFC497E13FFAD003F90B512FE4881B8FCA46C5DC649C8FCB3B18016035E
6D9038801F80EDC0FF92B5FC17C07FA26DECFE006D14F001031480010001F0C7FC2A467D
C432>I<D87FE0ED07FED8FFF8ED0FFF5F6D5D007F17FE7F177F003F17FC7F17FF6C17F8
6E5B6C17F0805E6C17E0805E6C17C06E5B6C1780805E6C1700805E017F5D6E137F013F5D
8016FF6D5D8115816D5D15C36D5D15E315E76D5D15F792B5FC6D5DA26D92C7FCA36E5BA3
6E5BA26E5B6E5B38367DB53F>118 D<D87FE0DA01FEED0FFC486C4A6C6CEC1FFE6D4A16
3F846D4A167F007F1BFC847F003F4BEEFFF8847F6C4B4B13F0846E14BF6C037F4B13E084
6E143F6C03FF4B13C0717E804B5E6C03FE1780717EDAF0035E6C1B0004FC148002F86E5C
6C02075F04F814C002FC6E147F017F010F5F19E002FE13F0013F011F6D4A5A8516E0D91F
FF6E01F15B033F15F95E6DDC7FFB5B03BF92B5FCEDFF806D705CA393C7FC6D705CA25D6D
7091C7FCA25D6D705BDA7FF06E5B57367DB55E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo ecrm1440 14.4 18
/Fo 18 117 df<121FEA3F80EA7FC0EAFFE0A313F0A2127FEA3FB0EA1F301200A6137013
60A313E013C012011380120313005A1206120E5A5A5A12600C22768A20>44
D<EC1FE0ECFFFC903803F03F90390FC00FC090391F0003E0013E6D7E496D7E49147C0001
157E484880A24848EC1F80A2000F16C049140F001F16E0A3003F16F0A3491407007F16F8
A700FF16FCB3A6007F16F8A56D140F003F16F0A4001F16E0A36C6CEC1FC0A2000716806D
143F00031600A26C6C147E6C6C5CA2017E495A011FEB03E090390FC00FC0903907F03F80
902600FFFCC7FCEC1FE02E517BCE39>48 D<ECFFC0010713F8011F13FF017F14C0D9FE01
7F3A01F0003FF848486D7ED80780EB07FE48C76C7EA2001E6E1380488017C00038157F00
7816E00070153FA2B416F013C07F161FA4163F6C5A6C5A000EC8FCC913E0A2167F17C0A2
EEFF80A24B1300A24B5A5E15075E4B5A4B5A5E4B5A4BC7FC15FE5D4A5A4A5A4A5A4A5A5D
4AC8FC143E5C5C495A495A4A1470495A49C8FC011E15E05B5B13705B48481401485A48C8
13C0000E1503001FB7FCA25A5AB8FC1780A32C4F7ACE39>50 D<120E121E121F13E090B8
FCA35A17FEA217FC17F8003CC91278003816F0007816E016010070ED03C017801607EE0F
00160E48151E5E1638C912785E5E15014B5A5E15074BC7FC150E151E5DA25DA25DA21401
5D1403A214075D140FA3141F5D143FA4147FA314FF92C8FCA35BA75BAC6D5AEB00783053
7AD039>55 D<B500E0037FB5FC8080A226003FFC030313E0060013806EEE7F00D93BFF16
3E191C01397F01387FA26E7EA26E7E6E7EA26E7EA26E7E6E7EA26E7FA26E7F6F7EA26F7E
6F7EA26F7EA26F7E6F7EA26F7FA26F7F707EA2707E83161F707EA2707E707EA2701380A2
7013C0EF7FE0A2EF3FF0A2EF1FF8EF0FFCA2EF07FEEF03FFA271139CA27113DCF07FFCA2
183FA2181F180FA21807A21803017C160113FE486C1600000701C0167CB512FE193CA219
1C48527AD155>78 D<DA7FE01306902603FFFE130E010FEBFF80013FECE01E90397FC01F
F03B01FE0001FC3E4848EB007E4848EC3F7E49EC0FFE48481407484814035B003F150190
C9FC5A177E127E00FE163EA3171EA37E170EA27FA26C6C92C7FC7FA26C7E13FC6C7EEBFF
C06C13FC6CEBFF806C14F86CECFF806C15F06D14FC011F14FF6D81010181D9003F800203
80DA003F7F03037FED007FEE1FFE707E1603A270138082177F18C0A200E0163FA3171FA3
7EA318807E173F7E18006C5E6C167E6D15FE5F01E014016D4A5AD8FDF84A5AD8F8FE4A5A
D93FC0EB3FC026F01FFCEBFF800107B548C7FCD8E0015CD9003F13E048010390C8FC3256
7AD33F>83 D<EA01FE12FFA4120712011200B3A6ED3FE0913801FFFC913807C03F91391E
000FC04A6D7E0270EB03F84A6D7E6D486D7E4A147F188091C8123FEF1FC04916E0A2EF0F
F0A318F8A21707A218FCAB18F8A2170FA218F0A2EF1FE0A218C06D153F18806EEC7F0017
FED9FDC05CD9F9E0495AD9F8F0495A0278495AD9F01EEB1F8091260F807EC7FC9039E003
FFF890C7EA7FC036547CD23F>98 D<EC1FF091B5FC903903F01FC090390FC007E090391F
8003F890397F0001FC01FE6D7E4848147F485A0007ED3F805B000FED1FC05B001F16E05B
003F150FA2007F16F0A25BA212FFA290B7FCA20180C9FCA8127FA27FA2123F17706C7E17
F0000F16E07F0007ED01C06C6C14036C6C158000001507017EEC0F006D141E6D6C5BD907
E013F0903901F807C09026007FFFC7FCEC0FF82C367DB433>101
D<173F913A3FC001FF80903B01FFF807C3C0903B07E07E0E07E090391F801F9C903A3F00
0FF80F017E903807F00749010314C000019238F8010048486D6CC7FCA2000781491300A2
000F81A800075DA26D130100035DA26C6C495A00005D017E495A017F495A496C485A2701
C7E07EC8FC9038C1FFF89038803FC0000390CAFCA67FA27F7F7F6CB612C06C15FCEEFF80
6D15E0011F81017F15FCD801F8C7EA3FFED807C014034848EC00FF48C9EA7F80003E163F
007E161F007CEE0FC012FC481607A6007CEE0F80A26CEE1F00003F5E6C6C157E6C6C5DD8
03E0EC01F0D801F8EC07E0D8007EEC1F8090271FE001FEC7FC0103B512F0D9003F90C8FC
334E7DB439>103 D<EA01F0487E487E487EA56C5A6C5A6C5AC8FCB113FE12FFA4120312
011200B3B3A4EA03FFB512FCA416507CCF20>105 D<EA01FE12FFA4120712011200B3B3
B3B13803FF80B512FEA417537CD220>108 D<D801FED91FF0EC1FF000FFDAFFFEECFFFE
913D03E03F8003E03F80913D07000FE007000FE0020E902607F00E6D7E0007496D6C486D
7E0001495D0000496D6C486D7E4A5D4A5D01FFDA00FF6E7E4A5DA291C890C8FCA3495DB3
AD2603FF80902603FF80903803FF80B500FE90B500FE90B512FEA457347CB360>I<D801
FEEB1FF000FFECFFFE913803E03F913907001FC0021E6D7E000701386D7E000113300000
01706D7E5C5C01FF6E7E5CA291C7FCA35BB3AD2603FF80EB07FFB5D8FE01B512FCA43634
7CB33F>I<EC0FFC91387FFF80903901F807E0903907E001F890391F80007E49C77E017E
6E7E496E7E48486E7E48486E7E000782491401000F82491400001F82A2003F82A24848ED
7F80A400FF17C0AB007F1780A36D15FF003F1700A2001F5E6D1401000F5EA26C6C4A5A00
035E6C6C4A5A6C6C4A5A017E4A5A6D4AC7FC6D6C137E903907E001F8903903F807F09039
007FFF80DA0FFCC8FC32367DB439>I<D801FEEB3FE000FF903801FFFC913807C07F9139
1E001FC04AEB07E000030170EB03F80001496D7E6C6C48804A6D7EEF7F8091C8FCEF3FC0
4916E0171F18F0A2170F18F8A3170718FCABEF0FF8A418F0171F18E0173F18C06D157F18
806EECFF005F6E495A6E495A496C495A0278495A021EEB3F8091260F80FEC7FC913803FF
F89138007FC092C9FCB13803FF80B512FEA4364B7CB33F>I<D801FC137E00FF903801FF
8091380783C091380E0FE091381C1FF000071338000113700000136014E09138C00FE001
FDEB07C04AC7FC13FF91C8FCA55BB3AA7F00037FB67EA424347CB32C>114
D<90390FFC018090387FFF833901F803E73907C000FF48C7127F001E143F003E141F003C
140F127C0078140712F8A21503A27EA27E7E6C6C90C7FC13E0EA3FFCEBFFE06C13FE6CEB
FFC06C14F00001806C6C13FE011F7F01011480D9000F13C01400ED3FE000E0141F150FED
07F07E1503A215017EA37E16E06C1403A26C15C0ED07806D130FD8F9C0EB1F00D8F0F013
3C90387C01F839E01FFFE026C003FEC7FC24367CB42D>I<EB0380A81307A5130FA3131F
A2133FA2137F13FF5A4890B51280121FB7FCA226003F80C7FCB3A716E0AD90391FC001C0
A390390FE0038013079138F007006D6C5A903800FC1EEC3FF8EC0FE0234B7EC92C>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp ecsx2074 20.74 17
/Fp 17 118 df<B512C0B212126D9138>46 D<383FFFC04813E0B5FCB3B3B3B3B3B3A57E
6C13C013756EF438>73 D<060FB512E00507B712C094B812FE0407EFFFC0043F18F84BBB
FC03071AC0031F1AF0037F1AFC4AB648C715FF4A0380020381020F02F8C9003F14E04A02
C00407804A91CA0001804A01FC716C7F91B500F0061F7F494A727F494A72804991CC0001
80494973804949747F4949747FA24949747F4B8690B548747F488B4B8648208092CE7E48
20C04A87A248497613E0A34820F04A88A24820F8A24A88A34820FCA34A88A4B51FFEB36E
646C20FCA66E646C20F8A46C6D5213F0A36E99B5FC6C20E0A26E636C20C06F626C20806F
626C20006F626C6E505B6F626D666D6D505B6F97B5FC6D6D4F5C6D6E4E5C6D6E4E5C04F0
181F6D6E4E5C6D02FE95B6C7FC6D6E6C04035C023F02E0040F14F86E02FC047F5C6EDAFF
C00207B65A6E03FE91B75A020192BAC8FC6E6C1AFC6F6203071AC0030197C9FC6F6C18FC
040F18E004004DCAFC050716C0DD000F02E0CBFC7F7975F696>79
D<040FB57E0307B7FC037F16F00203B9FC020F18E0023F18F891BBFC01031AC0491AF05B
5B5B496290B638F800034892C8120F03F815014802C06F7E484A161F4ACA00075B484917
01864A187F4849181F1B0F4A725A1B031B01484995C8FCA780A280A2806C7F80806C14C0
8115FC6C14FF16F06C15FF6C16F86CEEFFC018FE6DEEFFE06D17FE6DEFFFC06D18F06D18
FC010118FF6D19C0023F84020F18F8020384020084033F717E0307840300841607DC003F
82050382DD001F811800071F800703801900083F14808686080314C0A286867513E0A287
A387A51218121C001E62003F1CC07F7F01F0616D1B8001FE96B5FC486C6002C01A0002F0
5F02FC5F02FF051F5B03C04C5BB600F893B5FCDBFF8002075C04FE91B65A93B9FC003F63
000F63000363C650C7FC013F61010F19F0010119C0D9003F95C8FC020717FCDA007F16E0
03034BC9FCDB000714805B7977F670>83 D<93383FFFFC030FB612E092B712FC0203EEFF
80021F17E0027F17F891B912FE0103F0FF804919E0011F9138F8000F490280EB007F4901
FCC8121F90B500F0030713C04B1501484A81484A163F92CA121F4849170F48F107804A17
034A17014896C7FCA2485BA35C5AA45CB5FCB16C7FA56C7FA36C7FA36C6D18606E18E06C
19036E17076C6E161F6C6E163F6FEEFFF06C6E15036D01FC151F6DD9FF8091B5FC6D02F8
131F6D91B8FC13036D19C06D6C1800021F17F8020717C002004CC7FC030F15E0DB003F01
F0C8FC4C5079CE5A>99 D<97B5FC4F1480B3B3A8923801FFF8033FEBFF800203B612F002
0F15FC027F15FF91B812C1010317F14917F9011F17FD499126FC003FB6FC490280130790
B500FCC71201484A6E7E03E081484A81484A8192C97E4849824A825A5CA2485BA3485BA5
5CB5FCB26C7FA57E80A2806C60A26C6D5E6E5E6C606E5E6C6E5D6F92B6FC6C02F05C6C6E
14076D01FF141F6D02F0EBFFFD6D91B612F16D17E16D17C1010117016D6C15FC021F15F0
020715C0DA007F49C71400030301E091C8FC517C79FA68>I<93B57E031F14FC4AB77E02
0716E0021F16F8027F16FE49B9FC4984010F8449DAF003804991C76C7F4901F8021F7F90
B54802077F03C06E7F484A804891C97F5C48497013805A4A7013C0A24849821BE05A5C73
13F05A5CA3851BF8B5FCA35CA291BAFCA71BF002C0CCFCA37EA4807EA36C7FA2807E806C
1A606E18E06C6D17036C6E16076F161F6C6E167F6D01F8923803FFF06D01FE150F6DD9FF
C091B5FC6D02FC131F6D91B8FC13016D19C0023F1800020F17F8020317C0DA007F4BC7FC
030F15E0DB003F01F8C8FC4D507ACE5A>I<922603FFFEEEFFC092B600F8147F020703FF
010FB5FC021FEEC07F027F04F7B6FC49BC12E05B5B011FEC800F03F8C703E0C7FC49496E
01E0C8FC4901C0021F7F90B5834B804891C86C7FA24A814885A34A814885AC6C616E5DA3
6C616E5DA26C6E4A5B6F5C6D606D01F0027F5B6D6D91B55A9238FF800F93B7C9FC61495F
4917F002DF16C0D9FF8793CAFC028015F8DA000349CBFC92CEFC5AA480A280A28014F86C
13FE91B812F0F1FFE06D18FEF2FFC06D19F01BFC6D19FF6D864986017F8648BC7E488712
0F884801F8C9121F4801C0EE007F91CB00077F484818018649737E00FF865BA287A56D61
007F636D197F6D19FF6C636E5F6C01E005075B6C01F8051F5B02FE177F6CD9FFE00307B5
5A6C02FF92B65AC692B9C7FC6D61011F19F8010719E0010096C8FC021F17F802011780DA
000303C0C9FC5B717ACD65>103 D<383FFF80487FB5FCB3B3A7EFFFFC040FEBFFE0047F
14F84BB612FE03076F7E031F824B8292B87E02C18302C3D9E0038002C790C77EDACFFC6E
7FDADFF8804B80DAFFE06E7F5D4B8092C8FC4A1880A24A81A25CA25CA35CA45CB3B3A97E
6C496F1400497B71FA68>I<383FFFC04813E0B5FCB06C13C0C8FCB3A6381FFFC04813E0
5AB3B3B3B37E6C13C0137872F731>I<EA3FFE487EB5FCB3B3A80603B512804E14C0604E
1480067F140095B55A4D14F84D5C4D5C4D5C4D5C4D91C7FC4D5B4CB55A4C14F04C5C4C5C
4C5C4C91C8FC4C5B93B55A03035C4B14E04B5C4B5C4B91C9FC4B5B92B55A4A5C02075C4A
14C04A5C4A804A8091B67E8383A28383848403F98015F04B6C7F4B6C7F4B6C7FDAFE0080
4A6D7F4A7F4A6D804A6D804A6D804A8291C86C7F83717F717F717F867180837180727F72
7F86727F84727F7214807214C01BE07214F0857313F86C846C48834D7B70FA63>107
D<383FFF804813C0B5FCB3B3B3B3B3B3AB7E6C1380127B71FA31>I<EFFFFC263FFF8001
0FEBFFE0486D017F14F8B549B612FE03076F7E031F824B8292B87E02C18302C3D9E00380
02C790C77EDACFFC6E7FDADFF8804B80DAFFE06E7F5D4B8092C8FC4A1880A24A81A25CA2
5CA35CA45CB3B3A97E6C496F1400494E71CD68>110 D<93381FFFF80307B612E0037F15
FE0203B812C0020F17F0023F17FC91BAFC010319C04985499126F8001F80490280010180
4901FCC8003F7F4901F0030F7F90B5486F7F4802800301148092CAFC48497113C0481BE0
4A8348497113F0A248497113F8A348497113FCA3481BFEA24A83A4B51AFFB06C1BFE6E5F
A46C1BFC6E5FA26C1BF86E5FA26C6D4D13F0A26C6D4D13E06E94B5FC6C6E4B14C06C6E4B
14806F5D6C02F8031F14006D6D4B5B6DD9FF8049B55A6D02F8011F5C010791B812E06D61
6D616D6C4DC7FC021F17F8020717E0020094C8FC030F15F0DB003F01FCC9FC58507ACE65
>I<EF1FC0D83FFFEC01FF486D130FB5143F93B5FC15035D151F5D5D92B6FC1481148314
87028FECE000029F49C7FC16F002BF13C091B5C8FC5D15F85D5D5D5D92C9FC5CA25C5CA2
5CA35CA45CB3B3A27E6C5B324E71CD45>114 D<EC7FFF91B57E5BB3A2003FB912E04818
F0BAFCA66C18E0D800010280C8FCB3B3B182191819387014FC6D160370131F9338FC01FF
6E90B612FEA28019F06E16C06EEDFE00020315E002004AC7FC031F13803F647CE249>
116 D<263FFF8093B5FC486D4B1480B5FCB3B3B260A360A26060606E5D6C94B6FC5F6E14
076C01FC141F913AFF8001FFFD6C91B612F118E16C17810003EEFE016C16F86C6C15C001
0F4AC71400010002C091C8FC494E71CC68>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 484 1264 a Fp(Intro)6 b(duction)66 b(to)g(the)h(legOS)f(k)-6
b(ernel.)1559 1685 y Fo(Stig)38 b(Nielsson)1394 1970
y(Septem)m(b)s(er)e(27,)h(2000)p eop
%%Page: 2 2
2 1 bop -104 153 a Fn(Contents)-104 356 y Fm(1)86 b(Ha)m(rdw)m(a)m(re)
33 b(and)h(the)g(GCC)f(cross)h(compiler)2187 b(3)32 469
y Fl(1.1)93 b(CPU)49 b(.)d(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)135
b(3)32 582 y(1.2)93 b(R)m(OM)30 b(and)h(\034rm)m(w)m(are)46
b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)135 b(3)32 695 y(1.3)93 b(External)31 b(RAM)79
b(.)45 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)135 b(3)32 808 y(1.4)93 b(The)30
b(R)m(CX)h(subsystems)24 b(.)45 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)135 b(3)32 920 y(1.5)93
b(Stac)m(k)31 b(frame)f(la)m(y)m(out)67 b(.)46 b(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)135
b(3)-104 1124 y Fm(2)86 b(The)33 b(legOS)f(k)m(ernel)g(0.2.4)2818
b(4)32 1237 y Fl(2.1)93 b(Starting)31 b(the)g(k)m(ernel)66
b(.)46 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)135 b(4)32 1350 y(2.2)93 b(Timing)29 b(.)46
b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)135 b(4)32 1463 y(2.3)93
b(T)-8 b(ask)30 b(managemen)m(t)95 b(.)46 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)135 b(5)240
1575 y(2.3.1)104 b(Dynamically)31 b(link)m(ed)g(user)f(programs)88
b(.)45 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)135 b(5)240 1688 y(2.3.2)104
b(The)31 b Fk(execi)f Fl(function)d(.)46 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)135 b(6)240 1801 y(2.3.3)104
b(The)31 b(task)e(structures)h(.)46 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)135 b(6)240 1914 y(2.3.4)104
b(Summary)31 b(of)f(the)h(notions)g(of)f(k)m(ernel)h(image,)g(user)f
(programs,)i(and)f(tasks.)122 b(.)46 b(.)g(.)f(.)h(.)f(.)135
b(7)240 2027 y(2.3.5)104 b(The)31 b(sc)m(heduler)41 b(.)k(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)135
b(7)32 2140 y(2.4)93 b(Memory)30 b(managemen)m(t)c(.)45
b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)135 b(8)240 2253 y(2.4.1)104 b(Allo)s(cating)31 b(memory)46
b(.)g(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)135
b(8)240 2366 y(2.4.2)104 b(F)-8 b(reeing)31 b(memory)25
b(.)46 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)135 b(9)32 2479 y(2.5)93 b(In)m(terpro)s(cess)30
b(comm)m(unication)59 b(.)45 b(.)h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)135 b(9)32 2592 y(2.6)93 b(Semaphore)32
b(facilit)m(y)78 b(.)46 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)135 b(9)32 2705 y(2.7)93
b(IR)29 b(net)m(w)m(orking)35 b(.)46 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)90
b(10)-104 2908 y Fm(3)c(P)m(eripheral)32 b(devices)2985
b(10)32 3021 y Fl(3.1)93 b(Motor)30 b(con)m(trol)51 b(.)46
b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)90 b(10)240 3134 y(3.1.1)104 b(The)31
b(motor)g(hardw)m(are)58 b(.)45 b(.)h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)90 b(10)240 3247 y(3.1.2)104 b(Motor)30
b(handler)i(function)90 b(.)46 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)90 b(10)240 3359 y(3.1.3)104 b(User)30 b(in)m(terface)h(to)g
(motor)g(con)m(trol)71 b(.)46 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)90
b(10)32 3472 y(3.2)j(Sensor)30 b(con)m(trol)38 b(.)46
b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)90 b(10)240 3585 y(3.2.1)104 b(The)31
b(on-c)m(hip)h(A/D)e(con)m(v)m(erter)75 b(.)46 b(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)90 b(11)240 3698 y(3.2.2)104 b(Initialisation)91
b(.)45 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)90 b(11)240 3811 y(3.2.3)104 b(The)31 b(A/D)f(in)m(terrupt)i
(handler)77 b(.)46 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)90
b(11)240 3924 y(3.2.4)104 b(Rotation)31 b(sensors)75
b(.)45 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)90 b(11)240 4037 y(3.2.5)104 b(User)30 b(in)m(terface)h(to)g
(sensors)49 b(.)d(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)90
b(12)32 4150 y(3.3)j(Sound)31 b(con)m(trol)48 b(.)e(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)90
b(12)240 4263 y(3.3.1)104 b(The)31 b(sound)f(handler)59
b(.)46 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)90
b(12)240 4376 y(3.3.2)104 b(Hardw)m(are)32 b(issues)25
b(.)46 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)90 b(12)240 4489 y(3.3.3)104 b(User)30 b(in)m(terface)h(for)f
(the)h(sound)g(driv)m(er)76 b(.)45 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)90
b(12)32 4601 y(3.4)j(LCD)30 b(displa)m(y)h(con)m(trol)80
b(.)45 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)90 b(12)240 4714 y(3.4.1)104 b(The)31 b(LCD)g(handler)e(.)45
b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)90
b(12)240 4827 y(3.4.2)104 b(User)30 b(in)m(terface)h(to)g(the)g(LCD)f
(displa)m(y)e(.)46 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)90 b(13)32
4940 y(3.5)j(Button)31 b(con)m(trol)85 b(.)45 b(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)90
b(13)240 5053 y(3.5.1)104 b(The)31 b(button)g(handler)24
b(.)46 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)90
b(13)240 5166 y(3.5.2)104 b(Hardw)m(are)32 b(issues)25
b(.)46 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)90 b(13)240 5279 y(3.5.3)104 b(The)31 b(button)g(user)f(in)m
(terface)76 b(.)45 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)90
b(13)-104 5482 y Fm(References)3421 b(13)1858 6065 y
Fl(2)p eop
%%Page: 3 3
3 2 bop -104 -142 a Fj(1)91 b(HARD)m(W)-10 b(ARE)29 b(AND)h(THE)g(GCC)h
(CR)m(OSS)g(COMPILER)945 b(1.3)91 b(External)31 b(RAM)p
-104 -105 3969 4 v -104 153 a Fn(Abstract)-77 356 y Fi(This)c(article)h
(pr)-5 b(esents)28 b(an)f(intr)-5 b(o)g(duction)28 b(to)f(the)h(le)-5
b(gOS)-104 468 y(kernel)26 b(with)e(emphasis)h(on)f(do)-5
b(cumentation)26 b(of)e(the)i(ker-)-104 581 y(nel)j(sour)-5
b(c)g(e)31 b(version)e(0.2.4,)g(and)f(less)h(emphasis)g(on)f(the)-104
694 y(low)k(level)i(har)-5 b(dwar)g(e)34 b(issues.)37
807 y(L)-5 b(e)g(gOS)42 b(is)e(an)h(op)-5 b(en)41 b(sour)-5
b(c)g(e)43 b(emb)-5 b(e)g(dde)g(d)44 b(op)-5 b(er)g(ating)-104
920 y(system,)24 b(fe)-5 b(aturing)24 b(pr)-5 b(e)g(emptive)26
b(multitasking,)f(dynamic)-104 1033 y(lo)-5 b(ading)47
b(of)f(pr)-5 b(o)g(gr)g(ams,)50 b(dynamic)c(memory)g(manage-)-104
1146 y(ment)d(and)g(IR)f(networking.)73 b(L)-5 b(e)g(gOS)44
b(is)f(designe)-5 b(d)44 b(to)-104 1259 y(run)j(on)f(a)g(L)-5
b(e)g(go)48 b(Mindstorm)e(R)n(CX)f(brick)j(b)-5 b(ase)g(d)48
b(on)-104 1372 y(the)35 b(Hitachi)f(H8/3292)h(micr)-5
b(o)g(c)g(ontr)g(ol)5 b(ler.)49 b(L)-5 b(e)g(gOS)35 b(was)-104
1485 y(starte)-5 b(d)50 b(by)f(Markus)h(No)-5 b(ga)50
b(in)e(Octob)-5 b(er)51 b(1998,)i(c)-5 b(on-)-104 1598
y(tinuously)48 b(evolving)h(as)f(an)f(op)-5 b(en)49 b(sour)-5
b(c)g(e)49 b(pr)-5 b(oje)g(ct)50 b(at)-104 1710 y Fl(h)m
(ttp://legOS.sourceforge.net)-104 1997 y Fn(1)137 b(Ha)l(rdw)l(a)l(re)
44 b(and)h(the)g(GCC)g(cross)102 2146 y(compiler)-104
2349 y Fl(This)34 b(section)h(brie\035y)g(describ)s(es)f(the)h(R)m(CX)f
(hardw)m(are)-104 2462 y(as)25 b(w)m(ell)i(as,)f(the)g(con)m(v)m(en)m
(tions)i(used)d(b)m(y)h(the)g(GCC)g(cross)-104 2575 y(compiler)32
b(are)e(discussed.)-104 2818 y Fh(1.1)112 b(CPU)-104
2990 y Fl(The)34 b(R)m(CX)f(bric)m(k)g(uses)g(the)h(Hitac)m(hi)g
(H8/3292)g(micro-)-104 3103 y(con)m(troller)f(extended)f(with)f(32k)g
(external)g(RAM.)f(The)-104 3216 y(micro)s(con)m(troller)41
b(supp)s(orts)d(a)h(16)g(bit)g(address)f(space,)-104
3329 y(and)22 b(has)f(16)g(8)g(bit)h(registers)f
(\(R0H,R0L,...,R7H,R7L\),)-104 3442 y(whic)m(h)37 b(also)f(ma)m(y)h(b)s
(e)f(accessed)g(as)g(8)g(16)g(bit)g(registers)-104 3555
y(\(R0,...,R7\))g(for)g(addressing)g(purp)s(oses.)58
b(There)36 b(are)h(2)-104 3668 y(con)m(trol)k(registers:)59
b(a)40 b(16)f(bit)h(program)h(coun)m(ter)g(reg-)-104
3780 y(ister)49 b(\(PC\))g(and)g(an)f(8)h(bit)f(conditions)i(co)s(de)e
(regis-)-104 3893 y(ter)38 b(\(CCR\).)g(The)g(R7)f(register)h(is)f
(used)g(as)h(the)f(stac)m(k)-104 4006 y(p)s(oin)m(ter)26
b(register,)g(and)f(p)s(oin)m(ts)g(to)g(the)g(top)g(of)f(the)h(stac)m
(k)-104 4119 y(\(lo)m(w)m(est)33 b(address\).)45 b(In)32
b(the)g(assem)m(bly)g(language)h(SP)f(is)-104 4232 y(synon)m(ymous)d
(with)h(R7.)39 b(All)29 b(stac)m(k)g(op)s(erations)h(access)-104
4345 y(the)h(stac)m(k)f(in)h(2-b)m(yte)g(w)m(ords.)-104
4588 y Fh(1.2)112 b(ROM)38 b(and)e(\034rmw)m(a)m(re)-104
4760 y Fl(The)d(CPU)f(has)g(16kb)h(of)f(R)m(OM,)g(con)m(taining)i(soft)
m(w)m(are)-104 4873 y(pro)m(vided)44 b(b)m(y)f(the)g(man)m(ufacturer.)
79 b(The)44 b(R)m(OM)e(con-)-104 4986 y(tains)27 b(a)h(driv)m(er)g
(whic)m(h)g(is)f(run)h(when)g(the)f(R)m(CX)g(is)g(p)s(o)m(w-)-104
5099 y(ered)f(up.)40 b(The)26 b(R)m(OM)g(pro)m(vides)g(lo)m(w)h(lev)m
(el)f(routines)h(for)-104 5212 y(driving)35 b(the)g(R)m(CX)g(and)g(its)
g(subsystems.)53 b(The)35 b(R)m(OM)-104 5325 y(in)m(terrupt)i(handlers)
e(call)g(addresses)g(in)g(RAM,)e(whic)m(h)-104 5437 y(allo)m(ws)42
b(the)f(\034rm)m(w)m(are)i(to)e(customise)g(in)m(terrupt)i(han-)-104
5550 y(dling,)29 b(further)f(details)h(of)e(the)h(R)m(OM)g(can)g(b)s(e)
f(found)h(in)-104 5663 y([5].)2063 153 y(The)c(R)m(OM)f(driv)m(er)h(is)
f(resp)s(onsible)g(for)g(starting)h(the)1922 266 y(\034rm)m(w)m(are,)38
b(whic)m(h)e(is)e(the)h(soft)m(w)m(are)h(stored)f(in)g(the)g(ex-)1922
378 y(ternal)43 b(RAM.)e(By)g(factory)h(default)g(this)g(con)m(tains)h
(a)1922 491 y(b)m(yteco)s(de)31 b(in)m(terpreter,)j(lea)m(ving)d(only)g
(6k)g(of)f(RAM)g(for)1922 604 y(user)37 b(programs.)63
b(When)37 b(legOS)h(is)f(do)m(wnloaded,)42 b(the)1922
717 y(\034rm)m(w)m(are)32 b(is)e(replaced)i(b)m(y)f(the)f(k)m(ernel)h
(image.)2063 830 y(LegOS)f(only)f(uses)g(a)g(few)g(of)f(the)i(R)m(OM)f
(functions,)1922 943 y(whic)m(h)23 b(are)g(the)g(functions)f(dealing)i
(with)e(p)s(o)m(w)m(er)i(on/o\033,)1922 1056 y(refreshing)31
b(of)f(the)g(displa)m(y)h(and)g(sound)g(pla)m(ying.)1922
1293 y Fh(1.3)112 b(External)37 b(RAM)1922 1465 y Fl(The)k(external)h
(RAM)e(is)h(referenced)h(in)f(the)h(0x8000-)1922 1578
y(0xFFFF)26 b(address)i(range,)g(although)g(parts)f(of)g(this)g(ad-)
1922 1691 y(dress)e(space)h(are)g(reserv)m(ed)g(for)g(memory)g(mapp)s
(ed)g(I/O.)1922 1803 y(Esp)s(ecially)48 b(the)h(on-c)m(hip)h(registers)
e(are)g(mapp)s(ed)h(to)1922 1916 y(memory)36 b(in)f(the)g
(0xFF88-0xFFFF)g(range.)56 b(F)-8 b(urther-)1922 2029
y(more,)23 b(addresses)d(are)h(reserv)m(ed)g(for)f(LCD)h(displa)m(y)g
(mem-)1922 2142 y(ory)-8 b(,)32 b(memory)h(mapp)s(ed)f(motor)g(con)m
(trol,)i(shado)m(w)f(reg-)1922 2255 y(isters)38 b(for)g(I/O)g(p)s
(orts,)i(and)e(in)m(terrupt)i(v)m(ectors.)65 b(The)1922
2368 y(RAM)35 b(holds)i(the)f(k)m(ernel)h(image)g(and)g(user)f
(programs)1922 2481 y(and)d(is)g(th)m(us)g(divided)g(in)m(to)h(a)f(k)m
(ernel)h(part)f(and)h(a)e(user)1922 2594 y(program)38
b(part.)61 b(The)37 b(k)m(ernel)h(part)g(is)e(lo)s(cated)i(in)f(the)
1922 2707 y(lo)m(w)m(er)e(part)f(of)f(memory)-8 b(,)36
b(and)d(user)h(programs)g(are)g(lo-)1922 2820 y(cated)26
b(at)g(higher)h(addresses,)f(see)g(section)g(2.4.)40
b(Besides)1922 2933 y(the)25 b(external)h(RAM,)d(the)j(R)m(CX)e(do)s
(es)h(not)g(pro)m(vide)h(an)m(y)1922 3046 y(storage)e(devices,)g(so)f
(consequen)m(tly)h(there)g(is)f(no)g(notion)1922 3158
y(of)30 b(a)g(\034lesystem)g(in)h(legOS.)1922 3396 y
Fh(1.4)112 b(The)36 b(RCX)i(subsystems)1922 3567 y Fl(The)30
b(Hitac)m(hi)g(H8/3292)h(micro)s(con)m(troller)h(is)d(equipp)s(ed)1922
3680 y(with)41 b(a)g(n)m(um)m(b)s(er)h(of)e(on-c)m(hip)i(subsystems.)70
b(This)41 b(in-)1922 3793 y(clude)d(a)g(16)g(bit)g(timer,)j(8)d(bit)g
(timer)h(mo)s(dule)f(with)g(2)1922 3906 y(c)m(hannels,)j(an)d(A/D)g
(con)m(v)m(erter,)k(I/O)c(p)s(orts.)63 b(The)38 b(16)1922
4019 y(bit)31 b(timer)h(is)e(used)h(to)h(generate)g(the)f(timer)h(in)m
(terrupts)1922 4132 y(whic)m(h)k(driv)m(es)f(the)g(OS.)g(The)g(2)f(8)h
(bit)g(timer)g(c)m(hannels)1922 4245 y(are)28 b(used)f(for)g
(generating)j(signals)d(to)h(the)f(sp)s(eak)m(er)h(and)1922
4358 y(for)f(timing)i(infared)f(comm)m(unication.)42
b(The)28 b(A/D)g(con-)1922 4471 y(v)m(erter)38 b(is)f(used)g(to)g
(sample)h(the)f(analog)h(signals)f(from)1922 4583 y(the)k(sensors.)71
b(The)42 b(I/O)e(p)s(orts)h(are)g(used)g(for)g(mono-)1922
4696 y(toring)33 b(button)g(presses)e(and)h(con)m(trolling)j(motors)d
(etc.)1922 4809 y(The)j(in)m(teraction)h(b)s(et)m(w)m(een)h(the)d
(subsystems)g(and)h(the)1922 4922 y(OS)30 b(will)h(b)s(e)f(touc)m(hed)i
(up)s(on)f(in)f(3.)1922 5159 y Fh(1.5)112 b(Stack)37
b(frame)g(la)m(y)m(out)1922 5331 y Fl(This)k(is)h(a)f(description)i(of)
e(the)h(default)g(stac)m(k)g(frame)1922 5444 y(la)m(y)m(out)23
b(used)g(b)m(y)f(the)g(GCC)h(cross)f(compiler)h(when)g(com-)1922
5557 y(piling)33 b(C)f(programs)h(for)f(the)h(H8/3292,)g(b)s(eing)f
(usefull)1922 5670 y(when)f(the)g(task)e(manager)j(is)e(explained.)1858
6065 y(3)p eop
%%Page: 4 4
4 3 bop -104 -142 a Fj(2)91 b(THE)30 b(LEGOS)i(KERNEL)f(0.2.4)2177
b(2.2)91 b(Timing)p -104 -105 3969 4 v 37 153 a Fl(A)36
b(function)i(call)f(in)g(C)g(is)f(translated)i(to)f(the)g
Fk(jsr)-104 266 y Fl(\(jump)49 b(subroutine\))g(instruction,)54
b(whic)m(h)c(implicitly)-104 378 y(pushes)30 b(the)g(PC)h(register)f
(on)m(to)h(the)f(stac)m(k.)41 b(GCC)30 b(uses)-104 491
y(R6)37 b(as)g(a)g(base)h(p)s(oin)m(ter)g(register)g(and)g(b)m(y)g(con)
m(v)m(en)m(tion)-104 604 y(R6)30 b(is)f(callee)i(sa)m(v)m(ed.)41
b(A)m(ctually)31 b(R6)f(do)s(es)f(not)i(p)s(oin)m(t)f(to)-104
717 y(the)40 b(base)f(of)f(the)i(stac)m(k)f(frame,)j(but)d(to)h(the)f
(elemen)m(t)-104 830 y(follo)m(wing)32 b(the)e(base)h(elemen)m(t.)37
943 y(The)h(callee)f(starts)g(b)m(y)h(pushing)f(R6)g(on)g(the)g(stac)m
(k,)-104 1056 y(and)k(loads)g(the)h(address)f(of)f(this)h(elemen)m(t)h
(in)f(R6.)54 b(R6)-104 1169 y(will)24 b(no)m(w)g(p)s(oin)m(t)g(to)g
(the)g(lo)s(cation)g(whic)m(h)h(holds)e(the)h(just)-104
1282 y(sa)m(v)m(ed)g(R6.)38 b(The)23 b(\034rst)g(3)h(argumen)m(ts)g
(are)g(passed)f(in)g(reg-)-104 1395 y(isters)j(R0,R1)g(and)h(R2,)g(and)
g(are)f(copied)i(to)e(the)h(next)g(3)-104 1508 y(elemen)m(ts)22
b(in)g(the)f(stac)m(k)g(frame)g(b)m(y)h(the)f(callee.)38
b(Remain-)-104 1620 y(ing)31 b(parameters)i(are)e(referenced)h(in)f
(the)h(callers)f(stac)m(k)-104 1733 y(frame.)46 b(Lo)s(cal)33
b(v)-5 b(ariables)33 b(are)f(allo)s(cated)h(on)g(the)f(stac)m(k)-104
1846 y(after)25 b(the)f(\034rst)h(3)f(argumen)m(ts,)k(see)c(\034gure)h
(1.)39 b(The)24 b(stac)m(k)-104 1959 y(p)s(oin)m(ter)h(p)s(oin)m(ts)g
(to)g(the)g(last)f(elemen)m(t)i(pushed)f(on)m(to)g(the)-104
2072 y(stac)m(k.)867 2219 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
-42.6773 -6.4016 L 0 setlinecap stroke  end


@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
42.6773 6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  42.6773 6.4016 moveto
42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial 549 2236 a Fg(return)20 b(address)867
2325 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
-42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
42.6773 6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  42.6773 6.4016 moveto
42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial
549 2343 a(sa)n(v)n(ed)i(R6)867 2432 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
-42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
42.6773 6.4016 L 0 setlinecap stroke  end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  42.6773 6.4016 moveto
42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial 549 2443 a(0-3)f(argumen)n(ts)
867 2538 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
-42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
42.6773 6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  42.6773 6.4016 moveto
42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial
549 2555 a(lo)r(cal)f(v)m(ariables)867 2644 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
-42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
42.6773 6.4016 L 0 setlinecap stroke  end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  42.6773 6.4016 moveto
42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial 549 2655 a(parameters)h(>)g
(no.4)867 2750 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
-42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
42.6773 6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  42.6773 6.4016 moveto
42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial 549 2768 a(return)f(address)867
2857 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
-42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
42.6773 6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  42.6773 6.4016 moveto
42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial
549 2874 a(caller's)g(BP)867 2963 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
-42.6773 -6.4016 L 0 setlinecap stroke  end


@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
42.6773 6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  42.6773 6.4016 moveto
42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial 549 2974 a(0-3)h(argumen)n(ts)867
3069 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
-42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
42.6773 6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  42.6773 6.4016 moveto
42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial
549 3087 a(lo)r(cal)f(v)m(ariables)867 3176 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
42.6773 6.4016 L 0 setlinecap stroke  end
 
@endspecial -957 x @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  51.21277 6.4016 moveto
51.21277 -57.61436 L 0 setlinecap stroke  end


@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  51.21277 -57.61436 moveto
51.21277 -108.82713 L 0 setlinecap stroke  end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  44.81117 6.4016 moveto
57.61436 6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  44.81117 -57.61436 moveto
57.61436 -57.61436 L 0 setlinecap stroke  end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  44.81117 -108.82713
moveto 57.61436 -108.82713 L 0 setlinecap stroke  end
 
@endspecial 1310 2880 a(Callee's)1310
2939 y(stac)n(kframe)1310 2420 y(Caller's)1310 2478 y(stac)n(kframe)
-136 2556 y(P)n(arameter)-136 2614 y(n)n(um)n(b)r(ers)g(ab)r(o)n(v)n(e)
i(3,)-136 2672 y(are)f(passed)g(on)g(the)-136 2731 y(stac)n(k)867
2219 y @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow
 } def [ -42.6773 -51.21277 -64.01596 -51.21277  /r 0.53346 def /Lineto
{ Arcto } def false Line  gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.0 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow
 } def [ -42.6773 -102.42554 -64.01596 -102.42554  /Lineto /lineto
load def false Line  gsave 1.0 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial -142 2869 a(Basep)r(oin)n(ter/R6)867
2219 y @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow
 } def [ -42.6773 -76.81915 -64.01596 -76.81915  /Lineto /lineto load
def false Line  gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial -142 3081
a(Stac)n(kp)r(oin)n(ter/R7)164 3289 y Fl(Figure)31 b(1:)g(GCC's)f(stac)
m(k)h(frame)f(la)m(y)m(out)37 3619 y(The)25 b(function)h(returns)f(b)m
(y)g(executing)i Fk(rts)e Fl(\(return)-104 3732 y(from)38
b(subroutine\),)j(but)d(just)f(b)s(efore)g(that)h(the)g(stac)m(k)-104
3845 y(p)s(oin)m(ter,)26 b(and)f(the)f(callee)h(sa)m(v)m(ed)f(R6)g(are)
g(restored.)39 b(The)-104 3957 y(PC)j(register)g(is)f(implicitly)i(p)s
(opp)s(ed)e(b)m(y)h(the)g Fk(rts)f Fl(in-)-104 4070 y(struction.)-104
4357 y Fn(2)137 b(The)45 b(legOS)h(k)l(ernel)f(0.2.4)-104
4560 y Fl(The)22 b(legOS)h(k)m(ernel)g(is)e(monolithic,)k(as)d(all)g
(of)f(the)h(source)-104 4673 y(are)34 b(compiled)i(together)f(in)f(the)
h(same)f(binary)h(image.)-104 4786 y(The)27 b(in)m(terface)h(for)f
(user)g(programs)g(are)h(giv)m(en)f(in)g(a)g(dy-)-104
4898 y(namic)41 b(link)m(er)h(script,)h(whic)m(h)f(con)m(tains)g(all)e
(exp)s(orted)-104 5011 y(k)m(ernel)31 b(sym)m(b)s(ols.)-104
5255 y Fh(2.1)112 b(Sta)m(rting)38 b(the)f(k)m(ernel)-104
5426 y Fl(The)48 b(k)m(ernel)h(starts)e(when)i Fk(kmain)e
Fl(is)h(called)g(b)m(y)g(the)-104 5539 y(R)m(OM.)34 b(This)h(function)f
(initialises)h(the)g(k)m(ernel,)h(b)s(efore)1922 153
y(it)c(is)g(started)g(in)h(either)f(single)h(tasking)f(or)g(m)m
(ultitask-)1922 266 y(ing)43 b(mo)s(de.)78 b(If)41 b(the)j(task)e
(manager)i(is)e(not)h(included)1922 378 y(in)28 b(the)h(k)m(ernel,)h
(only)e(singletasking)h(mo)s(de)g(is)f(p)s(ossible,)1922
491 y(and)37 b(dynamic)h(program)g(loading)g(will)f(not)g(b)s(e)g(p)s
(ossi-)1922 604 y(ble.)k(In)31 b(the)g(follo)m(wing)g(I)f(assume)h
(that)g(all)g(features)g(of)1922 717 y(legOS)g(are)g(used.)2063
830 y(During)38 b(k)m(ernel)h(initialisation,)i(3)c(tasks)g(are)h
(star-)1922 943 y(ted.)46 b(The)33 b(\034rst)f(is)g(the)g(idle)h(task,)
f(whic)m(h)h(is)f(a)g(dumm)m(y)1922 1056 y(task)j(with)h(the)g(lo)m(w)m
(est)h(priorit)m(y)-8 b(.)58 b(The)36 b(idle)g(task)f(exe-)1922
1169 y(cutes)k(when)h(no)f(other)h(tasks)e(need)i(CPU)f(time,)j(and)
1922 1282 y(it)36 b(puts)f(the)h(CPU)g(in)g(p)s(o)m(w)m(er)h(do)m(wn)g
(mo)s(de)f(b)m(y)f(inde\034-)1922 1395 y(nitely)21 b(executing)g(the)g
Fk(sleep)f Fl(instruction.)38 b(The)21 b(next)f(2)1922
1508 y(tasks)i(implemen)m(t)j(the)e(dynamic)h(program)g(loading)g(ca-)
1922 1620 y(pabilities.)46 b(They)32 b(are)g(called)h
Fi(p)-5 b(acket_c)g(onsumer)45 b Fl(and)1922 1733 y Fi(key_hand)5
b(ler)52 b Fl(and)43 b(are)f(run)h(with)f(the)g(highest)h(p)s(os-)1922
1846 y(sible)35 b(priorit)m(y)-8 b(.)55 b(The)35 b Fi(p)-5
b(acket_c)g(onsumer)48 b Fl(handles)35 b(ac-)1922 1959
y(tivit)m(y)f(on)g(the)g(IR-p)s(ort,)h(and)f(the)g Fi(key_hand)5
b(ler)45 b Fl(han-)1922 2072 y(dles)f(activit)m(y)h(on)g(the)g(buttons)
g(of)f(the)g(R)m(CX)h(bric)m(k.)1922 2185 y(The)31 b(task)f(manager)h
(is)f(then)h(started,)g(and)g(the)g(k)m(ernel)1922 2298
y(starts)d(switc)m(hing)h(the)g(execution)g(among)g(the)f(3)g(tasks.)
1922 2411 y(New)k(tasks)e(are)j(started)f(b)m(y)g(do)m(wnloading)i(and)
e(start-)1922 2524 y(ing)f(userprograms,)g(as)f(explained)h(in)g
(section)g(2.3.1.)1922 2767 y Fh(2.2)112 b(Timing)1922
2939 y Fl(LegOS)21 b(is)g(driv)m(en)g(b)m(y)g(in)m(terrupts)h(from)e
(th)h(16)g(bit)g(timer,)1922 3052 y(whic)m(h)45 b(is)e(con\034gured)i
(to)e(mak)m(e)h(an)g(in)m(terrupt)h(ev)m(ery)1922 3165
y(millisecond.)50 b(The)34 b(timer)g(in)m(terrupt)h(is)e(handled)h(b)m
(y)f(a)1922 3277 y(R)m(OM)40 b(function,)j(whic)m(h)e(in)g(turn)f
(calls)g(the)h(function)1922 3390 y(p)s(oin)m(ted)g(to)f(b)m(y)i
Fk(ocia_vector)p Fl(.)69 b(This)40 b(v)m(ector)h(p)s(oin)m(ts)1922
3503 y(to)29 b(the)g Fk(systime_handler)g Fl(function,)h(de\034ned)g
(in)f Fi(ker-)1922 3616 y(nel/systime.c)p Fl(.)37 b(The)21
b Fk(systime_handler)e Fl(function)i(p)s(olls)1922 3729
y(all)j(the)h(v)-5 b(aroius)24 b(subsystems)f(in)h(turn,)i(b)m(y)f
(calling)g(their)1922 3842 y(handlers.)44 b(This)32 b(means)f(that)h
(legOS)g(uses)f(p)s(olling)h(in-)1922 3955 y(stead)h(of)f(in)m
(terrupts,)i(to)f(comm)m(unicate)i(with)e(the)g(en-)1922
4068 y(vironmen)m(t.)2063 4181 y(The)k(subsystems)f(are)i(handled)g(in)
f(the)g(follo)m(wing)1922 4294 y(order:)58 b(system)39
b(timer)h(is)e(incremen)m(ted,)44 b(motor)c(han-)1922
4407 y(dler)g(is)g(called,)k(sound)c(handler)h(is)f(called,)j(LNP)e
(\(le-)1922 4520 y(gOS)21 b(Net)m(w)m(ork)i(Proto)s(col\))f(is)f(c)m
(hec)m(k)m(ed)i(for)e(timeout,)j(the)1922 4632 y(button)35
b(handler)h(is)e(called,)j(the)e(battery)g(indicator)h(is)1922
4745 y(up)s(dated,)30 b(the)e(legOS)i(state)e(visualisation)i(is)e(up)s
(dated)1922 4858 y(and)j(the)f(LCD)h(displa)m(y)g(is)f(up)s(dated.)2063
4971 y(The)21 b(last)f(thing)h(whic)m(h)h(is)d(done,)24
b(is)19 b(to)i(c)m(hec)m(k)g(whether)1922 5084 y(a)j(task)f(switc)m(h)i
(is)f(needed)h(b)m(y)f(insp)s(ecting)g(the)h(timeslice)1922
5197 y(coun)m(ter)34 b(of)d(the)i(curren)m(t)h(task.)45
b(The)33 b(default)f(con\034gu-)1922 5310 y(ration)g(of)f(timeslices)h
(is)f(20)g(milliseconds.)45 b(The)32 b(prati-)1922 5423
y(cal)23 b(timeslice)g(limits)h(are)f(ab)s(out)g(6)f(milliseonds)i(at)f
(min-)1922 5536 y(im)m(um)38 b(and)f(255)h(at)f(maxim)m(um)h([6)q(].)60
b(If)36 b(the)i(timeslice)1922 5649 y(of)30 b(the)g(curren)m(t)i(slice)
e(has)g(elapsed,)g(the)h Fk(tm_switcher)1858 6065 y Fl(4)p
eop
%%Page: 5 5
5 4 bop -104 -142 a Fj(2)91 b(THE)30 b(LEGOS)i(KERNEL)f(0.2.4)1748
b(2.3)90 b(T)-8 b(ask)31 b(managemen)m(t)p -104 -105
3969 4 v -104 153 a Fl(function)38 b(is)f(called,)i(whic)m(h)g(will)e
(p)s(erform)g(a)g(con)m(text-)-104 266 y(switc)m(h)31
b(in)g(co)s(op)s(eration)g(with)g(the)g(sc)m(heduler.)-104
509 y Fh(2.3)112 b(T)-9 b(ask)36 b(management)-104 681
y Fl(In)28 b(the)i(follo)m(wing)g(text,)f(I)f(refer)h(to)g(the)g(task)f
(manager,)-104 793 y(b)m(y)22 b(whic)m(h)h(I)e(mean)i(the)f(collection)
h(of)f(functions)g(and)g(re-)-104 906 y(lated)f(functions,)i(implemen)m
(ted)g(in)d Fi(kernel/tm.c)p Fl(,)k(whic)m(h)-104 1019
y(deal)47 b(with)h(the)f(task)f(managing)i(issues.)89
b(The)47 b(task)-104 1132 y(manager)32 b(is)e(not)g(a)h(separate)g(pro)
s(cess)f(or)g(thread.)37 1245 y(Before)45 b(discussing)g(the)g(m)m
(ulitasking)h(prop)s(erties)-104 1358 y(of)32 b(legOS,)h(it)f(is)g(imp)
s(ortan)m(t)h(to)f(mak)m(e)h(a)f(clear)h(distinc-)-104
1471 y(tion)g(b)s(et)m(w)m(een)g(the)g(notion)g(of)e(programs)i(and)g
(the)f(no-)-104 1584 y(tion)27 b(of)f(tasks/pro)s(cesses)f(\(task)h
(and)h(pro)s(cess)f(are)h(used)-104 1697 y(in)m(terc)m(hangeably\),)42
b(for)36 b(a)h(brief)f(summary)-8 b(,)39 b(see)e(2.3.4.)-104
1810 y(A)j(program)j(in)e(legOS)g(is)g(the)g(actual)h(binary)f(image)
-104 1923 y(stored)e(in)g(RAM.)f(A)g(pro)s(cess)h(is)f(a)h(thread)h(of)
e(execu-)-104 2035 y(tion,)26 b(and)f(a)f(running)h(program)h(will)e
(ha)m(v)m(e)i(at)e(least)g(one)-104 2148 y(pro)s(cess,)k(and)h(it)f
(can)h(start)f(new)h(pro)s(cesses)f(b)m(y)g(the)h Fi(ex-)-104
2261 y(e)-5 b(ci)42 b Fl(function,)33 b(see)e(section)i(2.3.2.)45
b(A)m(ctually)-8 b(,)34 b(pro)s(ccess)-104 2374 y(are)g(more)g(lik)m(e)
h(threads,)g(as)e(they)h(share)g(the)g(memory)-104 2487
y(space)d(of)f(the)g(program)i(whic)m(h)f(started)g(them.)454
2962 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.1 true 3.8 neg 40.03683
neg 103.38464 43.03683 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 591 2670
a Ff(p)r(data_t)23 b(structure)454 2728 y Fe(size_t)29
b(*sp_save)454 2787 y(pstate_t)h(pstate)454 2845 y(pflags_t)g(pflags)
454 2903 y(pchain_t)g(*priority)454 2961 y(struct_pdata_t)j(*next)454
3019 y(struct_pdata_t)g(*prev)454 3077 y(struct_pdata_t)g(*parent)454
3135 y(size_t)c(*stackbase)454 3193 y(wakeup_t)h(\(*wakeup\)\(wake)q
(up_)q(t\))454 3251 y(wakeup_t)g(wakeup_data)217 3448
y Fl(Figure)h(2:)f(The)h Fi(p)-5 b(data_t)40 b Fl(structure.)37
3763 y(The)28 b(task)e(manager)i(implemen)m(ts)h(the)e(preemptiv)m(e)
-104 3876 y(m)m(ultitasking)h(feature)g(of)e(legOS,)i(b)m(y)f
(preempting)h(and)-104 3989 y(sc)m(heduling)37 b(pro)s(cesses,)e
(according)h(to)f(some)g(sc)m(hedul-)-104 4102 y(ing)28
b(sc)m(heme.)40 b(A)27 b(pro)s(cess)g(is)g(describ)s(ed)h(b)m(y)f(the)h
(pro)s(cess)-104 4215 y(data)21 b(structure,)i(de\034ned)f(as)e
Fk(pdata_t)g Fl(in)g Fi(include/tm.h)p Fl(.)-104 4328
y(This)42 b(structure)g(holds)g(the)g(information)h(neccessary)-104
4441 y(for)e(switc)m(hing)h(among)g(di\033eren)m(t)h(tasks,)g(and)e
(for)g(or-)-104 4554 y(ganising)h(tasks)e(in)h(priorit)m(y)h(queues.)73
b(The)41 b Fk(pdata_t)-104 4666 y Fl(structure)26 b(includes)f(a)f(sa)m
(v)m(ed)i(stac)m(k)f(p)s(oin)m(ter,)h(a)f(pro)s(cess)-104
4779 y(state,)f(pro)s(cess)d(\035ag,)i(the)f(pro)s(cess)f(priorit)m(y)
-8 b(,)25 b(p)s(oin)m(ters)d(to)-104 4892 y(neigh)m(b)s(ours)32
b(in)f(the)g(pro)s(cess)f(queue,)h(a)g(p)s(oin)m(ter)g(to)g(the)-104
5005 y(paren)m(t)k(pro)s(cess,)e(a)g(p)s(oin)m(ter)i(to)e(the)g(b)s
(eginning)h(of)f(the)-104 5118 y(stac)m(k)38 b(and)h(a)f(p)s(oin)m(ter)
h(to)f(the)g(function)h(to)f(b)s(e)g(called)-104 5231
y(when)33 b(the)g(function)g(returns)g(from)f(a)g(w)m(ait)i(state)e
(\(the)-104 5344 y(w)m(ak)m(e-up)c(function\).)40 b(The)26
b(pro)s(cess)f(state)i(has)e(5)h(di\033er-)-104 5457
y(en)m(t)31 b(v)-5 b(alues:)-104 5644 y Fm(Dead)46 b
Fl(The)39 b(pro)s(cess)g(has)g(terminated)i(and)e(its)g(stac)m(k)2149
153 y(has)30 b(b)s(een)h(deallo)s(cated.)1922 340 y Fm(Zombie)44
b Fl(The)21 b(pro)s(cess)g(has)f(terminated,)25 b(but)c(its)f(stac)m(k)
2149 453 y(has)30 b(not)h(y)m(et)g(b)s(een)f(freed.)1922
641 y Fm(W)m(aiting)45 b Fl(The)e(pro)s(cess)f(is)f(idle)i(and)g(w)m
(aiting)g(for)f(an)2149 754 y(ev)m(en)m(t.)1922 941 y
Fm(Sleeping)i Fl(The)31 b(pro)s(cess)f(is)g(idle)h(but)f(ready)h(to)f
(run.)1922 1129 y Fm(Running)47 b Fl(The)31 b(pro)s(cess)e(is)h
(running.)2063 1317 y(The)42 b(state)h(information)g(is)f(used)g(b)m(y)
g(the)g(sc)m(hed-)1922 1430 y(uler,)c(and)e(it)g(is)f(the)h(resp)s
(onsibilit)m(y)g(of)g(the)g(sc)m(heduler)1922 1542 y(to)c(free)h(the)g
(stac)m(k)f(of)g(a)h(terminated)h(pro)s(cess.)46 b(A)32
b(pro-)1922 1655 y(cess)38 b(can)g(v)m(olun)m(tarily)i(stop)e
(executing)i(and)e(w)m(ait)i(for)1922 1768 y(an)h(ev)m(en)m(t,)46
b(whic)m(h)d(is)e(done)h(b)m(y)f(calling)j Fk(wait_event)p
Fl(.)1922 1881 y(The)39 b(parameters)i(for)e Fk(wait_event)g
Fl(sp)s(ecify)f(a)h(w)m(ak)m(e-)1922 1994 y(up)e(function,)h(whic)m(h)g
(is)e(used)h(to)g(c)m(hec)m(k)g(whether)h(the)1922 2107
y(w)m(ait)46 b(condition)h(is)e(full\034lled.)87 b(The)46
b(w)m(ait)h(condition)1922 2220 y(c)m(hec)m(k)35 b(is)e(p)s(erformed)h
(b)m(y)g(the)h(sc)m(heduler,)h(when)e(it)g(en-)1922 2333
y(coun)m(ters)40 b(w)m(aiting)g(pro)s(cesses)e(during)h(the)g(searc)m
(h)h(for)1922 2446 y(a)32 b(new)g(pro)s(cess)f(to)h(execute.)45
b(W)-8 b(ak)m(e-up)33 b(functions)g(ex-)1922 2559 y(ecutes)43
b(atomically)h(ev)m(en)g(though)g(they)f(do)g(not)g(dis-)1922
2672 y(able)j(in)m(terrupts,)51 b(b)s(ecause)46 b(they)g(are)g(called)g
(b)m(y)g(the)1922 2784 y Fk(systime_handler)p Fl(,)29
b(whic)m(h)i(has)e(disabled)h(in)m(terrupts.)1922 2897
y(If)i(the)h(w)m(ak)m(e-up)i(function)f(returns)f(a)g(non-n)m(ull)i(v)
-5 b(alue,)1922 3010 y(the)34 b(w)m(ait)h(condition)h(is)d(no)h(longer)
h(satis\034ed,)h(and)e(the)1922 3123 y(pro)s(cess)k(is)h(ready)h(to)f
(run.)67 b(The)39 b(problem)i(with)e(this)1922 3236 y(sc)m(heme)i(is)e
(that)h(w)m(ait)h(conditions)g(only)e(are)h(c)m(hec)m(k)m(ed)1922
3349 y(when)35 b(a)g(new)g(pro)s(cess)f(is)g(sc)m(heduled.)54
b(Th)m(us)35 b(the)g(w)m(ait)1922 3462 y(condition)41
b(could)f(ha)m(v)m(e)h(c)m(hanged)h(v)-5 b(alue)40 b(man)m(y)g(times)
1922 3575 y(b)s(et)m(w)m(een)32 b(the)e(c)m(hec)m(k,)h(whic)m(h)h
(could)f(ha)m(v)m(e)g(serious)f(con-)1922 3688 y(sequences)21
b(if)f(the)h(pro)s(cess)g(w)m(aits)g(for)g(an)g(external)g(ev)m(en)m(t)
1922 3801 y(whic)m(h)43 b(m)m(ust)f(b)s(e)f(reacted)h(to)g(rapidly)-8
b(.)74 b([6)q(])41 b(discusses)1922 3914 y(this)30 b(problem.)1922
4154 y Fm(2.3.1)100 b(Dynamically)31 b(link)m(ed)h(user)i(p)m(rograms)
1922 4325 y Fl(In)c(the)i(early)f(v)m(ersions)g(of)f(legOS,)i(the)g
(user)e(programs)1922 4438 y(had)36 b(to)h(b)s(e)f(statically)g(link)m
(ed)i(with)e(the)h(k)m(ernel.)59 b(The)1922 4551 y(k)m(ernel)32
b(and)g(user)f(program)i(w)m(ere)f(con)m(tained)i(in)d(a)g(sin-)1922
4664 y(gle)g(binary)g(image,)g(and)g(the)g(en)m(tire)h(k)m(ernel)f(had)
g(to)g(b)s(e)1922 4777 y(recompiled)42 b(when)g(c)m(hanges)g(w)m(as)f
(made)g(to)g(the)g(user)1922 4890 y(program.)2063 5003
y(The)d(latest)g(v)m(ersions)g(of)g(the)g(k)m(ernel)h(pro)m(vide)g(dy-)
1922 5116 y(namic)f(program)g(loading,)i(whic)m(h)f(mak)m(es)e(it)h(p)s
(ossible)1922 5229 y(to)45 b(load)h(up)f(to)g(8)g(programs)h(in)m(to)g
(the)g(RAM.)e(User)1922 5341 y(programs)30 b(are)f(compiled)h(in)m(to)g
(a)f(relo)s(cateable)h(format)1922 5454 y(with)36 b(extension)h
Fi(.lx)p Fl(.)57 b(A)35 b(dynamic)i(link)m(er)f(and)h(loader)1922
5567 y(program,)29 b(called)f Fi(d)5 b(l)g(l)36 b Fl(is)27
b(used)h(to)f(do)m(wnload)i(programs)1858 6065 y(5)p
eop
%%Page: 6 6
6 5 bop -104 -142 a Fj(2)91 b(THE)30 b(LEGOS)i(KERNEL)f(0.2.4)1748
b(2.3)90 b(T)-8 b(ask)31 b(managemen)m(t)p -104 -105
3969 4 v -104 153 a Fl(and)40 b(link)g(them)h(with)f(the)g(k)m(ernel.)
70 b(The)40 b Fi(b)-5 b(o)g(ot)50 b Fl(direc-)-104 266
y(tory)30 b(con)m(tains)g(the)g(2)f(\034les)h Fi(le)-5
b(gOS.sr)g(e)g(c)37 b Fl(and)30 b Fi(le)-5 b(gOS.lds)p
Fl(,)-104 378 y(the)29 b(\034rst)f(b)s(eing)g(the)h(k)m(ernel)g(image,)
g(and)g(the)f(second)h(a)-104 491 y(link)m(er)35 b(script)f(generated)h
(during)g(compilation)h(of)d(the)-104 604 y(k)m(ernel.)66
b(The)39 b(link)m(er)g(script)g(asso)s(ciates)f(all)g(exp)s(orted)-104
717 y(k)m(ernel)45 b(sym)m(b)s(ols,)i(with)d(their)h(addresses)e
(relativ)m(e)i(to)-104 830 y(0x8000,)40 b(i.e.)62 b(the)37
b(start)h(of)f(RAM.)f(When)i(compiling)-104 943 y(user)23
b(programs)h Fi(le)-5 b(gOS.lds)32 b Fl(is)23 b(used)g(in)g(the)h
(linking)g(step)-104 1056 y(to)34 b(create)h(the)g Fi(.lx)45
b Fl(\034le.)52 b(During)35 b(the)f(do)m(wnloading)j(of)-104
1169 y(programs,)27 b(the)d(\034nal)h(linking)g(relativ)m(e)g(to)f(the)
h(memory)-104 1282 y(allo)s(cated)31 b(for)f(the)h(program)h(is)e(p)s
(erformed.)37 1395 y(When)41 b(do)m(wnloading)h(a)f(program,)j(the)c
Fi(p)-5 b(acket_-)-104 1508 y(c)g(onsumer)34 b Fl(task)24
b(resp)s(onds)f(to)h(the)g(comm)m(unication)i(re-)-104
1620 y(quests)i(from)h(the)h(IR)d(to)m(w)m(er,)32 b(tak)m(es)d(care)g
(of)g(allo)s(cating)-104 1733 y(memory)h(for)f(the)h(program,)h(and)f
(stores)f(the)g(program)-104 1846 y(in)34 b(the)h Fk(programs)f
Fl(arra)m(y)-8 b(.)53 b(After)34 b(the)g(do)m(wnloading)j(is)-104
1959 y(completed,)f(the)d(program)h(can)g(b)s(e)f(started)g(b)m(y)h
(press-)-104 2072 y(ing)d(the)f Fi(run)38 b Fl(button)31
b(on)f(the)h(R)m(CX)f(bric)m(k.)37 2185 y(Information)21
b(ab)s(out)g(the)g(user)f(programs)h(are)g(stored)-104
2298 y(in)j(an)g(arra)m(y)h(of)f(8)g Fk(program_t)f Fl(structures.)39
b(This)24 b(struc-)-104 2411 y(ture)34 b(holds)f(information)h(ab)s
(out)g(addresses)f(and)g(sizes)-104 2524 y(of)i(the)g
Fi(.text)p Fl(,)i Fi(.data)p Fl(,)g(and)e Fi(.bss)43
b Fl(segmen)m(ts)36 b(of)f(the)g(pro-)-104 2637 y(grams.)44
b(F)-8 b(urthermore)33 b(the)f(structure)g(con)m(tains)g(infor-)-104
2750 y(mation)26 b(ab)s(out)f(stac)m(k)h(size,)g(the)f(start)g(address)
g(relativ)m(e)-104 2862 y(to)40 b(the)h(start)f(of)g(the)g
Fi(text)50 b Fl(segmen)m(t,)43 b(priorit)m(y)f(of)d(the)-104
2975 y(program)22 b(and)g(a)f(coun)m(t)i(of)d(the)i(n)m(um)m(b)s(er)h
(of)d(do)m(wnloaded)-104 3088 y(b)m(ytes,)47 b(whic)m(h)e(is)e(used)g
(for)g(detecting)i(errors)f(in)f(the)-104 3201 y(do)m(wnload)25
b(pro)s(cess.)38 b(In)23 b(k)m(ernel)h(v)m(ersion)g(0.2.4,)h(it)e(is)g
(not)-104 3314 y(p)s(ossible)e(for)g(one)g(user)g(program)i(to)e(start)
g(another)i(user)-104 3427 y(program,)j(b)s(ecause)e(they)f(do)g(not)h
(kno)m(w)g(the)g(address)f(of)-104 3540 y(eac)m(h)37
b(others)f Fk(program_t)f Fl(structures.)58 b(By)35 b(exp)s(orting)-104
3653 y(the)21 b Fk(programs)g Fl(arra)m(y)g(and)g(the)h
Fk(program_run)e Fl(function)-104 3766 y(to)44 b Fi(le)-5
b(gOS.lds)51 b Fl(\(b)m(y)44 b(making)g(them)g(non-static\),)k(it)c(is)
-104 3879 y(p)s(ossible)24 b(for)f(one)i(program)g(to)f(start)g(a)g
(program)h(in)f(an-)-104 3992 y(other)j(program)g(slot)f(b)m(y)g
(indexing)h(in)m(to)g(the)f Fk(programs)-104 4104 y Fl(arra)m(y)-8
b(.)41 b(Otherwise,)31 b(a)e(program)i(has)e(to)h(b)s(e)f(started)g(b)m
(y)-104 4217 y(selecting)43 b(it)f(with)g(the)g Fi(pr)-5
b(gm)50 b Fl(button)42 b(on)g(the)h(R)m(CX,)-104 4330
y(and)36 b(then)g(pressing)g(the)g Fi(run)42 b Fl(button.)58
b(When)36 b(a)f(pro-)-104 4443 y(gram)d(is)f(started,)h(a)f(new)h(task)
f(is)g(created)h(with)g(a)f(call)-104 4556 y(to)g(the)f
Fk(execi)g Fl(function.)-104 4796 y Fm(2.3.2)100 b(The)33
b Fk(execi)h Fm(function)-104 4968 y Fl(The)24 b Fk(execi)f
Fl(function)i(is)e(used)g(for)h(creating)g(new)g(tasks.)-104
5081 y Fk(Execi)j Fl(tak)m(es)g(as)f(argumen)m(ts,)k(a)d(p)s(oin)m(ter)
h(to)f(a)g(function)-104 5194 y(to)35 b(execute,)i(the)e(n)m(um)m(b)s
(er)h(of)f(argumen)m(ts,)j(the)d(actual)-104 5307 y(argumen)m(ts)27
b(to)e(the)h(function,)h(the)f(priorit)m(y)g(of)f(the)h(new)-104
5419 y(task,)k(and)h(a)f(stac)m(k)h(size.)37 5532 y Fk(Execi)37
b Fl(will)h(try)f(to)g(allo)s(cate)h(memory)g(for)f(a)g(new)-104
5645 y Fk(pdata_t)24 b Fl(en)m(try)i(in)e(the)h(priorit)m(y)h(queues,)g
(and)f(allo)s(cate)1922 153 y(memory)31 b(for)f(the)h(task's)f(stac)m
(k.)41 b(The)31 b(new)g(task)f(is)g(en-)1922 266 y(tered)25
b(in)m(to)h(the)e(task)g(structure)i(as)e(a)g(sleeping)i(pro)s(cess,)
1922 378 y(as)k(if)g(it)g(had)h(b)s(een)g(preempted)h(b)m(y)e(the)h(sc)
m(heduler)h(and)1922 491 y(it)23 b(is)h(therefore)g(necessary)g(to)f
(sim)m(ulate)i(the)f(new)g(task's)1922 604 y(stac)m(k)36
b(as)g(that)h(of)f(a)g(sleeping)h(task,)g(in)f(order)h(for)f(the)1922
717 y(task)30 b(manager)h(to)g(execute)g(it.)2893 905
y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true -56.90887 11.38177
62.59976 -105.28142 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 2444 917 a Fg(A)n(ddress)e(of)
g(in)n(terrupted)f(task's)h(next)2444 975 y(instruction)2444
1111 y(R)n(OM)21 b(callee)g(sa)n(v)n(ed)h(data)2444 1269
y(&rom_o)r(cia_return)2444 1434 y(&systime_tm_return)2444
1602 y(sa)n(v)n(ed)60 b(con)n(text)g(of)f(curren)n(t)f(task,)2444
1660 y(R1...R5)2893 905 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 62.59976 -51.21799 -56.90887 -51.21799  /Lineto /lineto
load def false Line  gsave 0. setgray fill grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 62.59976 -31.29988 -56.90887 -31.29988  /Lineto /lineto
load def false Line  gsave 0. setgray fill grestore end
 
@endspecial 1922 1928 a Fl(Figure)31
b(3:)f(The)45 b(general)h(stac)m(k)e(frame)h(of)f(a)h(sleeping)2307
2041 y(task)2063 2335 y(The)27 b(address)g(of)f(the)h
Fk(exit)f Fl(function)h(is)f(pushed)h(on)1922 2448 y(the)34
b(stac)m(k.)51 b(This)34 b(will)g(b)s(e)f(the)h(return)h(address)f(of)f
(the)1922 2561 y(task,)41 b(and)g(this)e(w)m(a)m(y)i(tasks)e(will)h
(alw)m(a)m(ys)h(\034nish)e(b)m(y)h(a)1922 2674 y(calling)34
b Fk(exit)p Fl(.)44 b Fk(Exit)32 b Fl(will)g(free)f(the)h(memory)h
(that)f(the)1922 2787 y(user)e(program)i(allo)s(cated.)2893
2952 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
-42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
42.6773 6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  42.6773 6.4016 moveto
42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial
2574 2969 a Fg(&exit)2893 3058 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
-42.6773 -6.4016 L 0 setlinecap stroke  end


@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
42.6773 6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  42.6773 6.4016 moveto
42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial 2574 3075 a(&task)21 b(co)r(de)g(start)2893
3164 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
-42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
42.6773 6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  42.6773 6.4016 moveto
42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial
2574 3176 a(R)n(OM)g(sa)n(v)n(ed)i(ccr\(=0\))2893 3271
y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
-42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
42.6773 6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  42.6773 6.4016 moveto
42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial
2574 3283 a(R)n(OM)e(sa)n(v)n(ed)i(r6\(=0\))2893 3377
y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
-42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
42.6773 6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  42.6773 6.4016 moveto
42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial
2574 3394 a(&R)n(OM)e(return)f(address)2893 3483 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
-42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
42.6773 6.4016 L 0 setlinecap stroke  end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  42.6773 6.4016 moveto
42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial 2574 3500 a(callee)h(sa)n(v)n
(ed)h(r0)2893 3589 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
-42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
42.6773 6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  42.6773 6.4016 moveto
42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial 2574 3601 a(&systime)f(return)2893
3696 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
-42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
42.6773 6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  42.6773 6.4016 moveto
42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial
2574 3708 a(sa)n(v)n(ed)h(r1\(=argv\))2893 3802 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
-42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
42.6773 6.4016 L 0 setlinecap stroke  end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  42.6773 6.4016 moveto
42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial 2574 3814 a(sa)n(v)n(ed)g
(r2\(=0\))2893 3908 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
-42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
42.6773 6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  42.6773 6.4016 moveto
42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial 2574 3920 a(sa)n(v)n(ed)g(r3\(=0\))2893
4015 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
-42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
42.6773 6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  42.6773 6.4016 moveto
42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial
2574 4027 a(sa)n(v)n(ed)g(r4\(=0\))2893 4121 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
-42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
42.6773 6.4016 L 0 setlinecap stroke  end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  42.6773 6.4016 moveto
42.6773 -6.4016 L 0 setlinecap stroke  end
 
@endspecial 2574 4133 a(sa)n(v)n(ed)g
(r5\(=0\))2893 4227 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -42.6773 6.4016 moveto
42.6773 6.4016 L 0 setlinecap stroke  end
 
@endspecial
-1275 x @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  51.21277 6.4016 moveto
51.21277 -147.23671 L 0 setlinecap stroke  end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  44.81117 6.4016 moveto
57.61436 6.4016 L 0 setlinecap stroke  end
 
@endspecial 3336 2969 a(New)f(task's)g(frame)2893
2952 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  44.81117 -6.4016 moveto
57.61436 -6.4016 L 0 setlinecap stroke  end
 
@endspecial 3336 3176
a(R)n(OM)g(timer)f(in)n(terrupt)2893 2952 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  44.81117 -44.81117 moveto
57.61436 -44.81117 L 0 setlinecap stroke  end
 
@endspecial 3336 3442 a(Systime)g(handler)2893
2952 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  44.81117 -70.41756 moveto
57.61436 -70.41756 L 0 setlinecap stroke  end
 
@endspecial 3336 3917
a(tm_switc)n(her)2893 2952 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  44.81117 -147.23671
moveto 57.61436 -147.23671 L 0 setlinecap stroke  end


@endspecial 1922 4329 a Fl(Figure)31 b(4:)f(The)23 b(generated)i(stac)
m(k)e(frame)g(of)f(a)h(new)g(task)2063 4641 y(The)30
b(follo)m(wing)h(3)f(generated)h(stac)m(k)e(frames)h(are:)40
b(a)1922 4754 y(stac)m(k)27 b(frame)h(of)e(the)i(R)m(OM)f(timer)h(in)m
(terrupt)h(function,)1922 4867 y(a)24 b(stac)m(k)h(frame)g(of)f(the)h
(systime_handler,)i(and)e(a)f(stac)m(k)1922 4980 y(frame)35
b(of)f(the)h(task)f(manager)i(switc)m(her.)54 b(The)35
b(details)1922 5092 y(can)c(b)s(e)f(studied)h(in)f(\034gure)h(4.)1922
5333 y Fm(2.3.3)100 b(The)33 b(task)h(structures)1922
5504 y Fl(Eac)m(h)44 b(task)f(is)g(asso)s(ciated)g(with)h(a)f(priorit)m
(y)-8 b(.)81 b(In)43 b(the)1922 5617 y(curren)m(t)g(v)m(ersion)e(there)
h(are)g(20)f(priorit)m(y)h(lev)m(els)g(with)1858 6065
y(6)p eop
%%Page: 7 7
7 6 bop -104 -142 a Fj(2)91 b(THE)30 b(LEGOS)i(KERNEL)f(0.2.4)1748
b(2.3)90 b(T)-8 b(ask)31 b(managemen)m(t)p -104 -105
3969 4 v -104 153 a Fl(1)43 b(as)f(the)h(lo)m(w)m(est)i(priorit)m(y)-8
b(,)47 b(and)c(20)g(as)g(the)g(highest.)-104 266 y(The)24
b(n)m(um)m(b)s(er)g(of)f(tasks)f(whic)m(h)j(can)e(b)s(e)g(asso)s
(ciated)g(with)-104 378 y(a)44 b(giv)m(en)g(priorit)m(y)h(lev)m(el)f
(is)g(un)m(b)s(ounded.)82 b(The)44 b(tasks)-104 491 y(are)33
b(organised)g(in)f(a)g(task)g(structure,)i(whic)m(h)f(is)f(an)g(or-)
-104 604 y(dered)50 b(list)e(of)h(priorit)m(y)g(lev)m(els,)54
b(the)49 b(priorit)m(y)h(c)m(hain,)-104 717 y(whic)m(h)33
b(eac)m(h)f(has)g(a)f(non)h(empt)m(y)h(double)f(link)m(ed)h(list)e(of)
-104 830 y Fk(pdata_t)k Fl(structures,)i(called)g(the)e(task)g(queue.)
56 b(Eac)m(h)-104 943 y(priorit)m(y)26 b(lev)m(el)g(has)f(a)g
(designated)i(curren)m(t)f(task,)g(whic)m(h)-104 1056
y(is)g(the)g(task)g(that)g(is)g(curren)m(tly)h(executing,)h(or)e(most)g
(re-)-104 1169 y(cen)m(tly)32 b(has)f(executed.)44 b(Figure)32
b(5)g(illustrates)f(the)h(task)-104 1282 y(structure.)68
b(Note)40 b(that)g(not)f(all)h(p)s(oin)m(ters)g(ha)m(v)m(e)h(b)s(een)
-104 1395 y(included.)g(Eac)m(h)31 b Fk(pdata_t)e Fl(structure)h(also)f
(con)m(tains)i(a)-104 1508 y(p)s(oin)m(ter)j(to)e(the)h
Fk(pchain_t)f Fl(elemen)m(t)i(whic)m(h)g(p)s(oin)m(ts)e(to)-104
1620 y(its)26 b(priorit)m(y)h(c)m(hain,)i(and)d(a)h(p)s(oin)m(ter)g(to)
f Fk(pdata_t)g Fl(struc-)-104 1733 y(ture)31 b(of)f(the)h(paren)m(t)g
(pro)s(cess.)11 3009 y
 tx@Dict begin CP CP translate 0.5  0.5  scale NET  end
 11 3009 a @beginspecial 0 @llx
0 @lly 411 @urx 278 @ury 4110 @rwi @setspecial
%%BeginDocument: figs/task_structure.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: task_structure.eps
%%Creator: fig2dev Version 3.2.3 Patchlevel 
%%CreationDate: Tue Sep  5 13:27:37 2000
%%For: spiff@pro6 (Stig Nielsson)
%%BoundingBox: 0 0 411 278
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.251 0.251 0.251 srgb} bind def
/col33 {0.502 0.502 0.502 srgb} bind def
/col34 {0.753 0.753 0.753 srgb} bind def
/col35 {0.753 0.753 0.753 srgb} bind def
/col36 {0.667 0.667 0.667 srgb} bind def
/col37 {0.251 0.251 0.251 srgb} bind def
/col38 {0.502 0.502 0.502 srgb} bind def
/col39 {0.753 0.753 0.753 srgb} bind def
/col40 {0.251 0.251 0.251 srgb} bind def
/col41 {0.502 0.502 0.502 srgb} bind def
/col42 {0.753 0.753 0.753 srgb} bind def
/col43 {0.251 0.251 0.251 srgb} bind def

end
save
newpath 0 278 moveto 0 0 lineto 411 0 lineto 411 278 lineto closepath clip newpath
% Fill background color
0 0 moveto 411 0 lineto 411 278 lineto 0 278 lineto
closepath 1.00 1.00 1.00 setrgbcolor fill

-17.0 281.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
%%Page: 1 1
10 setmiterlimit
 0.06299 0.06299 sc
% Polyline
7.500 slw
n 2579 448 m 2474 448 2474 1026 105 arcto 4 {pop} repeat
  2474 1131 3787 1131 105 arcto 4 {pop} repeat
  3892 1131 3892 553 105 arcto 4 {pop} repeat
  3892 448 2579 448 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
/Times-Roman ff 180.00 scf sf
2542 853 m
gs 1 -1 sc (Next) col0 sh gr
/Times-Roman ff 180.00 scf sf
2542 1078 m
gs 1 -1 sc (Preivous) col0 sh gr
/Times-Bold ff 180.00 scf sf
2505 643 m
gs 1 -1 sc (Packet consumer) col0 sh gr
% Polyline
n 2100 2024 m 1995 2024 1995 2594 105 arcto 4 {pop} repeat
  1995 2699 3232 2699 105 arcto 4 {pop} repeat
  3337 2699 3337 2129 105 arcto 4 {pop} repeat
  3337 2024 2100 2024 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
/Times-Bold ff 180.00 scf sf
2062 2204 m
gs 1 -1 sc (user process 1) col0 sh gr
/Times-Roman ff 180.00 scf sf
2062 2429 m
gs 1 -1 sc (Next) col0 sh gr
/Times-Roman ff 180.00 scf sf
2062 2654 m
gs 1 -1 sc (Previous) col0 sh gr
% Polyline
n 449 231 m 1807 231 l 1807 1124 l 449 1124 l
 cp gs col0 s gr 
% Polyline
n 442 1798 m 1800 1798 l 1800 2691 l 442 2691 l
 cp gs col0 s gr 
% Polyline
gs  clippath
1094 1814 m 1154 1814 l 1154 1663 l 1124 1783 l 1094 1663 l cp
1154 1116 m 1094 1116 l 1094 1267 l 1124 1147 l 1154 1267 l cp
eoclip
n 1124 1131 m
 1124 1799 l gs col0 s gr gr

% arrowhead
n 1154 1267 m 1124 1147 l 1094 1267 l 1154 1267 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 1094 1663 m 1124 1783 l 1154 1663 l 1094 1663 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 4604 448 m 4499 448 4499 1026 105 arcto 4 {pop} repeat
  4499 1131 5812 1131 105 arcto 4 {pop} repeat
  5917 1131 5917 553 105 arcto 4 {pop} repeat
  5917 448 4604 448 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
gs  clippath
2482 606 m 2482 546 l 2331 546 l 2451 576 l 2331 606 l cp
eoclip
n 854 809 m 2032 809 l 2032 576 l
 2467 576 l gs col0 s gr gr

% arrowhead
n 2331 606 m 2451 576 l 2331 546 l 2331 606 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
4507 606 m 4507 546 l 4356 546 l 4476 576 l 4356 606 l cp
eoclip
n 2992 794 m 4049 794 l 4049 576 l
 4492 576 l gs col0 s gr gr

% arrowhead
n 4356 606 m 4476 576 l 4356 546 l 4356 606 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
3569 456 m 3629 455 l 3624 304 l 3598 425 l 3564 306 l cp
eoclip
n 4972 801 m 6074 801 l 6074 224 l 3592 224 l
 3599 441 l gs col0 s gr gr

% arrowhead
n 3564 306 m 3598 425 l 3624 304 l 3564 306 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
4514 1056 m 4514 996 l 4363 996 l 4483 1026 l 4363 1056 l cp
eoclip
n 3224 1026 m
 4499 1026 l gs col0 s gr gr

% arrowhead
n 4363 1056 m 4483 1026 l 4363 996 l 4363 1056 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
3629 1116 m 3569 1116 l 3569 1267 l 3599 1147 l 3629 1267 l cp
eoclip
n 5249 1026 m 5407 1026 l 5407 1349 l 3599 1349 l
 3599 1131 l gs col0 s gr gr

% arrowhead
n 3629 1267 m 3599 1147 l 3569 1267 l 3629 1267 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 3735 2031 m 3630 2031 3630 2601 105 arcto 4 {pop} repeat
  3630 2706 4867 2706 105 arcto 4 {pop} repeat
  4972 2706 4972 2136 105 arcto 4 {pop} repeat
  4972 2031 3735 2031 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 5324 2024 m 5219 2024 5219 2594 105 arcto 4 {pop} repeat
  5219 2699 6456 2699 105 arcto 4 {pop} repeat
  6561 2699 6561 2129 105 arcto 4 {pop} repeat
  6561 2024 5324 2024 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
gs  clippath
3629 2181 m 3629 2121 l 3478 2121 l 3598 2151 l 3478 2181 l cp
eoclip
n 2474 2369 m 3479 2369 l 3479 2151 l
 3614 2151 l gs col0 s gr gr

% arrowhead
n 3478 2181 m 3598 2151 l 3478 2121 l 3478 2181 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
3179 2676 m 3119 2676 l 3119 2827 l 3149 2707 l 3179 2827 l cp
eoclip
n 4387 2601 m 4499 2601 l 4499 2924 l 3149 2924 l
 3149 2691 l gs col0 s gr gr

% arrowhead
n 3179 2827 m 3149 2707 l 3119 2827 l 3179 2827 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
5227 2181 m 5227 2121 l 5076 2121 l 5196 2151 l 5076 2181 l cp
eoclip
n 4132 2384 m 5009 2384 l 5009 2151 l
 5212 2151 l gs col0 s gr gr

% arrowhead
n 5076 2181 m 5196 2151 l 5076 2121 l 5076 2181 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
3119 2031 m 3179 2031 l 3179 1880 l 3149 2000 l 3119 1880 l cp
eoclip
n 5699 2384 m 6622 2384 l 6622 1799 l 3149 1799 l
 3149 2016 l gs col0 s gr gr

% arrowhead
n 3119 1880 m 3149 2000 l 3179 1880 l 3119 1880 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
4754 2684 m 4694 2684 l 4694 2835 l 4724 2715 l 4754 2835 l cp
eoclip
n 5962 2594 m 6074 2594 l 6074 2924 l 4724 2924 l
 4724 2699 l gs col0 s gr gr

% arrowhead
n 4754 2835 m 4724 2715 l 4694 2835 l 4754 2835 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
6329 2684 m 6269 2684 l 6269 2835 l 6299 2715 l 6329 2835 l cp
eoclip
n 2752 2594 m 2924 2594 l 2924 3149 l 6299 3149 l
 6299 2699 l gs col0 s gr gr

% arrowhead
n 6329 2835 m 6299 2715 l 6269 2835 l 6329 2835 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
2002 2174 m 2002 2114 l 1851 2114 l 1971 2144 l 1851 2174 l cp
eoclip
n 899 2384 m 1844 2384 l 1844 2144 l
 1987 2144 l gs col0 s gr gr

% arrowhead
n 1851 2174 m 1971 2144 l 1851 2114 l 1851 2174 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 442 3373 m 1800 3373 l 1800 4266 l 442 4266 l
 cp gs col0 s gr 
% Polyline
gs  clippath
1094 3382 m 1154 3382 l 1154 3231 l 1124 3351 l 1094 3231 l cp
1154 2684 m 1094 2684 l 1094 2835 l 1124 2715 l 1154 2835 l cp
eoclip
n 1124 2699 m
 1124 3367 l gs col0 s gr gr

% arrowhead
n 1154 2835 m 1124 2715 l 1094 2835 l 1154 2835 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 1094 3231 m 1124 3351 l 1154 3231 l 1094 3231 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 2579 3598 m 2474 3598 2474 4176 105 arcto 4 {pop} repeat
  2474 4281 3787 4281 105 arcto 4 {pop} repeat
  3892 4281 3892 3703 105 arcto 4 {pop} repeat
  3892 3598 2579 3598 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
gs  clippath
2482 3989 m 2482 3929 l 2331 3929 l 2451 3959 l 2331 3989 l cp
eoclip
n 899 3959 m
 2467 3959 l gs col0 s gr gr

% arrowhead
n 2331 3989 m 2451 3959 l 2331 3929 l 2331 3989 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
3869 3696 m 3869 3756 l 4020 3756 l 3900 3726 l 4020 3696 l cp
eoclip
n 2999 3936 m 4274 3936 l 4274 3726 l
 3884 3726 l gs col0 s gr gr

% arrowhead
n 4020 3696 m 3900 3726 l 4020 3756 l 4020 3696 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 3239 4176 m 4274 4176 l
 4274 3929 l gs col0 s gr 
/Times-Roman ff 180.00 scf sf
487 1994 m
gs 1 -1 sc (Previous) col0 sh gr
/Times-Roman ff 180.00 scf sf
487 2219 m
gs 1 -1 sc (Priority =10) col0 sh gr
/Times-Roman ff 180.00 scf sf
487 2444 m
gs 1 -1 sc (cpid) col0 sh gr
/Times-Roman ff 180.00 scf sf
487 2669 m
gs 1 -1 sc (Next) col0 sh gr
/Times-Roman ff 180.00 scf sf
509 426 m
gs 1 -1 sc (Previous) col0 sh gr
/Times-Roman ff 180.00 scf sf
509 651 m
gs 1 -1 sc (Priority = 20) col0 sh gr
/Times-Roman ff 180.00 scf sf
509 876 m
gs 1 -1 sc (cpid) col0 sh gr
/Times-Roman ff 180.00 scf sf
4567 853 m
gs 1 -1 sc (Next) col0 sh gr
/Times-Roman ff 180.00 scf sf
4567 1078 m
gs 1 -1 sc (Preivous) col0 sh gr
/Times-Bold ff 180.00 scf sf
4530 643 m
gs 1 -1 sc (Key handler) col0 sh gr
/Times-Bold ff 180.00 scf sf
3697 2211 m
gs 1 -1 sc (user process 2) col0 sh gr
/Times-Roman ff 180.00 scf sf
3697 2436 m
gs 1 -1 sc (Next) col0 sh gr
/Times-Roman ff 180.00 scf sf
3697 2661 m
gs 1 -1 sc (Previous) col0 sh gr
/Times-Bold ff 180.00 scf sf
5286 2204 m
gs 1 -1 sc (user process 3) col0 sh gr
/Times-Roman ff 180.00 scf sf
5286 2429 m
gs 1 -1 sc (Next) col0 sh gr
/Times-Roman ff 180.00 scf sf
5286 2654 m
gs 1 -1 sc (Previous) col0 sh gr
/Times-Roman ff 180.00 scf sf
472 3584 m
gs 1 -1 sc (Previous) col0 sh gr
/Times-Roman ff 180.00 scf sf
472 3809 m
gs 1 -1 sc (Priority = 1) col0 sh gr
/Times-Roman ff 180.00 scf sf
472 4034 m
gs 1 -1 sc (cpid) col0 sh gr
/Times-Roman ff 180.00 scf sf
2542 4003 m
gs 1 -1 sc (Next) col0 sh gr
/Times-Roman ff 180.00 scf sf
2542 4228 m
gs 1 -1 sc (Preivous) col0 sh gr
/Times-Bold ff 180.00 scf sf
2505 3793 m
gs 1 -1 sc (Idle task) col0 sh gr
/Times-Roman ff 180.00 scf sf
479 4237 m
gs 1 -1 sc (Next) col0 sh gr
/Times-Roman ff 180.00 scf sf
502 1094 m
gs 1 -1 sc (Next) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 11 3009 a
 tx@Dict begin CP CP translate 1 0.5 div 1 0.5 div scale NET  end
 11 3009 a 288 3205 a Fl(Figure)g(5:)g(The)g
(task)f(structures)37 3517 y(T)-8 b(asks)23 b(are)h(added)g(to)f(this)g
(structure)h(b)m(y)f(the)h Fk(execi)-104 3630 y Fl(function.)39
b Fk(Execi)22 b Fl(accesses)g(the)h(task)f(structure)h(in)g(m)m(u-)-104
3743 y(tual)k(exclusion)g(with)g(other)h(pro)s(cesses,)e(b)m(y)h(c)m
(hec)m(king)i(a)-104 3856 y(semaphore,)i(whic)m(h)g(also)f(ensures)g
(that)g(the)g(sc)m(heduler)-104 3969 y(is)d(not)g(sc)m(heduling)i
(while)f(the)f(task)g(structure)h(is)e(b)s(eing)-104
4082 y(up)s(dated.)37 4195 y(An)f(insertion)g(of)g(a)g(new)g(task)f
(starts)h(b)m(y)g(tra)m(v)m(ersing)-104 4307 y(the)30
b(priorit)m(y)h(c)m(hain)f(from)g(the)g(top)g(to)m(w)m(ards)h(the)f(lo)
m(w)m(er)-104 4420 y(prioritized)i(lev)m(els.)40 b(If)29
b(a)h(c)m(hain)i(exists)d(with)h(a)g(priorit)m(y)-104
4533 y(lev)m(el)44 b(equal)f(to)g(the)g(priorit)m(y)h(of)f(the)g(new)h
(task,)h(the)-104 4646 y(task)29 b(is)g(inserted)h(in)f(the)h(bac)m(k)g
(of)f(the)h(asso)s(ciated)f(task)-104 4759 y(queue,)h(whic)m(h)h(will)g
(b)s(e)e(just)g(after)h(the)g(priorit)m(y)h(lev)m(el's)-104
4872 y(designated)41 b(task.)68 b(Otherwise,)43 b(a)c(new)h(en)m(try)h
(in)e(the)-104 4985 y(priorit)m(y)34 b(c)m(hain)f(is)f(created,)i(and)f
(the)g(task)f(is)g(inserted)-104 5098 y(in)f(the)f(asso)s(ciated)h
(task)f(queue.)1922 153 y Fm(2.3.4)100 b(Summa)m(ry)32
b(of)h(the)g(notions)i(of)e(k)m(ernel)2228 266 y(image,)e(user)j(p)m
(rograms,)g(and)g(tasks.)1922 437 y Fl(T)-8 b(o)26 b(summarise,)h(the)f
(k)m(ernel)g(is)f(a)h(separately)g(compiled)1922 550
y(binary)g(image,)i(whic)m(h)g(exp)s(orts)d(a)h(set)g(of)g(sym)m(b)s
(ols)g(\(the)1922 663 y(sym)m(b)s(ol)43 b(table\))h(in)f(a)g(link)m(er)
h(script)f(called)h Fi(le)-5 b(gos.lds)p Fl(.)1922 776
y(The)45 b(k)m(ernel)g(image)g(i)f(lo)s(cated)h(in)g(the)f(b)s
(eginning)i(of)1922 889 y(RAM.)2063 1002 y(User)d(programs)i(are)f
(compiled)h(separately)-8 b(,)48 b(and)1922 1115 y(link)m(ed)33
b(with)g(the)f(k)m(ernel)h(sym)m(b)s(ol)g(tab)s(el,)g(creating)g(the)
1922 1228 y(relo)s(cateable)39 b(format)g Fi(.lx)p Fl(.)64
b(The)38 b(\034nal)h(linking)g(to)f(ab-)1922 1340 y(solute)d(addresses)
h(are)f(done)h(when)g(do)m(wnloading)i(the)1922 1453
y(program)45 b(with)f Fi(d)5 b(l)g(l)p Fl(,)47 b(after)c(the)h
(absolute)h(address)f(of)1922 1566 y(the)34 b(text)g(segmen)m(t)i(of)e
(the)g(program)h(is)f(kno)m(wn.)53 b(User)1922 1679 y(programs)26
b(are)g(do)m(wnloaded)h(to)f(the)f(part)h(of)f(RAM)f(fol-)1922
1792 y(lo)m(wing)32 b(the)e(k)m(ernel)h(image)h(part.)2063
1905 y(T)-8 b(asks)22 b(are)h(started)f(b)m(y)h(a)f(user)g(program)i
(as)e(threads)1922 2018 y(in)27 b(the)h(address)g(space)g(of)f(the)g
(user)h(program.)41 b(As)26 b(user)1922 2131 y(programs)e(are)f
(compiled)h(in)g(separate)f(address)g(spaces,)1922 2244
y(user)33 b(programs)g(cannot)h(start)f(threads)g(in)g(other)g(user)
1922 2357 y(programs.)1922 2597 y Fm(2.3.5)100 b(The)33
b(scheduler)1922 2768 y Fl(When)44 b(a)g(the)h(timeslice)f(of)g(a)g
(pro)s(cess)g(has)g(elapsed,)1922 2881 y(or)33 b(when)h(a)f(pro)s(cess)
f(v)m(olun)m(tarily)j(giv)m(es)e(up)h(the)f(CPU,)1922
2994 y(the)k(sc)m(heduler)g(is)f(in)m(v)m(ok)m(ed)i(to)f(decide)g(whic)
m(h)h(pro)s(cess)1922 3107 y(to)h(execute)g(for)g(the)h(next)f
(timeslice.)67 b(A)38 b Fk(trywait)h Fl(is)1922 3220
y(made)22 b(on)f(the)g(task)g(semaphore.)38 b(If)20 b(it)h(is)g(blo)s
(c)m(k)m(ed,)j(some)1922 3333 y(other)36 b(pro)s(cess)f(is)h(up)s
(dating)g(the)g(task)f(structures,)j(so)1922 3446 y(the)32
b(sc)m(heduler)i(returns)f(and)f(no)h(new)f(pro)s(cess)g(will)h(b)s(e)
1922 3559 y(sc)m(heduled.)54 b(If)34 b(the)h(task)f(semaphore)h(is)f
(not)h(blo)s(c)m(k)m(ed,)1922 3672 y(the)29 b(sc)m(heduler)i(will)e
(blo)s(c)m(k)h(it,)f(and)h(examine)g(the)f(state)1922
3785 y(of)24 b(the)g(curren)m(t)i(pro)s(cess.)38 b(If)23
b(it)i(is)f(a)g(zom)m(bie,)j(the)d(sc)m(hed-)1922 3897
y(uler)g(deallo)s(cates)h(its)f(memory)-8 b(,)26 b(and)f(remo)m(v)m(es)
g(its)f(en)m(try)1922 4010 y(from)29 b(the)h(task)f(structure.)41
b(If)28 b(it)h(w)m(as)h(the)g(last)f(pro)s(cess)1922
4123 y(in)e(the)h(priorit)m(y)g(lev)m(el,)h(the)f(lev)m(el)g(is)f(remo)
m(v)m(ed)i(from)e(the)1922 4236 y(priorit)m(y)k(lev)m(el)g(list.)2063
4349 y(T)-8 b(o)37 b(\034nd)f(the)g(next)g(pro)s(cess)g(to)g(b)s(e)g
(sc)m(heduled)h(the)1922 4462 y(priorit)m(y)e(lev)m(els)f(are)g
(examined,)h(in)f(prioritized)i(order.)1922 4575 y(In)j(eac)m(h)i(lev)m
(el)f(the)g(state)g(of)f(the)h(task)f(follo)m(wing)i(the)1922
4688 y(designated)k(task)e(in)h(the)g(queue)g(is)f(tested.)81
b(If)43 b(it)h(is)1922 4801 y(sleeping,)c(the)f(pro)s(cess)e(is)g
(ready)h(to)g(b)s(e)g(switc)m(hed)h(in,)1922 4914 y(and)i(it)h(is)f(sc)
m(heduled)h(for)f(execution,)k(b)m(y)d(setting)g(its)1922
5027 y(state)36 b(to)h(runnning.)60 b(The)37 b(sc)m(heduler)h(p)s(osts)
d(the)i(task)1922 5139 y(semaphore,)28 b(and)d(returns)h(the)g(sa)m(v)m
(ed)h(stac)m(k)e(p)s(oin)m(ter)i(of)1922 5252 y(the)k(new)f(task.)2063
5365 y(If)37 b(the)i(task)f(is)g(in)h(a)f(w)m(aiting)i(state,)h(its)d
(w)m(ak)m(e-up)1922 5478 y(function)46 b(is)f(tested.)86
b(If)45 b(the)h(w)m(ak)m(e-up)h(function)f(re-)1922 5591
y(turns)32 b(a)g(non-n)m(ull)h(v)-5 b(alue,)32 b(the)h(pro)s(cess)e(is)
g(selected)i(for)1858 6065 y(7)p eop
%%Page: 8 8
8 7 bop -104 -142 a Fj(2)91 b(THE)30 b(LEGOS)i(KERNEL)f(0.2.4)1608
b(2.4)90 b(Memory)31 b(managemen)m(t)p -104 -105 3969
4 v -104 153 a Fl(running,)44 b(and)d(the)g(sc)m(heduler)g(returns)g
(as)f(describ)s(ed)-104 266 y(ab)s(o)m(v)m(e.)52 b(If)33
b(the)i(pro)s(cess)e(is)h(not)g(\034nished)h(w)m(aiting,)h(the)-104
378 y(next)30 b(pro)s(cess)f(in)g(the)h(lev)m(el)g(is)f(examined.)41
b(If)29 b(no)g(ready)-104 491 y(pro)s(cesses)23 b(are)g(found)h(in)f
(the)h(lev)m(el,)h(the)e(sc)m(heduler)i(pro-)-104 604
y(ceedes)32 b(to)g(the)h(next)f(priorit)m(y)h(lev)m(el.)46
b(The)32 b(idle)h(task)e(is)-104 717 y(nev)m(er)d(in)g(the)g(w)m
(aiting)h(state,)f(meaning)h(that)f(this)f(task)-104
830 y(will)k(execute)g(if)f(no)g(other)h(tasks)f(are)g(eligible.)37
943 y(The)45 b(sc)m(heduler)i(th)m(us)e(uses)f(a)h(prioritized)i(round)
-104 1056 y(robin)e(sc)m(heme.)83 b(The)45 b(com)m(bination)i(of)c
(shared)i(pro-)-104 1169 y(tected)21 b(resources)g(\(semaphores\))g
(and)g(priotized)h(sc)m(hedul-)-104 1282 y(ing,)34 b(in)m(tro)s(duces)h
(the)e(problem)i(of)e(priorit)m(y)h(in)m(v)m(ersion,)-104
1395 y(where)g(a)g(lo)m(w)m(er)h(prioritized)h(pro)s(cess)d(blo)s(c)m
(ks)g(a)h(higher)-104 1508 y(priortized)47 b(b)m(y)e(holding)h(a)g
(resource)g(needed)g(b)m(y)f(the)-104 1620 y(higher)24
b(prioritized)h(pro)s(cess.)38 b(No)23 b(attempts)h(ha)m(v)m(e)h(b)s
(een)-104 1733 y(made)k(to)f(a)m(v)m(oid)i(this)e(problem,)i(but)f([4])
f(discusses)g(this)-104 1846 y(problem)k(and)e(pro)m(vides)h(a)g
(solution.)-104 2087 y Fh(2.4)112 b(Memo)m(ry)38 b(management)-104
2259 y Fl(LegOS)h(uses)e(a)g(straigh)m(tforw)m(ard)j(con)m(tin)m(uous)g
(allo)s(ca-)-104 2372 y(tion)c(sc)m(heme)g(for)f(managing)h(the)g
(memory)-8 b(.)56 b(There)36 b(is)-104 2485 y(no)45 b(supp)s(ort)f(in)h
(the)f(R)m(CX)g(hardw)m(are)j(for)d(adv)-5 b(anced)-104
2598 y(memory)36 b(managemen)m(t)j(sc)m(hemes)d(suc)m(h)g(as)g(paging)g
(or)-104 2710 y(segmen)m(tation.)j(F)-8 b(urthermore,)25
b(the)c(memory)g(is)e(a)i(scarce)-104 2823 y(resource,)52
b(so)46 b(an)h(adv)-5 b(anced)48 b(memory)f(managemen)m(t)-104
2936 y(sc)m(heme)33 b(w)m(ould)h(probably)f(imply)f(to)h(m)m(uc)m(h)h
(o)m(v)m(erhead.)-104 3049 y(In)46 b(the)g(follo)m(wing,)52
b(the)47 b(memory)g(manager)g(denotes)-104 3162 y(the)27
b(collection)h(of)e(functions)h(de\034ned)g(in)g Fi(kernel/mm.c)-104
3275 y Fl(whic)m(h)32 b(implemen)m(ts)g(the)e(memory)h(managemen)m(t.)
37 3388 y(The)f(memory)g(is)e(divided)i(in)m(to)g(a)f(k)m(ernel)h(part)
g(and)-104 3501 y(a)j(user)h(program)h(part.)50 b(The)34
b(k)m(ernel)g(co)s(de)f(and)h(static)-104 3614 y(k)m(ernel)47
b(data)h(are)e(lo)s(cated)i(in)e(the)h(lo)m(w)m(er)h(part)g(from)-104
3727 y(adress)27 b(0x8000)h(up)g(to)g(address)f Fk(mm_start)p
Fl(,)h(whic)m(h)h(is)e(a)-104 3840 y(global)h(v)-5 b(ariable.)40
b(The)27 b(memory)h(manager)g(has)f(the)g(re-)-104 3952
y(sp)s(onsibilit)m(y)21 b(of)f(all)g(the)h(memory)g(from)f(address)h
Fk(mm_start)-104 4065 y Fl(to)31 b(address)f(0xFFFF.)867
4254 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -56.90887 8.53633 moveto
-56.90887 -8.53633 L 0 setlinecap stroke  end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -56.90887 8.53633 moveto
56.90887 8.53633 L 0 setlinecap stroke  end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  56.90887 8.53633 moveto
56.90887 -8.53633 L 0 setlinecap stroke  end
 
@endspecial
442 4271 a Fg(Pro)r(cess)22 b(ID)867 4396 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -56.90887 8.53633 moveto
-56.90887 -8.53633 L 0 setlinecap stroke  end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -56.90887 8.53633 moveto
56.90887 8.53633 L 0 setlinecap stroke  end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  56.90887 8.53633 moveto
56.90887 -8.53633 L 0 setlinecap stroke  end
 
@endspecial 442 4413 a(Size)867
4538 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -56.90887 8.53633 moveto
-56.90887 -8.53633 L 0 setlinecap stroke  end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -56.90887 8.53633 moveto
56.90887 8.53633 L 0 setlinecap stroke  end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  56.90887 8.53633 moveto
56.90887 -8.53633 L 0 setlinecap stroke  end
 
@endspecial
442 4555 a(Data)f(\034eld)867 4679 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  -56.90887 8.53633 moveto
56.90887 8.53633 L 0 setlinecap stroke  end


@endspecial 190 4781 a Fl(Figure)31 b(6:)f(The)h(basic)g(memory)g(blo)
s(c)m(k)37 5105 y(The)44 b(memory)f(is)f(organised)i(in)f(memory)h(blo)
s(c)m(ks)-104 5218 y(whic)m(h)25 b(consist)e(of)g(a)g(4)h(b)m(yte)g
(header)g(and)g(an)f(ev)m(en)h(n)m(um-)-104 5331 y(b)s(er)35
b(of)f(data)h(b)m(ytes,)h(see)e(\034gure)i(6.)53 b(The)35
b(\034rst)g(2)f(b)m(ytes)-104 5444 y(of)25 b(the)h(header)g(con)m(tain)
h(the)e(pro)s(cess)g(id)h(of)e(the)i(pro)s(cess)-104
5557 y(whic)m(h)32 b(has)e(allo)s(cated)i(the)f(blo)s(c)m(k.)42
b(If)29 b(the)i(blo)s(c)m(k)g(is)f(un-)-104 5670 y(allo)s(cated,)42
b(the)e(v)-5 b(alue)39 b(is)g Fk(MM_FREE)f Fl(whic)m(h)j(is)e
(de\034ned)1922 153 y(to)f(b)s(e)g(zero.)64 b(The)39
b(2)f(last)g(b)m(ytes)g(of)g(the)h(header)g(hold)1922
266 y(the)28 b(size)g(of)g(the)g(data)h(blo)s(c)m(k)f(follo)m(wing)i
(the)e(header.)41 b(A)1922 378 y(global)32 b(p)s(oin)m(ter)h(v)-5
b(ariable)32 b Fk(mm_first_free)f Fl(is)h(used)f(to)1922
491 y(indicate)i(the)f(\034rst)g(free)f(memory)i(blo)s(c)m(k.)44
b(The)33 b(unit)f(of)1922 604 y(memory)h(used)g(b)m(y)g(the)g(memory)g
(manager)h(in)m(ternally)1922 717 y(is)c(2)g(b)m(yte)h(w)m(ords.)2063
830 y(During)21 b(k)m(ernel)g(startup,)i(the)e(memory)g(is)f
(initialised)1922 943 y(to)45 b(con)m(tain)i(the)e(blo)s(c)m(ks)g
(indicated)i(in)e(7,)k(and)d Fk(mm_-)1922 1056 y(first_free)30
b Fl(it)h(set)g(to)g(p)s(oin)m(t)h(to)f(the)g(\034rst)g(free)g(blo)s(c)
m(k.)1922 1169 y(The)48 b(initialisation)h(is)f(done)g(with)g(2)g
(macros,)53 b Fk(MM_-)1922 1282 y(BLOCK_FREE\(addr\))20
b Fl(and)g Fk(MM_BLOCK_RESERVED\(addr\))p Fl(.)2893 1484
y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true -57.61436 8.53546
46.94504 -121.63033 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 2438 1511 a
Fg(&mm_start)h(FREE)2438 1642 y(0xEF30)h(LCD)f(D)n(A)-5
b(T)g(A)2438 1767 y(0xef50)23 b(FREE)2438 1891 y(0xf000)g(Motor)2438
2032 y(0xF010)g(FREE)2438 2174 y(0xFB80)g(V)-5 b(ectors)2438
2315 y(0xFE00)22 b(FREE)2438 2453 y(0xFF00)h(Onc)n(hip)c(register)2893
1484 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 46.94504 -38.40958 -57.61436 -38.40958  /Lineto /lineto
load def false Line  gsave 0. setgray fill grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.0 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 46.94504 -23.47252 -57.61436 -23.47252  /Lineto /lineto
load def false Line  gsave 0. setgray fill grestore end
 
@endspecial 2110 2672 a Fl(Figure)31 b(7:)g(The)g(initial)
g(memory)g(allo)s(cation)2063 2994 y(As)45 b(memory)h(is)f(freed,)50
b(adjacen)m(t)d(free)f(memory-)1922 3107 y(blo)s(c)m(ks)35
b(ma)m(y)h(app)s(ear,)h(and)f(they)f(ha)m(v)m(e)i(to)e(b)s(e)g(merged)
1922 3220 y(to)h(reduce)g(the)g(amoun)m(t)h(of)f(external)g(fragmen)m
(tation.)1922 3332 y(The)43 b(function)g Fk(mm_try_join)f
Fl(tak)m(es)h(the)g(address)g(of)1922 3445 y(a)g(free)g(memory)g(blo)s
(c)m(k)g(as)g(parameter,)48 b(and)43 b(merges)1922 3558
y(it)34 b(with)h(all)f(the)h(follo)m(wing)g(free)f(memory)h(blo)s(c)m
(ks,)g(un-)1922 3671 y(til)45 b(a)g(non-free)h(blo)s(c)m(k)f(is)g
(found.)84 b(The)46 b(merging)g(re-)1922 3784 y(quires)22
b(lo)s(c)m(king)h(of)f(the)h(memory)g(manager)h(semaphore,)1922
3897 y Fk(mm_semaphore)p Fl(,)47 b(whic)m(h)e(mak)m(es)f(all)g(other)h
(pro)s(cesses)1922 4010 y(trying)38 b(to)g(allo)s(cate)h(memory)-8
b(,)40 b(w)m(ait)f(for)f(the)g(merging)1922 4123 y(op)s(eration.)j
(Merging)29 b(is)f(done)h(at)f(di\033eren)m(t)i(times,)f(de-)1922
4236 y(p)s(ending)24 b(on)f(the)h(w)m(a)m(y)g(the)f(k)m(ernel)h(runs.)
38 b(In)23 b(singletask-)1922 4349 y(ing)28 b(mo)s(de)g(the)h(merging)g
(will)g(b)s(e)e(done)i(when)g(memory)1922 4462 y(is)f(freed,)i(but)f
(in)g(m)m(ultitasking)h(mo)s(de)f(it)g(is)f(imp)s(ortan)m(t)1922
4574 y(to)c(k)m(eep)g(the)h(lo)s(c)m(king)f(of)g(the)g
Fk(mm_semaphore)g Fl(at)g(a)g(min-)1922 4687 y(im)m(um,)h(wh)m(y)e(it)g
(is)f(done)h(at)g(allo)s(cation)h(time,)h(where)e(the)1922
4800 y(semaphore)31 b(is)f(already)h(lo)s(c)m(k)m(ed.)1922
5040 y Fm(2.4.1)100 b(Allo)s(cating)32 b(memo)m(ry)1922
5212 y Fl(Kernel)21 b(pro)s(ccesses)f(and)h(user)f(programs)h(request)g
(mem-)1922 5325 y(ory)48 b(allo)s(cation)h(b)m(y)f(calling)i
Fk(malloc)p Fl(.)94 b Fk(Malloc)47 b Fl(\034rst)1922
5438 y(w)m(aits)26 b(for)f(the)h(memory)g(manager)g(semaphore)h
Fk(mm_se-)1922 5551 y(maphore)37 b Fl(to)g(ensure)g(that)h(no)f(other)h
(pro)s(cesseses)e(are)1922 5664 y(manipulating)g(the)f(memory)-8
b(.)54 b(When)35 b(gran)m(ted)h(access)1858 6065 y(8)p
eop
%%Page: 9 9
9 8 bop -104 -142 a Fj(2)91 b(THE)30 b(LEGOS)i(KERNEL)f(0.2.4)1358
b(2.5)91 b(In)m(terpro)s(cess)30 b(comm)m(unication)p
-104 -105 3969 4 v -104 153 a Fl(to)j(the)f(critical)i(region,)g
Fk(malloc)e Fl(will)h(start)f(searc)m(hing)-104 266 y(the)27
b(memory)g(from)g(address)f Fk(mm_first_free)p Fl(,)h(un)m(til)h(a)-104
378 y(free)39 b(memory)h(blo)s(c)m(k)f(of)g(suiteable)h(size)f(is)g
(found)g(\(or)-104 491 y(end)i(of)g(memory)g(is)g(reac)m(hed)h(in)f
(whic)m(h)h(case)f Fi(nul)5 b(l)50 b Fl(is)-104 604 y(returned\).)37
717 y(If)34 b(legOS)h(is)f(running)i(in)f(m)m(ultitasking)h(mo)s(de,)f
(an)-104 830 y(attempt)28 b(to)f(merge)h(the)f(free)f(memory)i(blo)s(c)
m(k)f(with)g(the)-104 943 y(follo)m(wing)46 b(memory)f(blo)s(c)m(k)g
(is)f(made.)83 b(If)43 b(the)i(di\033er-)-104 1056 y(ence)c(b)s(et)m(w)
m(een)g(the)f(size)g(of)g(the)g(free)g(memory)g(blo)s(c)m(k)-104
1169 y(and)26 b(the)g(requested)g(size)g(exceeds)f(a)h(certain)h
(threshold)-104 1282 y(\(curren)m(tly)38 b(de\034ned)g(to)f(headersize)
h(+)e(8)h(w)m(ords\),)i(the)-104 1395 y(memory)e(blo)s(c)m(k)g(will)h
(b)s(e)e(split.)60 b(When)37 b(this)g(splitting)-104
1508 y(o)s(ccurs,)23 b(the)e(allo)s(cated)h(blo)s(c)m(k)f(will)g(get)g
(excactly)g(the)g(re-)-104 1620 y(quested)29 b(size,)h(and)f(the)h
(remainings)g(of)e(the)i(blo)s(c)m(k)f(will)-104 1733
y(form)34 b(a)g(new)h(free)f(blo)s(c)m(k.)52 b(This)35
b(reduces)f(the)h(amoun)m(t)-104 1846 y(of)27 b(in)m(ternal)i(memory)e
(fragmen)m(tation.)42 b(The)28 b(threshold)-104 1959
y(v)-5 b(alue)33 b(m)m(ust)g(b)s(e)f(c)m(hosen)i(with)f(care.)48
b(If)32 b(it)g(is)h(to)f(small,)-104 2072 y(there)40
b(will)g(to)g(m)m(uc)m(h)i(o)m(v)m(erhead)f(in)f(k)m(eeping)h(trac)m(k)
f(of)-104 2185 y(the)28 b(memory)g(blo)s(c)m(ks,)f(and)h(if)f(it)g(is)g
(to)h(large,)g(there)g(will)-104 2298 y(b)s(e)h(to)h(m)m(uc)m(h)h(in)m
(ternal)g(fragmen)m(tation.)42 b(If)29 b(successfull,)-104
2411 y Fk(malloc)k Fl(returns)h(a)f(p)s(oin)m(ter)h(to)g(the)f(datablo)
s(c)m(k)h(of)f(the)-104 2524 y(allo)s(cated)e(memoryblo)s(c)m(k.)-104
2764 y Fm(2.4.2)100 b(F)m(reeing)33 b(memo)m(ry)-104
2935 y Fl(F)-8 b(reeing)29 b(dynamically)f(allo)s(cated)g(memory)g(is)f
(done)h(b)m(y)-104 3048 y(calling)g Fk(free)p Fl(.)39
b(This)26 b(function)g(simply)g(marks)f(the)i(des-)-104
3161 y(ignated)49 b(blo)s(c)m(k)e(as)g(free.)92 b(Only)48
b(non-n)m(ull)h(ev)m(en)f(ad-)-104 3274 y(dresses)35
b(will)i(b)s(e)e(considered.)59 b(As)35 b(men)m(tioned)j(ab)s(o)m(v)m
(e,)-104 3387 y(an)26 b(attempt)h(to)f(merge)h(the)f(freed)g(blo)s(c)m
(k)g(with)g(the)g(pre-)-104 3500 y(ceeding)33 b(blo)s(c)m(k)g(is)f
(made,)h(if)f(the)h(k)m(ernel)g(is)f(running)h(in)-104
3613 y(single)h(tasking)g(mo)s(de.)51 b(Finally)34 b(the)g
Fk(mm_first_free)-104 3726 y Fl(p)s(oin)m(ter)d(is)f(up)s(dated.)37
3839 y(When)35 b(pro)s(cesses)f(terminate,)j(their)e(dynamically)-104
3952 y(allo)s(cated)e(memory)g(has)g(to)f(b)s(e)h(freed.)47
b Fk(Exit)32 b Fl(is)g(called)-104 4065 y(when)k(pro)s(cesses)f
(terminate,)k(and)d Fk(exit)f Fl(calls)h(mm_-)-104 4177
y(reap)s(er)180 4144 y Fd(1)220 4177 y Fl(.)57 b Fk(Mm_reaper)35
b Fl(mak)m(es)h(2)g(passes)f(through)i(all)-104 4290
y(memory)j(blo)s(c)m(ks.)65 b(The)40 b(\034rst)f(pass)f(marks)h(all)g
(blo)s(c)m(ks)-104 4403 y(b)s(elonging)d(to)g(the)g(terminating)h(pro)s
(cess.)56 b(Note)35 b(that)-104 4516 y(the)22 b(stac)m(k)f(memory)h(is)
f(not)g(o)m(wned)i(b)m(y)e(the)h(pro)s(cess,)g(but)-104
4629 y(b)m(y)31 b(its)g(paren)m(t)h(pro)s(cess,)e(and)i(th)m(us)f(the)g
(stac)m(k)g(will)g(not)-104 4742 y(b)s(e)k(freed)h(b)m(y)h
Fk(mm_reaper)p Fl(.)56 b(If)35 b(the)h(pro)s(cess)f(is)h(\035agged)-104
4855 y(as)41 b(a)g(k)m(ernel)h(pro)s(cess,)i(the)e(memory)g(blo)s(c)m
(ks)f(are)g(not)-104 4968 y(mark)m(ed.)98 b(This)49 b(is)g(b)s(ecause)h
(all)f(dynamically)h(allo-)-104 5081 y(cated)29 b(memory)f(is)f
(deleted)i(when)g(the)f(R)m(CX)f(is)h(turned)-104 5194
y(o\033.)89 b(The)47 b(text)g(and)g(static)g(data)g(segmen)m(ts)h(of)e
(the)p -104 5255 778 4 v -62 5309 a Fg(1)-27 5341 y Fc(Note)25
b(that)g(there)g(w)n(as)h(a)f(bug)g(in)g Fb(mm_r)l(e)l(ap)l(er)p
Fc(,)h(in)g(the)e(o\036cial)11 5432 y(0.2.4)30 b(release.)42
b(The)28 b(\034x)f(to)h(this)g(bug,)g(added)g(the)f(notion)h(of)11
5523 y(pro)r(cess)35 b(\035ags)g(to)g(the)e Fa(pdata_t)j
Fc(structure,)g(to)f(b)r(e)f(able)h(to)11 5615 y(di\033eren)n(tiate)26
b(k)n(ernel)f(pro)r(cesses)i(from)f(user)g(pro)r(cesses.)1922
153 y Fl(user)44 b(programs)i(are)e(allo)s(cated)i(b)m(y)f(the)f
Fi(p)-5 b(acket)48 b(c)-5 b(on-)1922 266 y(sumer)41 b
Fl(task.)f(The)31 b Fi(p)-5 b(acket)35 b(c)-5 b(onsumer)41
b Fl(task)30 b(is)g(\035agged)1922 378 y(as)e(a)g(k)m(ernel)i(pro)s
(cess,)e(and)h(its)f(dynamically)h(allo)s(cated)1922
491 y(memory)-8 b(,)27 b(i.e.)40 b(the)25 b(user)h(programs,)h(will)f
(therefore)g(not)1922 604 y(b)s(e)k(deleted.)2063 717
y(This)44 b(memory)i(managemen)m(t)h(sc)m(heme)e(\(and)g(the)1922
830 y(hardw)m(are\))k(do)s(es)e(not)h(pro)m(vide)g(an)m(y)g(form)g(of)f
(mem-)1922 943 y(ory)42 b(protection,)48 b(so)42 b(all)h(pro)s(cesses)g
(can)g(write)g(in)g(all)1922 1056 y(of)25 b(RAM.)g(F)-8
b(urthermore,)29 b(programs)e(can)f(dynamically)1922
1169 y(allo)s(cate)32 b(RAM,)e(so)h(it's)g(p)s(ossible)f(that)i
(programs)g(run)1922 1282 y(out)f(of)f(memory)-8 b(.)41
b(User)30 b(programs)h(m)m(ust)g(therefore)h(b)s(e)1922
1395 y(written)f(with)g(care)g(to)f(a)m(v)m(oid)i(system)e(crashes.)
1922 1638 y Fh(2.5)112 b(Interp)m(ro)s(cess)37 b(communication)1922
1810 y Fl(T)-8 b(raditionally)33 b(an)d(IPC)h(facilit)m(y)g(in)g(an)g
(op)s(erating)g(sys-)1922 1923 y(tem)25 b(pro)m(vides)h(means)g(for)f
(pro)s(cesses)f(to)i(comm)m(unicate)1922 2035 y(data)38
b(and)g(sync)m(hronise)h(their)f(actions.)63 b(LegOS)39
b(only)1922 2148 y(pro)m(vides)33 b(the)g(lo)m(w)h(lev)m(el)f
(semaphore)h(as)e(sync)m(hronisa-)1922 2261 y(tion)h(primitv)m(e.)48
b(No)32 b(notion)h(of)f(message)h(passing)f(sys-)1922
2374 y(tems)e(exists.)39 b(But)30 b(pro)s(cesses)f(are)h(similar)h(to)f
(threads,)1922 2487 y(so)39 b(the)g(memory)h(is)f(shared.)68
b(Pro)s(cesses)39 b(in)g(di\033eren)m(t)1922 2600 y(user)28
b(programs)h(ho)m(w)m(ev)m(er,)i(ha)m(v)m(e)e(no)g(k)m(ernel)g(supp)s
(orted)1922 2713 y(means)i(for)f(comm)m(unicating)j(data.)1922
2956 y Fh(2.6)112 b(Semapho)m(re)36 b(facilit)m(y)1922
3128 y Fl(LegOS)26 b(pro)m(vides)f(a)g(semaphore)h(facilit)m(y)f(whic)m
(h)h(imple-)1922 3241 y(men)m(ts)21 b(the)g(classical)f(Dijkstra)g
(de\034nition)i(of)e(semaphores.)1922 3354 y(The)45 b(semaphores)h(are)
f(coun)m(ting)i(semaphores.)84 b(Be-)1922 3467 y(sides)29
b(the)g(usual)g Fi(wait)38 b Fl(and)29 b Fi(p)-5 b(ost)38
b Fl(\()p Fi(signal)9 b Fl(\))30 b(op)s(erations,)1922
3580 y(a)40 b(non-blo)s(c)m(king)i(w)m(ait)f(called)h
Fk(sem_trywait)d Fl(and)i(an)1922 3693 y(op)s(eration)28
b(for)f(reading)h(the)g(semaphore)g(v)-5 b(alue,)29 b
Fk(sem_-)1922 3805 y(getvalue)24 b Fl(are)h(pro)m(vided.)40
b(The)26 b Fi(wait)33 b Fl(op)s(eration)26 b(is)e(im-)1922
3918 y(plemen)m(ted)40 b(with)e(the)g Fk(wait_event)g
Fl(function,)i(whic)m(h)1922 4031 y(puts)e(the)g(pro)s(ccess)g(in)g
(sleep)h(mo)s(de,)h(and)f(sp)s(eci\034es)e(a)1922 4144
y(w)m(ak)m(e-up)50 b(function.)97 b(The)49 b(w)m(ak)m(e-up)i(function)e
(used)1922 4257 y(with)21 b(semaphores)g(is)f Fk(sem_event_wait)p
Fl(,)i(whic)m(h)f(c)m(hec)m(ks)1922 4370 y(the)31 b(v)-5
b(alue)30 b(of)g(the)h(semaphore.)2063 4483 y(If)i(a)h(pro)s(cess)g(is)
f(blo)s(c)m(k)m(ed)i(on)f(the)h(semaphore)g(and)1922
4596 y(the)29 b(semaphore)i(is)d(signalled,)j(the)e(pro)s(cess)g(is)g
(not)g(w)m(o-)1922 4709 y(k)m(en)f(up)g(immediately)-8
b(.)42 b(Instead)28 b(the)g(semaphore)i(is)d(in-)1922
4822 y(cremen)m(ted,)h(whic)m(h)e(is)f(not)g(adhering)h(to)g(the)f
(de\034nition)1922 4935 y(giv)m(en)35 b(in)h([3].)54
b(The)35 b(next)g(time)h(the)f(sc)m(heduler)h(c)m(hec)m(ks)1922
5047 y(the)g(w)m(ak)m(e-up)i(function)e(of)g(the)g(pro)s(cess,)h(the)f
(pro)s(cess)1922 5160 y(will)42 b(b)s(e)f(w)m(ok)m(en.)75
b(The)42 b(w)m(ak)m(e-up)h(function)f(will)g(then)1922
5273 y(decremen)m(t)26 b(the)e(semaphore,)i(whic)m(h)f(w)m(as)f
(incremen)m(ted)1922 5386 y(b)m(y)30 b(the)h Fi(p)-5
b(ost)39 b Fl(op)s(eration.)2063 5499 y(If)19 b(sev)m(eral)i(pro)s
(cesses)f(are)g(blo)s(c)m(k)m(ed)i(on)e(a)h(semaphore)1922
5612 y(whic)m(h)46 b(is)f(signalled,)51 b(the)45 b(\034rst)h(pro)s
(cess)f(to)g(ha)m(v)m(e)i(its)1858 6065 y(9)p eop
%%Page: 10 10
10 9 bop -104 -142 a Fj(3)91 b(PERIPHERAL)30 b(DEVICES)2026
b(3.2)91 b(Sensor)31 b(con)m(trol)p -104 -105 3969 4
v -104 153 a Fl(w)m(ak)m(e-up)45 b(function)e(c)m(hec)m(k)m(ed)j(is)c
(w)m(ok)m(en)i(up.)79 b(As)42 b(the)-104 266 y(w)m(ak)m(e-up)25
b(function)g(decremen)m(ts)g(the)f(semaphore,)j(only)-104
378 y(one)33 b(pro)s(cess)f(will)h(b)s(e)f(w)m(ok)m(en.)49
b(The)33 b(sc)m(heduler)h(alw)m(a)m(ys)-104 491 y(examines)d(the)g
(higher)g(prioritized)h(pro)s(cesses)e(\034rst,)h(so)-104
604 y(the)j(higher)g(prioritized)h(pro)s(cesses)d(are)i(w)m(ok)m(en)h
(b)s(efore)-104 717 y(lo)m(w)m(er)30 b(prioritized)g(w)m(aiting)g(for)e
(the)h(same)f(semaphore.)-104 830 y(As)33 b(men)m(tioned)j(earlier,)g
(the)e(problem)i(of)d(priorit)m(y)i(in-)-104 943 y(v)m(ersion)c(exists)
f(in)g(legOS.)-104 1186 y Fh(2.7)112 b(IR)38 b(net)m(w)m(o)m(rking)-104
1358 y Fl(This)28 b(section)f(is)g(based)h(on)g(the)g(information)g
(pro)m(vided)-104 1471 y(from)i(the)h(legOS)g(newsgroup)h([2].)37
1584 y(LNP)44 b(is)e(the)h(LegOS)i(Net)m(w)m(ork)f(Protol)g(whic)m(h)g
(is)-104 1697 y(used)37 b(b)m(y)f(user)h(programs)g(to)g(comm)m
(unicate)i(o)m(v)m(er)e(the)-104 1810 y(IR)g(p)s(ort.)65
b(In)38 b(the)g(curren)m(t)i(v)m(ersion)f(2)f(kinds)g(of)g(LNP)-104
1923 y(pac)m(k)m(ets)j(can)f(b)s(e)f(used.)69 b(The)40
b(\034rst)g(one)g(is)f(called)h(in-)-104 2035 y(tegrit)m(y)31
b(pac)m(k)m(ets,)g(whic)m(h)g(con)m(tain)h(no)e(adressing)g(infor-)-104
2148 y(mation,)c(and)e(is)f(used)g(for)g(broadcasting)i(pac)m(k)m(ets.)
39 b(The)-104 2261 y(second)30 b(one)g(is)f(called)i(the)f(addressing)g
(pac)m(k)m(et,)h(and)f(is)-104 2374 y(lik)m(e)42 b(an)f(in)m(tegrit)m
(y)i(pac)m(k)m(et)g(augmen)m(ted)h(with)e(adress-)-104
2487 y(ing)26 b(information,)j(including)e(a)f(source)g(and)h(a)f
(destina-)-104 2600 y(tion)35 b(address.)54 b(The)35
b(addressing)g(pac)m(k)m(et)h(pro)m(vides)f(an)-104 2713
y(UDP)21 b(lik)m(e)h(service,)h(whic)m(h)g(do)s(es)d(not)i(guaran)m
(tee)h(arriv)-5 b(al)-104 2826 y(of)32 b(sen)m(t)h(pac)m(k)m(ets,)h
(but)e(guaran)m(tees)i(errorfree)f(pac)m(k)m(ets.)-104
2939 y(F)-8 b(or)36 b(further)f(information)h(please)f(consult)h(the)f
(ab)s(o)m(v)m(e)-104 3052 y(men)m(tioned)d(news)f(group.)37
3165 y(T)-8 b(o)34 b(comm)m(unicate)h(with)e(a)f(PC)i(running)f(Lin)m
(ux,)i(a)-104 3277 y(deamon)k(called)g Fi(lnp)-5 b(d)48
b Fl(is)37 b(used.)64 b(Lnp)s(d)38 b(allo)m(ws)h(m)m(ulti-)-104
3390 y(ple)33 b(clien)m(ts)h(to)f(connect)h(to)f(an)g(R)m(CX)g(running)
h(legOS.)-104 3503 y(F)-8 b(urthermore,)33 b(a)d(library)h(called)h
(liblnp)f(exists,)f(so)g(ap-)-104 3616 y(plications)24
b(can)f(connect)h(with)g(remote)g(lnp)s(d)f(deamons.)-104
3903 y Fn(3)137 b(P)l(eripheral)45 b(devices)-104 4106
y Fl(LegOS)38 b(pro)m(vides)f(in)m(terfaces)g(to)f(the)h(v)-5
b(arious)37 b(devices)-104 4218 y(supplied)k(with)f(R)m(CX)g(bric)m(k,)
j(whic)m(h)e(includes)g(motor)-104 4331 y(con)m(trol,sensor)28
b(con)m(trol,sound)g(con)m(trol,)h(LCD)e(displa)m(y)-104
4444 y(con)m(trol,)32 b(and)f(button)g(con)m(trol.)-104
4688 y Fh(3.1)112 b(Moto)m(r)38 b(control)-104 4859 y
Fl(This)20 b(section)h(explains)g(the)f(w)m(a)m(y)i(motors/output)g(p)s
(orts)-104 4972 y(are)39 b(handled.)66 b(The)39 b(nature)g(of)f(the)h
(motors)g(are)g(also)-104 5085 y(bri\035y)31 b(discussed.)-104
5325 y Fm(3.1.1)100 b(The)33 b(moto)m(r)h(ha)m(rdw)m(a)m(re)-104
5497 y Fl(The)47 b(motors)g(are)g(con)m(trolled)h(b)m(y)f(memory)g
(mapp)s(ed)-104 5610 y(I/O.)28 b(All)f(3)h(motors)g(are)g(con)m
(trolled)i(b)m(y)e(writing)g(in)g(the)1922 153 y(b)m(yte)j(at)f
(address)h(0xF000.)2063 266 y(In)20 b(legOS)i(the)f(state)g(of)g(a)f
(motor)i(is)e(c)m(haraterised)j(b)m(y)1922 378 y(a)29
b(direction)h(and)g(a)f(sp)s(eed,)g(and)h(the)f(direction)i(setting)
1922 491 y(determines)j(the)f(motor)h(b)s(eha)m(viour)g(when)g(it)f
(reciev)m(es)1922 604 y(a)d(pulse.)41 b(Direction)32
b(forw)m(ard)g(corresp)s(onds)f(to)f(the)h(bit)1922 717
y(pattern)f(01,)g(rev)m(erse)f(to)h(10,)f(stop)g(to)h(00)f(and)g(brak)m
(e)h(to)1922 830 y(11.)58 b(When)36 b(in)h(brak)m(e)f(mo)s(de,)i(the)f
(motor)g(will)f(hinder)1922 943 y(rotation,)f(whereas)e(stop)g(mo)s(de)
g(allo)m(ws)g(the)h(motor)f(to)1922 1056 y(turn)d(freely)-8
b(.)40 b(F)-8 b(urthermore,)32 b(an)e(8)g(bit)g Fi(sp)-5
b(e)g(e)g(d)41 b Fl(and)30 b(an)f(8)1922 1169 y Fi(sum)34
b Fl(v)-5 b(ariable)28 b(are)g(used)f(to)g(con)m(trol)i(the)f
(frequency)f(b)m(y)1922 1282 y(wic)m(h)h(the)f(direction)i(bits)e(are)g
(written)h(to)f(the)h(memory)1922 1395 y(whic)m(h)j(con)m(trols)h(the)f
(motor.)1922 1635 y Fm(3.1.2)100 b(Moto)m(r)34 b(handler)g(function)
1922 1806 y Fl(The)d(motor)g(handler,)h Fi(dm_hand)5
b(ler)p Fl(,)30 b(is)g(called)h(b)m(y)g(the)1922 1919
y(system)21 b(timer)h(in)m(terrupt)i(handler,)h(and)d(it)g(implemen)m
(ts)1922 2032 y(Bresenham's)32 b(linear)h(dra)m(wing)h(algoritm.)46
b(The)32 b(3)g(mo-)1922 2145 y(tors)48 b(are)g(handled)h(in)f(turn.)94
b(In)48 b(the)g(motor)h(state,)1922 2258 y(the)34 b(sum)f(v)-5
b(ariable)35 b(is)e(incremen)m(ted)j(with)e(the)g(motors)1922
2371 y(sp)s(eed)d(setting.)44 b(If)31 b(the)g(sum)h(o)m(v)m(er\035o)m
(ws,)h(the)f(direction)1922 2484 y(bits)41 b(for)g(the)h(motor)g(will)f
(b)s(e)g(written)h(to)g(the)f(2)g(bits)1922 2597 y(con)m(trolling)d
(the)e(motor,)i(otherwise)e(zero)s(es)g(are)g(writ-)1922
2710 y(ten.)47 b(Th)m(us,)34 b(if)e(a)h(motor)g(has)g(a)f(sp)s(eed)h
(setting)g(of)f(255,)1922 2823 y(it)e(will)h(o)m(v)m(er\035o)m(w)h(ev)m
(ery)f(time,)g(and)f(the)h(motor)g(will)g(b)s(e)1922
2935 y(driv)m(en)g(ev)m(ery)g(millisecond.)1922 3176
y Fm(3.1.3)100 b(User)33 b(interface)f(to)h(moto)m(r)g(control)1922
3347 y Fl(The)28 b(motors)g(are)f(named)i(A,B,)e(and)h(C)f(corresp)s
(onding)1922 3460 y(to)21 b(output)h(p)s(ort)g(A,B)f(and)g(C)h(on)f
(the)h(R)m(CX)f(bric)m(k.)38 b(Eac)m(h)1922 3573 y(motor)24
b(\(or)f(output)i(p)s(ort\))e(is)g(con)m(trolled)i(b)m(y)e(the)h(2)f
(func-)1922 3686 y(tions)38 b Fi(motor_X_dir)47 b Fl(and)38
b Fi(motor_X_sp)-5 b(e)g(e)g(d)p Fl(,)42 b(where)1922
3799 y(X)26 b(is)g(a,b)h(or)g(c.)39 b Fi(Motor_X_dir)d
Fl(tak)m(es)27 b(an)g(en)m(umerated)1922 3912 y(t)m(yp)s(e)22
b(as)h(argumen)m(t,)j(whic)m(h)e(has)e(the)h(v)-5 b(alues)23
b Fi(o\033,fwd,r)-5 b(ev)1922 4025 y Fl(and)22 b Fi(br)-5
b(ake)p Fl(.)39 b Fi(Motor_X_sp)-5 b(e)g(e)g(d)33 b Fl(tak)m(es)21
b(an)h(in)m(teger)h(argu-)1922 4138 y(men)m(t)k(b)s(et)m(w)m(een)i
(MIN_SPEED)e(and)g(MAX_SPEED,)1922 4250 y(whic)m(h)h(is)e(0)g(and)h
(255)g(resp)s(ectiv)m(ely)-8 b(.)40 b(Using)26 b(these)h(func-)1922
4363 y(tions)44 b(up)s(dates)h(the)g(v)-5 b(ariables,)48
b(used)d(b)m(y)g(the)g(motor)1922 4476 y(handler.)c(Motors)29
b(are)g(initialised)h(b)m(y)f(calling)h(the)f(mo-)1922
4589 y(tor)40 b(sh)m(utdo)m(wn)i(function,)i(whic)m(h)d(just)e(set)h
(all)h(motor)1922 4702 y(directions)31 b(to)g Fi(o\033)p
Fl(.)1922 4945 y Fh(3.2)112 b(Senso)m(r)37 b(control)1922
5117 y Fl(This)42 b(section)g(explains)f(ho)m(w)i(the)f(sensor)g(v)-5
b(alues)41 b(are)1922 5230 y(sampled)25 b(b)m(y)f(the)g(on-c)m(hip)i
(A/D)e(con)m(v)m(erter,)j(to)d(pro)m(vide)1922 5343 y(v)-5
b(alues)30 b(on)h(the)f(R)m(CX)g(input)i(p)s(orts.)1835
6065 y(10)p eop
%%Page: 11 11
11 10 bop -104 -142 a Fj(3)91 b(PERIPHERAL)30 b(DEVICES)2026
b(3.2)91 b(Sensor)31 b(con)m(trol)p -104 -105 3969 4
v -104 153 a Fm(3.2.1)100 b(The)33 b(on-chip)h(A/D)g(converter)-104
324 y Fl(The)21 b(H8/3292)g(includes)g(a)f(10-bit)h(successiv)m
(e-appro)m(xima-)-104 437 y(tions)39 b(A/D)g(con)m(v)m(erter)i(with)e
(a)g(selection)h(of)e(up)i(to)f(8)-104 550 y(analog)33
b(input)f(c)m(hannels.)47 b(The)32 b(8)g(analog)h(input)f(c)m(han-)-104
663 y(nels)43 b(are)g(named)h(AN0-AN7.)78 b(The)43 b(A/D)g(con)m(v)m
(erter)-104 776 y(has)d(a)h(set)f(of)g(memory)h(mapp)s(ed)g(registers,)
i(mapp)s(ed)-104 889 y(to)34 b(the)h(addresses)f(0xFFE0-0xFFE7.)54
b(4)34 b(16)g(bit)h(data)-104 1002 y(registers)25 b(named)h
(ADDRA-ADDRD)d(con)m(tain)j(the)f(re-)-104 1115 y(sult)k(of)g(A/D)h
(con)m(v)m(ersion)h(of)e(up)g(to)h(4)f(input)h(c)m(hannels.)-104
1228 y(The)35 b(data)h(registers)f(are)g(read)g(only)g(and)g(are)h
(split)e(in)-104 1340 y(a)46 b(high)h(and)g(a)g(lo)m(w)g(part)g(when)g
(mapp)s(ed)g(to)g(mem-)-104 1453 y(ory)-8 b(.)65 b(The)39
b(con)m(trol)h(status)e(register)h(\(ADCSR\))f(is)g(an)-104
1566 y(8)e(bit)g(read/writeable)i(register)f(used)f(for)f(con)m
(trolling)-104 1679 y(the)24 b(A/D)g(con)m(v)m(erter.)40
b(ADCSR)24 b(is)f(mapp)s(ed)i(to)f(address)-104 1792
y(0xFFE8.)54 b(When)35 b(a)g(con)m(v)m(ersion)h(of)f(an)g(anlaog)g
(signal)-104 1905 y(has)28 b(\034nished,)g(an)g(in)m(terrupt)i(\(ADI\))
d(can)h(b)s(e)f(requested)-104 2018 y([1].)-104 2258
y Fm(3.2.2)100 b(Initialisation)-104 2430 y Fl(The)44
b(sensors)g(pro)m(vide)h(data)f(for)f(the)i(3)e(input)i(p)s(orts)-104
2542 y(on)39 b(the)f(R)m(CX.)h(The)g(sensor)f(v)-5 b(alues)38
b(are)h(obtained)g(b)m(y)-104 2655 y(con)m(v)m(erting)32
b(analog)f(v)-5 b(alues)30 b(on)g(the)g(sensors)g(to)g(digital)-104
2768 y(n)m(um)m(b)s(ers)39 b(with)g(the)g(on-c)m(hip)h(A/D)e(con)m(v)m
(erter.)65 b(Only)-104 2881 y(the)45 b(\034rst)f(4)g(of)g(the)h(8)f(p)s
(ossible)g(input)h(c)m(hannels)g(are)-104 2994 y(used,)27
b(and)g(the)g(setup)f(is)g(as)g(follo)m(ws)h(:)38 b(AN0)26
b(is)f(used)i(for)-104 3107 y(input)38 b(p)s(ort)g(3)g(\(on)g(the)g(R)m
(CX\),)g(AN1)f(for)g(input)i(p)s(ort)-104 3220 y(2,)31
b(AN2)g(for)g(input)g(p)s(ort)g(3)g(and)h(AN4)e(for)h(reading)h(the)
-104 3333 y(battery)e(lev)m(el.)40 b(The)30 b(A/D)f(con)m(v)m(erter)i
(is)d(initialised)i(b)m(y)-104 3446 y(the)h(function)g
Fk(ds_init)f Fl(during)h(k)m(ernel)g(initialisation.)37
3559 y(First)26 b(the)g(p)s(o)m(w)m(er)g(output)h(to)f(the)g(3)f
(sensor)h(p)s(orts)f(is)-104 3672 y(activ)-5 b(ated,)27
b(and)e(the)g(A/D)f(con)m(v)m(erter)j(in)m(terrupt)f(\(ADI\))-104
3785 y(v)m(ector)43 b(is)f(set)g(to)g(p)s(oin)m(t)h(to)g
Fk(ds_handler)p Fl(.)76 b(External)-104 3897 y(triggering)35
b(of)e(the)g(A/D)g(is)g(disabled,)i(and)e(the)h(status)-104
4010 y(con)m(trol)39 b(register)g(ADCSR)e(is)g(set.)63
b(This)38 b(setting)g(im-)-104 4123 y(plies)25 b(singlemo)s(de)i(op)s
(eration)f(with)g(a)f(con)m(v)m(ersion)i(time)-104 4236
y(of)38 b(266)g(states.)63 b(As)37 b(the)h(micro)s(con)m(troller)i(is)d
(running)-104 4349 y(with)25 b(a)e(system)h(clo)s(c)m(k)g(of)f(16)h
(Mhz,)i(eac)m(h)f(of)e(the)h(4)g(c)m(han-)-104 4462 y(nels)g(are)g
(estimated)h(to)g(b)s(e)e(sampled)i(8)f(to)g(10)g(times)h(p)s(er)-104
4575 y(millisecond,)f(when)d(the)g(in)m(terrupt)i(handling)f(o)m(v)m
(erhead)-104 4688 y(is)30 b(tak)m(en)h(in)m(to)g(accoun)m(t.)-104
4928 y Fm(3.2.3)100 b(The)33 b(A/D)h(interrupt)h(handler)-104
5099 y Fl(After)47 b(initialisation,)54 b(the)48 b(A/D)f(con)m(v)m
(erter)i(p)s(erio)s(di-)-104 5212 y(cally)36 b(samples)h(the)f(c)m
(hannels,)j(and)e(generates)g(an)f(in-)-104 5325 y(terrupts)24
b(handled)h(b)m(y)g Fk(ds_handler)p Fl(.)37 b(The)24
b(job)f(of)30 b Fk(ds_-)-104 5438 y(handler)g Fl(is)g(to)h(alternate)h
(b)s(et)m(w)m(een)g(c)m(hannels,)g(handle)-104 5551 y(rotation)47
b(sensors)f(and)g(activ)-5 b(ate/deactiv)g(ate)49 b(output)-104
5664 y(p)s(o)m(w)m(er)32 b(to)e(the)h(sensors.)2063 153
y(The)39 b(v)-5 b(alue)39 b(of)f(the)g(global)i(v)-5
b(ariable)39 b Fk(ds_channel)1922 266 y Fl(indicates)21
b(the)g(c)m(hannel)i(whic)m(h)f(n)m(um)m(b)s(er)g(has)e(b)s(een)h(sam-)
1922 378 y(pled,)k(and)f(the)g(corresp)s(onding)g(bit)g(n)m(um)m(b)s
(er)h(in)f Fk(ds_ac-)1922 491 y(tivation)32 b Fl(indicates)i(if)e(this)
g(c)m(hannel)j(needs)d(a)h(p)s(o)m(w)m(er)1922 604 y(output)23
b(to)g(function)h(prop)s(erly)-8 b(.)38 b(If)22 b(this)h(is)f(the)h
(case,)h(the)1922 717 y(p)s(o)m(w)m(er)45 b(output)f(to)g(the)f(sensor)
h(is)f(activ)-5 b(ated.)81 b(Some)1922 830 y(of)39 b(the)h(sensors)f
(are)h(activ)m(e)g(sensors,)h(needing)g(p)s(o)m(w)m(er)1922
943 y(to)c(op)s(erate,)i(but)f(the)f(p)s(o)m(w)m(er)h(m)m(ust)g(b)s(e)f
(cut)g(o\033)g(when)1922 1056 y(sampling)43 b(v)-5 b(alues.)76
b(The)42 b(p)s(o)m(w)m(er)i(w)m(as)e(cut)h(o\033)f(in)g(the)1922
1169 y(previous)g(call)h(of)f(the)h(handler)g(and)g(m)m(ust)g
(therefore)1922 1282 y(b)s(e)31 b(turned)h(on)f(after)g(the)g
(sampling.)44 b(This)31 b(is)g(done)g(b)m(y)1922 1395
y(setting)26 b(the)h(bit)f(corresp)s(onding)i(to)e(the)g(c)m(hannel)i
(n)m(um-)1922 1508 y(b)s(er)33 b(in)g(I/O)g(POR)-8 b(T)33
b(6.)49 b(The)33 b(bits)g(in)g Fk(ds_activation)1922
1620 y Fl(are)f(set)f(with)h(the)g(inline)g(functions)g
Fk(ds_passive)f Fl(and)1922 1733 y Fk(ds_active)h Fl(de\034ned)i(in)f
Fi(include/dsensor.h)p Fl(.)48 b(The)33 b(ro-)1922 1846
y(tation)i(sensors)f(use)h(the)g(v)-5 b(ariable)35 b
Fk(ds_rotation)f Fl(and)1922 1959 y(the)e(inline)g(functions)g
Fk(ds_rotation_on)f Fl(and)h Fk(ds_ro-)1922 2072 y(tation_off)p
Fl(.)2063 2185 y(If)40 b(rotation)i(sensor)f(supp)s(ort)g(is)g
(included)h(in)f(the)1922 2298 y(k)m(ernel,)53 b(and)47
b(the)h(curren)m(t)h(c)m(hannel)g(has)f(a)f(rotation)1922
2411 y(sensor,)30 b(the)h(rotation)g(sensor)f(handler)h(is)f(next)g
(called.)1922 2524 y(R0-r3)36 b(are)h(sa)m(v)m(ed)h(b)s(efore)e(the)h
(call,)i(and)e(restored)h(af-)1922 2637 y(terw)m(ards.)2063
2750 y(The)j(next)h(c)m(hannel)g(to)f(b)s(e)g(sampled)h(is)f(selected,)
1922 2862 y(and)d(the)g(p)s(o)m(w)m(er)h(output)g(to)e(this)h(c)m
(hannel)h(is)e(cut)h(o\033.)1922 2975 y(A)44 b(busy)g(w)m(ait)h(for)f
(32)h(states)f(is)g(done)h(to)f(allo)m(w)i(the)1922 3088
y(sensor)25 b(to)h(settle)g(up)s(on)g(the)g(p)s(o)m(w)m(er)h(deactiv)-5
b(ation.)40 b(The)1922 3201 y(ADCSR)34 b(is)g(adjusted,)i(so)e(the)g
(new)h(c)m(hannel)h(is)e(to)h(b)s(e)1922 3314 y(sampled)c(next)f(and)h
Fk(ds_handler)f Fl(returns.)1922 3554 y Fm(3.2.4)100
b(Rotation)34 b(senso)m(rs)1922 3726 y Fl(Rotation)c(sensors)f(ha)m(v)m
(e)h(their)g(o)m(wn)g(handler)h(function)1922 3839 y(named)21
b Fk(ds_rotation)p Fl(,)h(whic)m(h)g(is)e(called)h(b)m(y)g
Fk(ds_handler)p Fl(.)1922 3952 y(The)32 b(v)-5 b(ariables)33
b(men)m(tioned)h(here)f(are)f(actually)h(arra)m(ys)1922
4065 y(with)42 b(3)g(elemen)m(ts,)k(where)d(the)f(elemen)m(t)i(used)e
(corre-)1922 4177 y(sp)s(onds)30 b(to)g(the)h(curren)m(t)h(c)m(hannel)g
(n)m(um)m(b)s(er.)2063 4290 y(The)48 b(rotation)g(sensor)g(is)f
(calibrated)i(b)m(y)e(calling)1922 4403 y Fk(ds_rotation_set)p
Fl(,)34 b(whic)m(h)h(sets)f(the)g(curren)m(tly)h(sam-)1922
4516 y(pled)21 b(v)-5 b(alue)20 b(as)g(starting)h(p)s(oin)m(t,)i(and)e
(afterw)m(ards)g(a)g(state)1922 4629 y(mac)m(hine)j(is)e(used)g(for)h
(calculating)h(rotations.)39 b(The)22 b(ra)m(w)1922 4742
y(v)-5 b(alues)26 b(sampled)g(are)h(mapp)s(ed)f(to)g(the)h(range)f
(0x0-0xF,)1922 4855 y(and)43 b(this)f(v)-5 b(alue)43
b(corresp)s(onds)g(to)f(a)h(state.)77 b(Eac)m(h)44 b(of)1922
4968 y(the)37 b(16)h(states)f(is)f(asso)s(ciated)i(with)f(a)g(v)-5
b(alue)38 b(b)s(et)m(w)m(een)1922 5081 y(-1)30 b(and)g(3.)40
b(These)30 b(v)-5 b(alues)30 b(are)g(used)f(to)h(measure)h(when)1922
5194 y(the)f(rotations)h(coun)m(ter)h(should)e(b)s(e)g(increased)h(b)m
(y)f(1)g(or)1922 5307 y(decreased)38 b(b)m(y)g(1.)62
b(I)37 b(will)h(not)g(go)f(in)m(to)i(the)f(details)g(of)1922
5419 y(the)24 b(algorithm,)i(and)e(the)g(source)g(can)g(b)s(e)g(found)g
(in)f Fi(ker-)1922 5532 y(nel/dsensor.c)p Fl(.)1835 6065
y(11)p eop
%%Page: 12 12
12 11 bop -104 -142 a Fj(3)91 b(PERIPHERAL)30 b(DEVICES)1785
b(3.4)91 b(LCD)31 b(displa)m(y)g(con)m(trol)p -104 -105
3969 4 v -104 153 a Fm(3.2.5)100 b(User)33 b(interface)f(to)i(senso)m
(rs)-104 324 y Fl(As)43 b(the)g(data)h(registers)g(of)f(the)h(A/D)f
(con)m(v)m(erter)i(are)-104 437 y(memory)23 b(mapp)s(ed,)h(their)f(v)-5
b(alues)21 b(are)i(read)f(directly)h(us-)-104 550 y(ing)e(the)f(macros)
h Fk(SENSOR_1)p Fl(,)h Fk(SENSOR_2)e Fl(and)h Fk(SENSOR_3)-104
663 y Fl(de\034ned)38 b(in)g Fi(include/dsensor.h)p Fl(.)61
b(These)38 b(are)f(the)h(ra)m(w)-104 776 y(digital)e(v)-5
b(alues,)37 b(and)e(therefore)i(wrapp)s(er)f(macros)f(are)-104
889 y(de\034ned)c(for)g(the)f(v)-5 b(arious)31 b(sensor)f(t)m(yp)s(es.)
37 1002 y(3)45 b(ligh)m(t)h(sensor)e(macros,)49 b Fk(LIGHT_1)p
Fl(-)p Fk(LIGHT_3)44 b Fl(are)-104 1115 y(de\034ned)36
b(in)f(terms)f(of)h(the)g(macro)g Fk(LIGHT)p Fl(.)g Fk(LIGHT_1)f
Fl(is)-104 1228 y(used)45 b(for)g(reading)h(the)g(v)-5
b(alue)45 b(of)g(a)g(ligh)m(t)h(sensor)f(on)-104 1340
y(input)26 b(p)s(ort)f(1)f(and)i(so)e(forth.)39 b(The)25
b Fk(LIGHT)g Fl(macro)g(maps)-104 1453 y(the)h(ra)m(w)h(ligh)m(t)f
(sensor)g(sampling)g(to)g(a)g(v)-5 b(alue)25 b(from)h(zero)-104
1566 y(to)h(ligh)m(t)h(max/white,)h(where)f(zero)f(is)g(darkness/blac)m
(k.)37 1679 y(In)k(the)g(same)g(w)m(a)m(y)-8 b(,)32 b(the)f(touc)m(h)h
(sensors)f(v)-5 b(alues)30 b(are)-104 1792 y(pro)m(vided)42
b(b)m(y)f(the)h(macros)f Fk(TOUCH_1)p Fl(-)p Fk(TOUCH_3)p
Fl(.)72 b(The)-104 1905 y(v)-5 b(alues)22 b(of)f(the)i(touc)m(h)g
(sensors)e(are)i(mapp)s(ed)f(to)g(a)g(binary)-104 2018
y(v)-5 b(alue)45 b(whic)m(h)g(is)f(either)h(0)g(\(not)g(activ)-5
b(ated/touc)m(hed\))-104 2131 y(or)37 b(1)g(\(activ)-5
b(ated/touc)m(hed\).)65 b(The)37 b(ra)m(w)h(battery)g(lev)m(el)-104
2244 y(v)-5 b(alue)28 b(is)g(pro)m(vided)h(b)m(y)f(the)h(macro)f
Fk(BATTERY)p Fl(.)g(The)h(v)-5 b(al-)-104 2357 y(ues)43
b(of)f(the)h(rotation)h(sensors)f(are)g(optained)h(b)m(y)f(the)-104
2470 y(macros)21 b Fk(ROTATION_1)p Fl(-)p Fk(ROTATION_3)p
Fl(,)h(whic)m(h)f(expand)g(to)-104 2582 y(indexing)31
b(in)m(to)g(the)g Fk(ds_rotations)f Fl(arra)m(y)-8 b(.)-104
2826 y Fh(3.3)112 b(Sound)37 b(control)-104 2997 y Fm(3.3.1)100
b(The)33 b(sound)i(handler)-104 3169 y Fl(Con)m(trol)45
b(of)f(the)g(sound)f(capabilities)i(is)f(handled)g(b)m(y)-104
3282 y(the)35 b(sound)g(handler.)54 b(The)35 b(sound)g(handler)h(w)m
(orks)e(b)m(y)-104 3395 y(pla)m(ying)39 b(notes)g(and)f(pla)m(ying)i
(pauses,)g(ie.)64 b(no)38 b(sound.)-104 3508 y(A)i(note)g(is)g(a)g
(structure)g(whic)m(h)i(sp)s(eci\034es)d(the)i(no)s(de's)-104
3621 y(pitc)m(h)d(and)f(the)g(no)s(de's)f(length.)60
b(V)-8 b(alid)37 b(no)s(de)g(lengths)-104 3734 y(are)23
b Fi(whole)p Fl(,)p Fi(half)p Fl(,)i Fi(quarter)33 b
Fl(and)23 b Fi(eight)p Fl(,)i(where)e(the)g(length)-104
3847 y(of)38 b(1/16th.)67 b(note)39 b(is)g(200)g(millisecondss.)66
b(The)39 b(pitc)m(h)-104 3959 y(sp)s(eci\034ed)c(will)f(b)s(e)g
(translated)h(to)g(a)f(frequency)g(b)m(y)g(in-)-104 4072
y(dexing)d(in)m(to)g(an)g(arra)m(y)g(called)g Fk(pitch2freq)p
Fl(.)37 4185 y(The)f(sound)g(handler)h(is)e(driv)m(en)i(b)m(y)f(calls)f
(from)h(the)-104 4298 y(system)k(time)h(handler.)54 b(The)35
b(sound)g(handler)g(mainly)-104 4411 y(w)m(orks)45 b(with)h(2)f(v)-5
b(ariables,)50 b Fk(dsound_next_note)44 b Fl(and)-104
4524 y Fk(dsound_next_time)p Fl(,)k(and)d(a)g(data)h(arra)m(y)f(of)g
(no)s(des.)-104 4637 y(The)d(handler)h(function)g(starts)f(b)m(y)g(c)m
(hec)m(king)i(if)d(note)-104 4750 y(should)34 b(b)s(e)g(pla)m(y)m(ed,)i
(b)m(y)e(comparing)i(the)e(system)f(time)-104 4863 y(with)44
b Fk(dsound_next_time)p Fl(.)81 b(If)42 b(the)i(system)g(time)g(is)-104
4976 y(greater)36 b(than)f Fk(dsound_next_note)p Fl(,)h(either)f(an)g
(in)m(ter-)-104 5089 y(note)25 b(\(pause\))g(or)g(a)f(note)h(is)f(pla)m
(y)m(ed,)j(dep)s(ending)f(on)e(the)-104 5201 y(v)-5 b(alue)28
b(of)g(the)h(in)m(ternote)g(\035ag.)41 b(An)28 b(in)m(ternote)i(is)d
(pla)m(y)m(ed)-104 5314 y(ev)m(ery)34 b(second)g(time,)h(and)e(has)h(a)
f(default)h(duration)h(of)-104 5427 y(15)i(milliseconds.)59
b(An)37 b(in)m(ternote)h(do)s(es)e(not)h(use)f(data)-104
5540 y(from)i(the)h(no)s(de)f(arra)m(y)-8 b(.)66 b(The)38
b Fk(dsound_next_time)g Fl(is)-104 5653 y(up)s(dated,)31
b(and)g(the)g(in)m(ternote)h(\035ag)f(is)f(reset.)2063
153 y(After)g(a)h(no)s(de)g(has)g(b)s(een)g(pla)m(y)m(ed)h
Fk(dsound_next_-)1922 266 y(time)47 b Fl(and)i Fk(dsound_next_note)e
Fl(are)h(up)s(dated,)53 b(and)1922 378 y(the)33 b(in)m(ternote)i
(\035ag)e(is)g(set)f(to)i(indicate)g(that)f(the)g(next)1922
491 y(note)e(to)f(pla)m(y)h(is)f(an)h(in)m(ternote.)1922
731 y Fm(3.3.2)100 b(Ha)m(rdw)m(a)m(re)34 b(issues)1922
903 y Fl(I)23 b(will)h(not)g(go)g(in)m(to)g(details)g(of)f(exactly)h
(ho)m(w)g(the)g(sounds)1922 1016 y(are)d(created,)i(but)e(I)f(will)h
(list)f(the)h(basic)g(principles.)38 b(The)1922 1129
y(source)31 b(can)f(b)s(e)g(found)h(in)f Fi(kernel/dsound.c)p
Fl(.)2063 1242 y(A)f(note)g(is)g(pla)m(y)m(ed)i(b)m(y)e(calling)h(the)g
(inline)g(function)1922 1355 y Fk(play_freq)p Fl(,)23
b(whic)m(h)f(in)f(turns)h(comm)m(unicates)h(with)f(the)1922
1468 y(hardw)m(are)29 b(through)f(memory)g(mapp)s(ed)g(I/O.)f(Channel)
1922 1581 y(zero)45 b(of)g(the)g(8)g(bit)g(on-c)m(hip)i(timer)e(mo)s
(dule)h(is)e(used)1922 1693 y(for)30 b(pla)m(ying)i(the)e(di\033eren)m
(t)i(sound)f(frequencies)f(on)h(the)1922 1806 y(sp)s(eak)m(er.)2063
1919 y(The)41 b(sounds)g(are)g(created)h(b)m(y)f(letting)h(the)f(timer)
1922 2032 y(generate)j(signals)g(to)f(the)g(sp)s(eak)m(er.)80
b(The)43 b(argumen)m(t)1922 2145 y(to)34 b Fk(play_freq)g
Fl(is)g(a)h(16)f(bit)h(frequency)-8 b(,)36 b(of)e(whic)m(h)i(the)1922
2258 y(MSB)30 b(b)m(yte)g(is)g(used)g(to)g(decide)h(the)f(clear)h(v)-5
b(alue)30 b(of)g(the)1922 2371 y(timer,)g(and)f(the)g(LSB)g(b)m(yte)g
(is)f(used)h(to)g(select)g(in)m(ternal)1922 2484 y(clo)s(c)m(k)h(input)
h(to)g(the)g(timer.)1922 2724 y Fm(3.3.3)100 b(User)33
b(interface)f(fo)m(r)h(the)h(sound)h(driver)1922 2895
y Fl(A)45 b(pro)s(cess)g(pla)m(ys)h(sounds)g(b)m(y)f(making)i(an)e
(arra)m(y)i(of)1922 3008 y(no)s(des,)30 b(and)h(caling)h
Fk(dsound_play)e Fl(with)h(the)g(arra)m(y)g(as)1922 3121
y(parameter.)44 b(Th)m(us)32 b(the)g(task)e(whic)m(h)j(called)f
Fk(dsound_-)1922 3234 y(play)38 b Fl(can)g(con)m(tin)m(ue)j(doing)e
(other)g(things,)h(while)f(the)1922 3347 y(system)30
b(timer)h(in)m(terrupts)h(driv)m(e)f(the)f(sound)h(driv)m(er.)2063
3460 y(The)36 b(sound)h(pla)m(ying)g(is)f(stopp)s(ed)g(when)h(a)f
Fi(nul)5 b(l)45 b Fl(is)1922 3573 y(encoun)m(tered)e(in)d(the)h(no)s
(de)g(arra)m(y)-8 b(.)72 b(This)40 b(mak)m(es)h(the)1922
3686 y(handler)22 b(function)h(fall)e(through)i(to)f(a)f(call)h(to)g
Fk(dsound_-)1922 3799 y(stop)p Fl(.)38 b Fk(Dsound_stop)22
b Fl(pla)m(ys)h(a)h(pause,)g(and)g(then)g(resets)1922
3912 y(the)36 b(sound)f(v)-5 b(ariables.)56 b(Only)35
b(one)h(pro)s(cess)f(at)g(a)h(time)1922 4025 y(can)31
b(use)f(the)g(sound)h(device.)2063 4138 y(An)20 b(arra)m(y)-8
b(,)24 b Fk(dsound_system_sounds)19 b Fl(of)h(prede\034ned)1922
4250 y(systems)f(sounds)i(exists,)g(but)g(curren)m(tly)h(only)e(one)h
(sound,)1922 4363 y(the)31 b(system)e(b)s(eep,)i(has)f(b)s(een)h
(de\034ned.)1922 4607 y Fh(3.4)112 b(LCD)36 b(displa)m(y)g(control)1922
4778 y Fm(3.4.1)100 b(The)33 b(LCD)h(handler)1922 4950
y Fl(The)i(LCD)g(displa)m(y)g(is)f(con)m(trolled)i(b)m(y)f(the)g(LCD)g
(han-)1922 5063 y(dler,)55 b(driv)m(en)50 b(b)m(y)f(timer)h(in)m
(terrupts.)99 b(The)50 b(handler)1922 5176 y(function)35
b Fk(lcd_refresh_next_byte)f Fl(is)g(called)h(ev)m(ery)1922
5289 y(6th)23 b(milliseconds.)38 b(As)22 b(the)h(LCD)g(data)g(is)f(9)g
(b)m(ytes)h(long,)1922 5402 y(this)g(results)g(in)g(a)g(complete)h
(refresh)f(ev)m(ery)g(54)h(millisec-)1922 5514 y(ond,)31
b(or)f(18-19)h(refreshes)f(p)s(er)h(second.)1835 6065
y(12)p eop
%%Page: 13 13
13 12 bop -104 -142 a Fj(3)91 b(PERIPHERAL)30 b(DEVICES)2003
b(3.5)91 b(Button)31 b(con)m(trol)p -104 -105 3969 4
v 37 153 a Fl(2)21 b(arra)m(ys)h(are)g(used)f(for)g(the)g(LCD)h(data,)i
Fk(display_-)-104 266 y(memory)c Fl(de\034ned)h(b)m(y)g(the)g(R)m(OM)f
(and)g Fk(lcd_shadow)g Fl(whic)m(h)-104 378 y(con)m(tains)28
b(the)g(last)f(displa)m(y)m(ed)h(b)m(ytes.)40 b(The)27
b(shado)m(w)h(ar-)-104 491 y(ra)m(y)35 b(is)f(used)h(when)g(refreshing)
g(the)g(displa)m(y)-8 b(,)37 b(to)d(c)m(hec)m(k)-104
604 y(if)f(a)g(refresh)g(is)g(neccessary)-8 b(.)50 b(Only)33
b(altered)i(b)m(ytes)e(will)-104 717 y(b)s(e)d(refreshed.)-104
957 y Fm(3.4.2)100 b(User)33 b(interface)f(to)i(the)f(LCD)h(displa)m(y)
-104 1129 y Fl(A)40 b(man)m(ual)i(refresh)e(can)g(b)s(e)g(done)h(b)m(y)
g(calling)h Fk(lcd_-)-104 1242 y(refresh)p Fl(,)33 b(whic)m(h)g(will)g
(redispla)m(y)g(all)g(9)f(b)m(ytes)g(in)h Fk(dis-)-104
1355 y(play_memory)p Fl(.)37 1468 y(In)h(the)g(\034le)g
Fi(include/c)-5 b(onio.h)41 b Fl(more)35 b(functions)f(for)-104
1581 y(user)23 b(con)m(trol)h(of)e(the)h(LCD)g(displa)m(y)g(are)f
(declared.)40 b(This)-104 1693 y(includes)h Fk(cputs)g
Fl(for)f(displa)m(ying)i(strings)f(and)g Fk(cputw)-104
1806 y Fl(for)46 b(displa)m(ying)g(hexadecimal)i(w)m(ords.)87
b(These)46 b(func-)-104 1919 y(tions)22 b(are)h(de\034ned)g(in)g(terms)
f(of)29 b Fk(cputc_native)p Fl(,)23 b(whic)m(h)-104 2032
y(displa)m(ys)k(single)g(hex)g(n)m(um)m(b)s(ers)h(and)f
Fk(cputc)g Fl(whic)m(h)h(dis-)-104 2145 y(pla)m(ys)42
b(single)g(ASCI)s(I)e(v)-5 b(alues.)75 b(F)-8 b(urthermore,)47
b Fk(cls)41 b Fl(is)-104 2258 y(pro)m(vided)32 b(for)e(clearing)h(the)g
(displa)m(y)-8 b(.)-104 2501 y Fh(3.5)112 b(Button)38
b(control)-104 2673 y Fm(3.5.1)100 b(The)33 b(button)i(handler)-104
2845 y Fl(The)29 b Fi(dkey_hand)5 b(ler)39 b Fl(is)28
b(called)i(from)e(the)h(system)f(time)-104 2958 y(handler.)50
b(The)34 b(handler)g(is)f(deb)s(ounced)i(whic)m(h)f(means)-104
3070 y(that)39 b(the)g(button)h(state)f(only)f(will)h(b)s(e)g(c)m(hec)m
(k)m(ed)h(after)-104 3183 y(a)45 b(certain)g(deb)s(ounce)h(timer)f(has)
g(elapsed,)k(to)44 b(a)m(v)m(oid)-104 3296 y(reading)e(a)e(push)h(on)g
(a)g(button)g(sev)m(eral)g(times.)72 b(The)-104 3409
y(deb)s(ounce)34 b(timer)f(is)g(set)f(to)h(100)g(ms.)48
b(Ev)m(ery)33 b(time)g(the)-104 3522 y(handler)40 b(function)f(is)g
(called)g(the)g(deb)s(ounce)h(timer)f(is)-104 3635 y(c)m(hec)m(k)m(ed,)
51 b(and)46 b(only)f(if)g(it)g(equals)g(zero,)50 b(the)c(button)-104
3748 y(state)29 b(will)h(b)s(e)f(handled.)41 b(Otherwise)30
b(the)g(handler)g(just)-104 3861 y(returns)h(\(b)s(ounces)g(bac)m(k\).)
-104 4101 y Fm(3.5.2)100 b(Ha)m(rdw)m(a)m(re)34 b(issues)-104
4272 y Fl(The)25 b(buttons)f(are)g(connected)i(to)e(the)h(I/O)e(p)s
(orts)h(in)g(the)-104 4385 y(follo)m(wing)39 b(w)m(a)m(y)f(:)53
b(The)38 b Fi(on/o\033)56 b Fl(button)38 b(is)f(connected)-104
4498 y(to)24 b(bit)g(1)f(of)h(I/O)f(p)s(ort)h(4,)h(the)f
Fi(run)30 b Fl(button)25 b(is)e(connected)-104 4611 y(to)k(bit)g(2)g
(of)f(p)s(ort)h(4,)h(the)f Fi(view)37 b Fl(button)27
b(to)g(bit)g(6)g(of)g(p)s(ort)-104 4724 y(7)e(and)h(the)f
Fi(pr)-5 b(gm)33 b Fl(button)26 b(to)f(bit)g(7)g(of)g(p)s(ort)g(7.)39
b(The)26 b(v)-5 b(al-)-104 4837 y(ues)26 b(of)f(these)h(4)g(bits)f(are)
h(in)m(v)m(erted)i(and)e(used)g(to)g(form)g(a)-104 4950
y(4)e(bit)g(bitmask.)39 b(The)25 b(v)-5 b(ariable)24
b Fk(dkey_multi)g Fl(holds)g(the)-104 5063 y(last)h(used)g(bit)h(mask,)
g(and)g Fk(dkey)f Fl(holds)g(the)h(curren)m(t)g(bit)-104
5176 y(mask)e(iden)m(tifying)i(the)f(button\(s\))h(pressed.)39
b(If)30 b Fk(dkey_-)-104 5289 y(multi)36 b Fl(and)h Fk(dkey)f
Fl(are)h(equal,)i Fk(dkey)d Fl(is)g(not)h(up)s(dated.)-104
5402 y(Otherwise,)d(b)s(oth)e(the)h(curren)m(t)h(bit)f(mask)e(is)h
(assigned)-104 5514 y(to)27 b(b)s(oth)f(v)-5 b(ariables,)28
b(and)f(the)g(deb)s(ounce)g(timer)g(is)f(reset)1922 153
y(to)f(100.)40 b(Th)m(us)26 b(the)f(v)-5 b(ariable)26
b Fk(dkey)f Fl(holds)h(the)g(informa-)1922 266 y(tion)33
b(ab)s(out)g(the)h(buttons)f(whic)m(h)h(ha)m(v)m(e)g(b)s(een)f
(pressed,)1922 378 y(and)43 b(it)g(is)f(the)h(v)-5 b(alue)43
b(of)f(this)h(v)-5 b(ariable)43 b(whic)m(h)h(is)e(re-)1922
491 y(turned)31 b(b)m(y)h Fk(getchar)p Fl(.)1922 731
y Fm(3.5.3)100 b(The)33 b(button)i(user)f(interface)1922
903 y Fl(The)21 b(user)f(in)m(terface)i(for)e(buttons)h(is)e(the)i
(function)g Fk(getchar)p Fl(,)1922 1016 y(whic)m(h)28
b(w)m(aits)g(un)m(til)g(a)f(button)h(is)f(pressed,)g(and)h(returns)1922
1129 y(the)33 b(v)-5 b(alue)32 b(of)g(the)h(button)g(pressed.)47
b(The)33 b(button)g(v)-5 b(al-)1922 1242 y(ues)29 b(are)g(de\034ned)h
(b)m(y)g(the)f(follo)m(wing)h(macros)g(:)40 b Fi(KEY_-)1922
1355 y(ONOFF)p Fl(,)20 b Fi(KEY_R)n(UN)p Fl(,)g Fi(KEY_VIEW)p
Fl(,)h Fi(KEY_PR)n(GM)1922 1468 y Fl(and)28 b Fi(KEY_ANY)p
Fl(.)h(The)f(v)-5 b(alues)28 b(can)g(b)s(e)f(bit)m(wise)i
Fi(OR)-5 b(e)g(d)1922 1581 y Fl(to)30 b(detect)i(m)m(ultiple)g(button)f
(presses.)1835 6065 y(13)p eop
%%Page: 14 14
14 13 bop -104 -142 a Fj(References)3137 b(References)p
-104 -105 3969 4 v -104 153 a Fn(References)-104 356
y Fl([1])46 b Fi(Hitachi)f(Single-Chip)g(Micr)-5 b(o)g(c)g(omputer)47
b(H8/3297)37 468 y(Series)33 b(har)-5 b(dwar)g(e)33 b(manual)p
Fl(.)-104 656 y([2])46 b Fi(http://news.lugnet.c)-5 b(om/r)g(ob)g
(otics/r)g(cx/le)g(gos/?n=788)p Fl(.)-104 844 y([3])46
b(Mic)m(hael)k(Ben-Ari.)98 b Fi(Principles)50 b(of)f(Concurr)-5
b(ent)37 957 y(Pr)g(o)g(gr)g(amming)p Fl(.)155 b(Pren)m(tice-Hall)71
b(In)m(ternational)37 1070 y(Inc.,)30 b(1982.)-104 1257
y([4])46 b(M.)68 b(K.)g(Christiansen)i(M.)d(H.)h(P)m(edersen)i(and)37
1370 y(T.)51 b(Gl\346sner.)102 b(Solving)51 b(the)g(priorit)m(y)h(in)m
(v)m(ersion)37 1483 y(problem)i(in)f(legos.)109 b(T)-8
b(ec)m(hnical)55 b(rep)s(ort,)k(A)m(UC,)37 1596 y(2000.)-104
1784 y([5])46 b(Kek)m(oa)63 b(Proudfo)s(ot.)138 b(Rcx)62
b(in)m(ternals.)138 b(T)-8 b(ec)m(h-)37 1896 y(nical)69
b(rep)s(ort,)78 b(h)m(ttp://graphics.stanford.edu/-)37
2009 y(k)m(ek)m(oa/rcx,)31 b(1998-1999.)-104 2197 y([6])46
b(L.)31 b(Christensen)g(S.)g(T.)f(P)m(edersen)i(and)f(E.)g(B.)f(Ras-)37
2310 y(m)m(ussen.)51 b(Priortized)36 b(in)m(terrupts)f(in)f(legos.)51
b(T)-8 b(ec)m(h-)37 2423 y(nical)31 b(rep)s(ort,)g(A)m(UC,)f(2000.)1835
6065 y(14)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
